{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "contract Booster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexFeeRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexFraxVoterProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonCompliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEnd2End",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1312:18932:66:-:0;;;;;;;1594:4:0;1312:18932:66;;1594:4:0;1312:18932:66;;;1594:4:0;1312:18932:66;4050:42;1312:18932;;;;;;1597:42;1312:18932;1597:42;1312:18932;;;1597:42;1312:18932;1672:42;1312:18932;1672:42;1312:18932;;;1672:42;1312:18932;1788:42;1312:18932;1780:51;1312:18932;;;1780:51;1312:18932;1869:42;1312:18932;1869:42;1312:18932;;;1869:42;1312:18932;2031:42;1312:18932;2006:68;1312:18932;;;2006:68;1312:18932;2137:42;1312:18932;2129:51;1312:18932;;;2129:51;1312:18932;2231:42;1312:18932;2223:51;1312:18932;;;2223:51;1312:18932;2318:42;1312:18932;2310:51;1312:18932;;;2310:51;1312:18932;2407:42;1312:18932;2399:51;1312:18932;;;2399:51;1312:18932;2485:42;1312:18932;2485:42;1312:18932;;;2485:42;1312:18932;2639:42;1312:18932;2631:51;1312:18932;;;2631:51;1312:18932;2750:42;1312:18932;2742:51;1312:18932;;;2742:51;1312:18932;2904:42;1312:18932;2896:51;1312:18932;;;2896:51;1312:18932;2996:42;1312:18932;2988:51;1312:18932;;;2988:51;1312:18932;3264:42;1312:18932;3258:49;1312:18932;;;3258:49;1312:18932;3410:42;1312:18932;3402:51;1312:18932;;;3402:51;1312:18932;3494:42;1312:18932;3488:49;1312:18932;;;3488:49;1312:18932;3640:42;1312:18932;3632:51;1312:18932;;;3632:51;1312:18932;3793:42;1312:18932;3785:51;1312:18932;;;3785:51;1312:18932;3870:42;1312:18932;3870:42;1312:18932;;;3870:42;1312:18932;3960:42;1312:18932;3952:51;1312:18932;;;3952:51;1312:18932;4042:51;1312:18932;;;4042:51;1312:18932;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1312:18932:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:71;1312:18932;2456:71;;;1312:18932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1518:20;1312:18932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:78;1312:18932;;;;;;;;;;;;;;;;;;;;;;3601:82;1312:18932;;;;;;;;;;;;;;;;;;;;;;3373:80;1312:18932;;;;;;;;;;;;;;;;;;;;;;2953:86;1312:18932;;;;;;;;;;;;;;;;;;;;;;3231:76;1312:18932;;;;;;;;;;;;;;;;;;;;;;1544:18;1312:18932;;;;;;;;;;;;;;;;;;;;2456:71;1312:18932;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3459:78;1312:18932;;;;;;;;;;;;;;;;;;;;;;3843:69;1312:18932;;;;;;;;;;;;;;;;;;;;;;1573:66;1312:18932;;;;;;;;;;;;;;;;;;;;;;4016:77;1312:18932;;;;;;;;;;;;;;;;;;;;;;1410:21;1312:18932;;;;;;;;;;;;;;;;;;;;;;1362:42;1312:18932;;;;;;;;;;;;;;;;;;;;;;2098:82;1312:18932;;;;;;;;;;;;;;;;;;;;;;1964:110;1312:18932;;;;;;;;;;;;;;;;;;;;;;3689:30;1312:18932;;;;;;;;;;;;;;;;;;;;;;2186:88;1312:18932;;;;;;;;;;;;;;;;;;;;;;1747:84;1312:18932;;;;;;;;;;;;;;;;;;;;;;2706:87;1312:18932;;;;;;;;;;;;;;;;;;;;;;3725:27;1312:18932;;;;;;;;;;;;;;;;;;;;;;1645:69;1312:18932;;;;;;;;;;;;;;;;;;;;;;1837:74;1312:18932;;;;;;;;;;;;;;;;;;;;;;2858:89;1312:18932;;;;;;;;;;;;;;;;;;;;;;2600:82;1312:18932;;;;;;;;;;;;;;;;;;;;;;1483:28;1312:18932;;;;;;;;;;;;;;;;;;;;;;2367:83;1312:18932;;;;;;;;;;;;;;;;;;;;;;;1671:64:0;;;;;;;;;;;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;;;;1671:64:0;1312:18932:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10844:8;1312:18932;;;;1248:14:1;1312:18932:66;10928:11;1248:14:1;1312:18932:66;;10914:26;;;;1312:18932;;10914:26;1248:14:1;10914:26:66;;1312:18932;10914:26;;1312:18932;10914:26;;1312:18932;10914:26;;1312:18932;10914:26;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;;;11000:11;1248:14:1;1312:18932:66;;;10994:26;;;;1248:14:1;10994:26:66;;;;;;;;10950:72;10994:26;;;;;1312:18932;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;10950:72;:::i;:::-;1312:18932;11063:12;1248:14:1;1312:18932:66;;;11099:35;;1312:18932;11099:35;;;1312:18932;11099:35;;1671:64:0;1312:18932:66;1671:64:0;;;;1312:18932:66;1671:64:0;;;;;;;;;;1312:18932:66;1671:64:0;;;1312:18932:66;1671:64:0;11088:9:66;1312:18932;11063:72;;11099:35;;11063:72;;;;;;:::i;:::-;;1248:14:1;;1312:18932:66;11159:6;1248:14:1;1312:18932:66;;10928:11;1248:14:1;1312:18932:66;;;;;11171:58;;;;;;1312:18932;11171:58;;1312:18932;;11171:58;;;;;:::i;:::-;11159:71;;;;;;;:::i;:::-;11145:85;;;1312:18932;1671:64:0;;;11251:31:66;;1312:18932;;;;;11251:31;1312:18932;;;;;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;11311:9;9081:5:0;;9077:99;;;;1312:18932:66;1248:14:1;;;;1312:18932:66;;11159:6;1248:14:1;1312:18932:66;;;11446:13;1248:14:1;1312:18932:66;;;11411:68;;;;;1248:14:1;11411:68:66;;1312:18932;11411:68;;1312:18932;11461:17;1312:18932;;;1671:64:0;11411:68:66;;;;;;;;1312:18932;1248:14:1;1312:18932:66;11446:13;1248:14:1;1312:18932:66;;;1671:64:0;;1312:18932:66;1671:64:0;;;;1312:18932:66;1671:64:0;;;;;;1312:18932:66;1671:64:0;;;;;1312:18932:66;;;11088:9;1312:18932;11528:33;;1312:18932;;1248:14:1;11489:84:66;;1312:18932;;;1671:64:0;;;1312:18932:66;11489:84;;1312:18932;11528:33;1312:18932;;;;;;;;;;;;11311:9;1312:18932;;;1671:64:0;11489:84:66;;;;;;;;1312:18932;1248:14:1;1312:18932:66;11604:9;1248:14:1;1312:18932:66;;;10928:11;1248:14:1;1312:18932:66;;;;11594:43;;;;11171:58;11594:43;;1312:18932;11594:43;;1312:18932;11594:43;;;;;;;;;;;1312:18932;;;;;;;;;1671:64:0;;;:::i;:::-;11000:11:66;1671:64:0;;1312:18932:66;;;;;;;;;;11311:9;7096:6:0;;;7092:100;;;;1312:18932:66;1248:14:1;;;;1312:18932:66;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;;1248:14:1;11874:50:66;;;1312:18932;11874:50;;1312:18932;;11874:50;1312:18932;11874:50;;;;;;;;;;;;;1312:18932;;;;;;;;;;;;11964:47;;;;1248:14:1;11964:47:66;;;1312:18932;11964:47;;1312:18932;11964:47;;;;;;;;;;;1312:18932;;;;;1671:64:0;1312:18932:66;;;12021:44;1312:18932;;;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;12021:44;:::i;:::-;12075:70;1671:64:0;1312:18932:66;;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;12075:70;:::i;:::-;12188:39;1312:18932;;1671:64:0;;;:::i;:::-;11159:6:66;1671:64:0;;1312:18932:66;;;;;12188:39;:::i;:::-;1312:18932;;;12252:57;;;;1248:14:1;12252:57:66;;11311:9;1312:18932;12252:57;;1671:64:0;12295:12:66;1312:18932;;;1671:64:0;12252:57:66;;;;;;;;;;1312:18932;12319:40;1312:18932;;;;;;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;12319:40;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;;11000:11;1248:14:1;1312:18932:66;;;;12387:50;;;;1248:14:1;12387:50:66;;1312:18932;12387:50;;1312:18932;12387:50;;;;;;;;;;;1312:18932;;;;;;;;;;;;;;;;;;;;12447:83;1312:18932;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;;12447:83;;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;;11000:11;1248:14:1;1312:18932:66;;;;12573:47;;;;1248:14:1;12573:47:66;;1312:18932;12573:47;;1312:18932;12573:47;;;;;;;;;;;1312:18932;;;;;;12630:46;1312:18932;;;;;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;12630:46;:::i;:::-;12686:76;1312:18932;;;;;;1671:64:0;;;:::i;:::-;11446:13:66;1671:64:0;;1312:18932:66;;;;;12686:76;:::i;:::-;12830:12;;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;1248:14:1;1312:18932:66;12984:13;1248:14:1;1312:18932:66;;;1248:14:1;12947:52:66;;;1312:18932;12947:52;;1312:18932;;12947:52;1312:18932;12947:52;;;;;;;;;;;;;1312:18932;;;;;;;;13044:49;1248:14:1;13044:49:66;;1312:18932;13044:49;;1312:18932;;13044:49;1312:18932;13044:49;;;;;;;;;;;;;1312:18932;;;;;;;;;;;11000:11;1248:14:1;1312:18932:66;;;13103:39;;;;;1248:14:1;13103:39:66;;1312:18932;13103:39;;1312:18932;13103:39;;;;;;;;1312:18932;1248:14:1;1312:18932:66;11000:11;1248:14:1;1312:18932:66;;;12984:13;1248:14:1;1312:18932:66;;;;;;;;;;;;;;;13265:92;;;;;1248:14:1;13265:92:66;;1312:18932;13265:92;;1312:18932;;;;1671:64:0;1312:18932:66;;;1671:64:0;1312:18932:66;;;;;;;;;1671:64:0;13265:92:66;;;;;;;1248:14:1;13265:92:66;;;1312:18932;;;;;;;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;13499:50;1248:14:1;13499:50:66;;1312:18932;13499:50;;1312:18932;;13499:50;1312:18932;13499:50;;;;;;;;;;;;;1312:18932;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;13585:52;;;;1248:14:1;13585:52:66;;1312:18932;13585:52;;1312:18932;13585:52;;;;;;;;;;;1312:18932;;;;;;13647:83;1312:18932;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;13647:83;:::i;:::-;1312:18932;;;;;;;;;;;;;;;;;13740:99;1312:18932;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;13740:99;;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;13924:47;1248:14:1;13924:47:66;;1312:18932;13924:47;;1312:18932;;13924:47;1312:18932;13924:47;;;;;;;;;;;;;1312:18932;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;14014:49;;;;1248:14:1;14014:49:66;;1312:18932;14014:49;;1312:18932;14014:49;;;;;;;;;;;1312:18932;;;;;;14073:122;1312:18932;;;;14112:49;1312:18932;;;;;;;;14112:49;;:::i;:::-;1312:18932;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;14073:122;:::i;:::-;14205:127;1312:18932;;;;14246:51;1312:18932;;;;;;;;14246:51;;:::i;:::-;1312:18932;;1671:64:0;;;;:::i;:::-;11063:12:66;1671:64:0;;1312:18932:66;;;;;14205:127;:::i;:::-;1312:18932;14428:17;;;;1312:18932;;;1248:14:1;14428:17:66;;;;1312:18932;14428:17;;1312:18932;14428:17;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;11000:11;1248:14:1;1312:18932:66;;;12984:13;1248:14:1;1312:18932:66;;;;;;;;;;;;;;;14455:92;;;;;1248:14:1;14455:92:66;;1312:18932;14455:92;;1312:18932;;;;1671:64:0;1312:18932:66;;;1671:64:0;1312:18932:66;;;;;14544:2;1312:18932;;;1671:64:0;14455:92:66;;;;;;;;1312:18932;14603:12;;;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;;12984:13;1248:14:1;1312:18932:66;;;;14731:52;;;;1248:14:1;14731:52:66;;1312:18932;14731:52;;1312:18932;14731:52;;;;;;;;;;1312:18932;14722:135;1312:18932;;;;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;14722:135;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;;11000:11;1248:14:1;1312:18932:66;;;;14876:50;;;;1248:14:1;14876:50:66;;1312:18932;14876:50;;1312:18932;14876:50;;;;;;;;;;1312:18932;14867:129;1312:18932;;;;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;14867:129;:::i;:::-;11000:11;1248:14:1;12984:13:66;1248:14:1;1312:18932:66;;;;;;;;;;;;;;;1248:14:1;15079:105:66;;1312:18932;;;;;15079:105;;1312:18932;;;;1671:64:0;;;;1312:18932:66;;;1671:64:0;;;;12490:1:66;1312:18932;;;;;;;1671:64:0;1312:18932:66;;;;;;;;;;;;;15079:105;;;;;;;1248:14:1;15079:105:66;;;1312:18932;;;;;;;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;15316:50;1248:14:1;15316:50:66;;1312:18932;15316:50;;1312:18932;;15316:50;1312:18932;15316:50;;;;;;;;;;;;;1312:18932;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;15402:52;;;;1248:14:1;15402:52:66;;1312:18932;15402:52;;1312:18932;15402:52;;;;;;;;;;;1312:18932;;;;;;15464:91;1312:18932;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;15464:91;:::i;:::-;15565:97;1312:18932;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;15565:97;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;15747:47;1248:14:1;15747:47:66;;1312:18932;15747:47;;1312:18932;;15747:47;1312:18932;15747:47;;;;;;;;;;;;;1312:18932;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;15837:49;;;;1248:14:1;15837:49:66;;1312:18932;15837:49;;1312:18932;15837:49;;;;;;;;;;;1312:18932;;;;;;15896:121;1312:18932;;;;15935:47;1312:18932;;;;;;;;15935:47;;:::i;:::-;1312:18932;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;15896:121;:::i;:::-;16027:125;1312:18932;;;;16068:49;1312:18932;;;;;;;;16068:49;;:::i;:::-;1312:18932;;1671:64:0;;;;:::i;:::-;11063:12:66;1671:64:0;;1312:18932:66;;;;;16027:125;:::i;:::-;1312:18932;16236:17;;;;1312:18932;;;1248:14:1;16236:17:66;;;;1312:18932;16236:17;;1312:18932;16236:17;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;11000:11;1248:14:1;1312:18932:66;;;16298:3;1248:14:1;1312:18932:66;;;;;;;;;;16263:74;;;;;1248:14:1;16263:74:66;;1312:18932;16263:74;;1312:18932;;;;1671:64:0;10844:8:66;1312:18932;;;1671:64:0;1312:18932:66;;;;;;;;;1671:64:0;16263:74:66;;;;;;;;1312:18932;16440:12;;;:::i;:::-;1312:18932;11874:7;1248:14:1;1312:18932:66;;11000:11;1248:14:1;1312:18932:66;;;1248:14:1;16485:50:66;;;1312:18932;16485:50;;1312:18932;;16485:50;1312:18932;16485:50;;;;;;;;;;;;;1312:18932;;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;16570:52;;;;1248:14:1;16570:52:66;;;1312:18932;16570:52;;1312:18932;16570:52;;;;;;;;;;;1312:18932;;;;;;;;;;;16720:60;1312:18932;;;;1671:64:0;1312:18932:66;;;16720:60;;:::i;:::-;1312:18932;;;;;;;;;;;;;;;16720:85;1312:18932;;;16720:85;;:::i;:::-;1312:18932;;;;;;1248:14:1;16654:176:66;;1312:18932;;;;;;16654:176;;1312:18932;;;;1671:64:0;;;;1312:18932:66;;;1671:64:0;12490:1:66;1312:18932;;;;;;;1671:64:0;;;;1312:18932:66;;;;;;;;16654:176;;;;;;;1248:14:1;16654:176:66;;;1312:18932;;;;;;;11874:7;1248:14:1;1312:18932:66;1248:14:1;1312:18932:66;11000:11;1248:14:1;1312:18932:66;;;16915:47;1248:14:1;16915:47:66;;1312:18932;16915:47;;1312:18932;;16915:47;1312:18932;16915:47;;;;;;;;;;;;;1312:18932;;;;;;;;12984:13;1248:14:1;1312:18932:66;;;;17005:49;;;;1248:14:1;17005:49:66;;1312:18932;17005:49;;1312:18932;17005:49;;;;;;;;;;1312:18932;17206:188;1312:18932;;;;;;17064:132;1312:18932;;;;1671:64:0;1312:18932:66;;;;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;17064:132;:::i;:::-;17248:97;1312:18932;;;;;17284:60;1312:18932;;;;;1671:64:0;1312:18932:66;;;;;;;17284:60;;:::i;:::-;17248:97;;:::i;:::-;1312:18932;;1671:64:0;;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;;;17206:188;:::i;:::-;1312:18932;17405:14;;;;1312:18932;;;1248:14:1;17405::66;;;;1312:18932;17405:14;;1312:18932;17405:14;;;;;;;;1312:18932;;17430:33;1312:18932;;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;;1312:18932:66;;;;;17430:33;:::i;:::-;1312:18932;;17405:14;;;;:::i;:::-;1312:18932;;17405:14;;;;;1312:18932;;1248:14:1;1312:18932:66;;1248:14:1;;;;17005:49:66;;1312:18932;17005:49;;1312:18932;17005:49;;;;;;1312:18932;17005:49;;;:::i;:::-;;;1312:18932;;;;17206:188;1312:18932;;17005:49;;1312:18932;;;;17005:49;;;-1:-1:-1;17005:49:66;;;1312:18932;;1248:14:1;1312:18932:66;;1248:14:1;;;;16915:47:66;;;1312:18932;16915:47;;1312:18932;16915:47;;;;;;1312:18932;16915:47;;;:::i;:::-;;;1312:18932;;;;;16915:47;;;;;;-1:-1:-1;16915:47:66;;;1312:18932;;1248:14:1;1312:18932:66;;1248:14:1;;;;16654:176:66;;;;1312:18932;16654:176;1312:18932;16654:176;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1312:18932;;;;;;;;;;16570:52;;;1312:18932;16570:52;;1312:18932;16570:52;;;;;;1312:18932;16570:52;;;:::i;:::-;;;1312:18932;;;;;16570:52;;;;;;-1:-1:-1;16570:52:66;;;1312:18932;;1248:14:1;1312:18932:66;;1248:14:1;;;;16485:50:66;;;1312:18932;16485:50;;1312:18932;16485:50;;;;;;1312:18932;16485:50;;;:::i;:::-;;;1312:18932;;;;;16485:50;;;;;;-1:-1:-1;16485:50:66;;16263:74;;;1312:18932;16263:74;1312:18932;16263:74;;;;;;;:::i;:::-;;;;16236:17;;;;:::i;:::-;1312:18932;;16236:17;;;;1312:18932;;;;15837:49;;;1312:18932;15837:49;;1312:18932;15837:49;;;;;;1312:18932;15837:49;;;:::i;:::-;;;1312:18932;;;;;15837:49;;;;;;-1:-1:-1;15837:49:66;;15747:47;;;1312:18932;15747:47;;1312:18932;15747:47;;;;;;1312:18932;15747:47;;;:::i;:::-;;;1312:18932;;;;;15747:47;;;;;;-1:-1:-1;15747:47:66;;15402:52;;;1312:18932;15402:52;;1312:18932;15402:52;;;;;;1312:18932;15402:52;;;:::i;:::-;;;1312:18932;;;;;15402:52;;;;;;-1:-1:-1;15402:52:66;;15316:50;;;1312:18932;15316:50;;1312:18932;15316:50;;;;;;1312:18932;15316:50;;;:::i;:::-;;;1312:18932;;;;;15316:50;;;;;;-1:-1:-1;15316:50:66;;15079:105;;;;1312:18932;15079:105;1312:18932;15079:105;;;;;;;:::i;:::-;;;;;;14876:50;;1312:18932;14876:50;;1312:18932;14876:50;;;;;;1312:18932;14876:50;;;:::i;:::-;;;1312:18932;;;;14867:129;1312:18932;;14876:50;;;;;-1:-1:-1;14876:50:66;;14731:52;;1312:18932;14731:52;;1312:18932;14731:52;;;;;;1312:18932;14731:52;;;:::i;:::-;;;1312:18932;;;;14722:135;1312:18932;;14731:52;;;;;-1:-1:-1;14731:52:66;;14455:92;;;1312:18932;14455:92;1312:18932;14455:92;;;;;;;:::i;:::-;;;;14428:17;;;;:::i;:::-;1312:18932;;14428:17;;;;14014:49;;;1312:18932;14014:49;;1312:18932;14014:49;;;;;;1312:18932;14014:49;;;:::i;:::-;;;1312:18932;;;;;14014:49;;;;;;-1:-1:-1;14014:49:66;;13924:47;;;1312:18932;13924:47;;1312:18932;13924:47;;;;;;1312:18932;13924:47;;;:::i;:::-;;;1312:18932;;;;;13924:47;;;;;;-1:-1:-1;13924:47:66;;1312:18932;;;;;;;;;;13585:52;;;1312:18932;13585:52;;1312:18932;13585:52;;;;;;1312:18932;13585:52;;;:::i;:::-;;;1312:18932;;;;;13585:52;;;;;;-1:-1:-1;13585:52:66;;13499:50;;;1312:18932;13499:50;;1312:18932;13499:50;;;;;;1312:18932;13499:50;;;:::i;:::-;;;1312:18932;;;;;13499:50;;;;;;-1:-1:-1;13499:50:66;;13265:92;;;;1312:18932;13265:92;1312:18932;13265:92;;;;;;;:::i;:::-;;;;;;13103:39;;;;;;;;;;:::i;:::-;1312:18932;13103:39;;;;1312:18932;;;;;;1671:64:0;1312:18932:66;;;;13103:39;;;1312:18932;;;;;;;;;;;;;1671:64:0;1312:18932:66;;;;;;;;;;;;1671:64:0;1312:18932:66;;;1671:64:0;;:::i;:::-;1312:18932:66;;;13103:39;;;1312:18932;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13103:39;;;;;;1312:18932;;;;;;;;;;;;;;;;;;;;;;;1671:64:0;;;;;1312:18932:66;1671:64:0;;1312:18932:66;;;;;;;;13044:49;;;;1312:18932;13044:49;;1312:18932;13044:49;;;;;;1312:18932;13044:49;;;:::i;:::-;;;1312:18932;;;;;;;;13044:49;;;;;-1:-1:-1;13044:49:66;;12947:52;;;;1312:18932;12947:52;;1312:18932;12947:52;;;;;;1312:18932;12947:52;;;:::i;:::-;;;1312:18932;;;;;;;12947:52;;;;;;-1:-1:-1;12947:52:66;;12573:47;;;1312:18932;12573:47;;1312:18932;12573:47;;;;;;1312:18932;12573:47;;;:::i;:::-;;;1312:18932;;;;;12573:47;;;;;;-1:-1:-1;12573:47:66;;12387:50;;;1312:18932;12387:50;;1312:18932;12387:50;;;;;;1312:18932;12387:50;;;:::i;:::-;;;1312:18932;;;;;12387:50;;;;;;-1:-1:-1;12387:50:66;;12252:57;;1312:18932;12252:57;;1312:18932;12252:57;;;;;;1312:18932;12252:57;;;:::i;:::-;;;1312:18932;;;;12319:40;1312:18932;;12252:57;;;;;-1:-1:-1;12252:57:66;;11964:47;;;;;1312:18932;11964:47;;1312:18932;11964:47;;;;;;1312:18932;11964:47;;;:::i;:::-;;;1312:18932;;;;;;;;;11964:47;;;;;-1:-1:-1;11964:47:66;;11874:50;;;;1312:18932;11874:50;;1312:18932;11874:50;;;;;;1312:18932;11874:50;;;:::i;:::-;;;1312:18932;;;;;;;;;;11874:50;;;;;-1:-1:-1;11874:50:66;;7092:100:0;7123:30;;1312:18932:66;;;7123:30:0;;;;;:::i;:::-;;;;6809:200;;7092:100;;;;;6809:200;6899:30;1312:18932:66;6840:40:0;1312:18932:66;;;;;;;;;;1248:14:1;1312:18932:66;;1248:14:1;;1312:18932:66;;1671:64:0;1312:18932:66;;;6840:40:0;1312:18932:66;;6899:30:0;;;;;;1312:18932:66;;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;1248:14:1;1312:18932:66;;;;;1671:64:0;1312:18932:66;6899:30:0;;;;1312:18932:66;;6948:30:0;;;1312:18932:66;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;11311:9;1248:14:1;1312:18932:66;;;;;1671:64:0;1312:18932:66;6948:30:0;;;;;;:::i;:::-;6809:200;;;11594:43:66;;;1312:18932;11594:43;;1312:18932;11594:43;;;;;;1312:18932;11594:43;;;:::i;:::-;;;1312:18932;;;;;11594:43;;;;;;-1:-1:-1;11594:43:66;;11489:84;1312:18932;11489:84;;;;;;;;;;;;:::i;:::-;;;1312:18932;;;;11489:84;;;;;;;;1312:18932;;;1671:64:0;;1312:18932:66;;-1:-1:-1;1312:18932:66;;-1:-1:-1;1312:18932:66;;;;;;;;;;1248:14:1;1312:18932:66;;1671:64:0;;1312:18932:66;1671:64:0;;1312:18932:66;1671:64:0;1312:18932:66;;1671:64:0;11411:68:66;;;1312:18932;11411:68;1312:18932;11411:68;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;9077:99:0;9107:30;;1312:18932:66;;;9107:30:0;;;;;:::i;:::-;;;;8794:200;;9077:99;;;;;8794:200;8884:30;1312:18932:66;8824:41:0;1312:18932:66;;;;;;;;;;1248:14:1;1312:18932:66;;1248:14:1;;1312:18932:66;;1671:64:0;1312:18932:66;;;8824:41:0;1312:18932:66;;8884:30:0;;;;;;1312:18932:66;;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;1248:14:1;1312:18932:66;;;;;1671:64:0;1312:18932:66;8884:30:0;;;;1312:18932:66;;8933:30:0;;;1312:18932:66;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;11311:9;1248:14:1;1312:18932:66;;;;;1671:64:0;1312:18932:66;8933:30:0;;;;;;:::i;:::-;8794:200;;;10994:26:66;;;;1312:18932;10994:26;1312:18932;10994:26;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;10914;;;;:::i;:::-;1312:18932;;10914:26;;;;1312:18932;;;;;;;;;;;;;;2280:81;1312:18932;;;;;;;;;;;;;;;;;;;;;;1248:14:1;;4387:75:66;;;;4395:66;1312:18932;4387:75;;1671:64:0;4387:75:66;;1248:14:1;4387:75:66;1312:18932;4387:75;;;;;;;;1312:18932;4387:75;;;;;1312:18932;;;1248:14:1;;4379:83:66;1248:14:1;;;4379:83:66;1248:14:1;1312:18932:66;4472:26;;;;1312:18932;;4472:26;1248:14:1;4472:26:66;;1312:18932;4472:26;;1312:18932;4487:10;1248:14:1;;;1671:64:0;4472:26:66;;1248:14:1;4472:26:66;;1312:18932;4472:26;;;;;;;;1312:18932;1248:14:1;;;1312:18932:66;4379:83;1248:14:1;1312:18932:66;4558:24;1312:18932;4558:24;;;;1312:18932;;1248:14:1;4558:24:66;;;;1312:18932;4558:24;;1312:18932;;1248:14:1;;;;;;;;;;;;;;4558:24:66;;1248:14:1;4558:24:66;;1312:18932;4558:24;;;;;;;;;;;1312:18932;;;;;4599:75;;;4607:66;1312:18932;4599:75;;1671:64:0;4387:75:66;4599;1248:14:1;4599:75:66;1312:18932;4599:75;;;;;;1312:18932;4599:75;;;;;1312:18932;;;4593:81;1248:14:1;;;;;;;4593:81:66;1248:14:1;1312:18932:66;4684:24;;;;1312:18932;;;4684:24;1248:14:1;4684:24:66;;1312:18932;;;4684:24;;1312:18932;4487:10;1248:14:1;;;1671:64:0;4684:24:66;;1248:14:1;4684:24:66;;1312:18932;4684:24;;;;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;4593:81;1248:14:1;1312:18932:66;;4718:20;;;;1312:18932;;4718:20;;;1312:18932;4718:20;;1312:18932;;1248:14:1;;;;;;;;;;;;;;4718:20:66;;1248:14:1;4718:20:66;;1312:18932;4718:20;;;;;;;;1312:18932;1248:14:1;;4787:15:66;1248:14:1;;;;;;;;;;;;;4787:15:66;1248:14:1;;;;;;4787:15:66;1312:18932;1248:14:1;;;4816:42:66;1248:14:1;;;;;;;4918:12:66;1248:14:1;;;;;;;;;;;4918:12:66;1248:14:1;;;;;;4936:7:66;1248:14:1;;;;1312:18932:66;4387:75;1248:14:1;1312:18932:66;5061:19;1248:14:1;;;;;;;;;;;5061:19:66;1248:14:1;;;;;;;;;;;;;;;;1312:18932:66;5144:8;1248:14:1;1312:18932:66;5117:13;1248:14:1;;;;;;;;;;;5117:13:66;1248:14:1;;;;;;;;;;;;;;;;5214:17:66;1248:14:1;;;;;;;;;;;5214:17:66;1248:14:1;;;;;;5214:17:66;1312:18932;1248:14:1;;;;;;;;;;1312:18932:66;5311:11;1248:14:1;1312:18932:66;;5303:32;;;;1312:18932;;5303:32;1248:14:1;5303:32:66;;1312:18932;5303:32;;1312:18932;4487:10;1248:14:1;;;1671:64:0;5303:32:66;;1248:14:1;5303:32:66;;1312:18932;5303:32;;;;;;;;1312:18932;1248:14:1;1312:18932:66;5353:13;1248:14:1;1312:18932:66;;5345:34;;;;1312:18932;;5345:34;1248:14:1;5345:34:66;;1312:18932;5345:34;;1312:18932;4487:10;1248:14:1;;;1671:64:0;5345:34:66;;1248:14:1;5345:34:66;;1312:18932;5345:34;;;;;;;;1312:18932;5389:34;;1312:18932;5389:34;;;;1312:18932;;;1248:14:1;5389:34:66;;5405:4;1312:18932;5389:34;;1312:18932;4487:10;1248:14:1;;;1671:64:0;5389:34:66;;1248:14:1;5389:34:66;;1312:18932;5389:34;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;5612:20;1248:14:1;1312:18932:66;1248:14:1;1312:18932:66;5634:18;1248:14:1;1312:18932:66;;1248:14:1;;1312:18932:66;;;5600:72;;;;;;;;;;;;;;;;;;;;;;;1312:18932;4387:75;5600:72;;;1248:14:1;1312:18932:66;;5600:72;;;1248:14:1;1312:18932:66;1248:14:1;5600:72:66;;;;;;;;;;;;;5714:19;1312:18932;1248:14:1;5698:13:66;1248:14:1;1312:18932:66;;;5714:19;:::i;:::-;5682:52;1312:18932;5682:52;;;;;1312:18932;;;;;5682:52;;;;;1248:14:1;5682:52:66;;1312:18932;5682:52;;;:::i;:::-;;;;1312:18932;5682:52;;;;;;;;1312:18932;1248:14:1;;1312:18932:66;5947:14;1248::1;1312:18932:66;;;5817:145;;;;;;5600:72;5817:145;;;;;;;;;;;;;;5405:4;5817:145;;;1312:18932;;;;4387:75;1248:14:1;;;;;5117:13:66;1248:14:1;;;;;;;;;;;;5405:4:66;1248:14:1;;-1:-1:-1;1248:14:1;;;;;;5817:145:66;;;;;;1248:14:1;;1312:18932:66;5817:145;;;1248:14:1;;4387:75:66;4787:15;1248:14:1;;;;;;;;;1312:18932:66;1248:14:1;;;;;;5817:145:66;;;;;;1248:14:1;;;5817:145:66;;;1248:14:1;;4387:75:66;4918:12;1248:14:1;;;;;;;4918:12:66;1248:14:1;;;;;;;;;;;5817:145:66;;;;;;1248:14:1;;;5817:145:66;;;1248:14:1;;4387:75:66;5214:17;1248:14:1;;;;;;;;;1312:18932:66;1248:14:1;;;;;;5817:145:66;;;;;;1248:14:1;;;5817:145:66;;;1248:14:1;;4387:75:66;5061:19;1248:14:1;;;;;;;5061:19:66;1312:18932;1248:14:1;;;1312:18932:66;1248:14:1;;;;;;-1:-1:-1;;;5817:145:66;;;1248:14:1;;1312:18932:66;5817:145;;;;;;;;;;1312:18932;;5998:24;5804:158;1248:14:1;;;;;;;5804:158:66;1248:14:1;;1312:18932:66;5988:7;1248:14:1;1312:18932:66;;;;5998:24;:::i;:::-;5972:51;1312:18932;5972:51;;;;;1312:18932;;;;;5972:51;;;;;1248:14:1;5972:51:66;;1312:18932;5972:51;;;:::i;:::-;;;;1312:18932;5972:51;;;;;;;;1248:14:1;;;1312:18932:66;5988:7;1248:14:1;1312:18932:66;;;6121:72;1248:14:1;6121:72:66;;6149:42;1312:18932;6121:72;;1312:18932;4387:75;6121:72;1248:14:1;6121:72:66;;;;;;;;;1312:18932;6121:72;6093:101;6121:72;;;;;1248:14:1;;;;:::i;:::-;6093:101:66;:::i;:::-;4387:75;1312:18932;5698:13;1248:14:1;1312:18932:66;;;6247:21;;;;1248:14:1;6247:21:66;;;;;;;;;6279:41;6247:21;6204:65;6247:21;;;;;1248:14:1;;;;:::i;6204:65:66:-;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;6279:41:66;:::i;:::-;6330:47;1312:18932;5804:158;1248:14:1;1312:18932:66;;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;6330:47:66;:::i;:::-;6881:71;1312:18932;6930:8;1248:14:1;1312:18932:66;6922:29;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;6881:71:66;:::i;:::-;6962:78;1312:18932;7015:11;1248:14:1;1312:18932:66;7007:32;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;6962:78:66;:::i;:::-;1312:18932;;7117:11;;;;;5600:72;7117:11;;;;;;;;;;;;;;;;;;;;;;;;;1312:18932;;6930:8;1248:14:1;;;;;;6930:8:66;1248:14:1;7138:72:66;1312:18932;;;;;7180:29;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;7138:72:66;:::i;:::-;1312:18932;5988:7;1248:14:1;1312:18932:66;1248:14:1;1312:18932:66;5947:14;1248::1;1312:18932:66;1248:14:1;1312:18932:66;7289:19;1248:14:1;1312:18932:66;;;;;;;7220:89;;;;1312:18932;1248:14:1;1312:18932:66;;;;;;7220:89;;;;;1248:14:1;7220:89:66;;5405:4;1312:18932;7220:89;;1312:18932;1248:14:1;;;1312:18932:66;1248:14:1;;;1312:18932:66;1248:14:1;;;1312:18932:66;;;7220:89;;;;;;;;1248:14:1;;1312:18932:66;7015:11;1248:14:1;1312:18932:66;7445:22;1312:18932;6930:8;1248:14:1;1312:18932:66;7445:22;:::i;:::-;7415:53;1312:18932;7415:53;;;;;1312:18932;;;;;7415:53;;;;;1248:14:1;7415:53:66;;1312:18932;7415:53;;;:::i;:::-;;;;1312:18932;7415:53;;;;;;;;1248:14:1;;1312:18932:66;7494:13;1248:14:1;1312:18932:66;7510:22;1312:18932;6930:8;1248:14:1;1312:18932:66;7510:22;:::i;:::-;7478:55;1312:18932;7478:55;;;;;1312:18932;;;;;7478:55;;;;;1248:14:1;7478:55:66;;1312:18932;7478:55;;;:::i;:::-;;;;1312:18932;7478:55;;;;;;;;1248:14:1;;1312:18932:66;7559:9;1248:14:1;1312:18932:66;7571:22;1312:18932;6930:8;1248:14:1;1312:18932:66;7571:22;:::i;:::-;7543:51;1312:18932;7543:51;;;;;1312:18932;;;;;7543:51;;;;;1248:14:1;7543:51:66;;1312:18932;7543:51;;;:::i;:::-;;;;1312:18932;7543:51;;;;;;;;1248:14:1;;;7708:78:66;1312:18932;7015:11;1248:14:1;1312:18932:66;7753:32;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;7708:78:66;:::i;:::-;1248:14:1;4387:75:66;1312:18932;5988:7;1248:14:1;1312:18932:66;;;7825:72;;;;1248:14:1;7825:72:66;;6149:42;1312:18932;7825:72;;1312:18932;7825:72;;;;;;7797:101;7825:72;;;;;1248:14:1;;;:::i;7797:101:66:-;1248:14:1;1312:18932:66;5698:13;1248:14:1;1312:18932:66;;;7951:21;1248:14:1;7951:21:66;;4387:75;7951:21;1312:18932;7951:21;;;;;;;;;4387:75;7951:21;7908:65;7951:21;;;;;1248:14:1;;;:::i;7908:65:66:-;8338:41;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;;;;;8338:41:66;:::i;:::-;1248:14:1;1312:18932:66;;8415:29;;;;1248:14:1;8415:29:66;;;1312:18932;8415:29;;1671:64:0;8415:29:66;;;;;;1312:18932;8415:29;;;;;1248:14:1;1312:18932:66;;1248:14:1;8389:56:66;1248:14:1;;;8389:56:66;1248:14:1;8724:44:66;1312:18932;;1671:64:0;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;8724:44:66;:::i;:::-;1312:18932;;8791:16;;;;;;;;;;5600:72;8791:16;;;;;;;;;;;;;;;;;;;;1312:18932;;1248:14:1;8778:29:66;1248:14:1;;;;;;8778:29:66;1248:14:1;1312:18932:66;;8846:24;;;:::i;:::-;8817:54;1312:18932;8817:54;;;;;1312:18932;;;;;8817:54;;;;;1248:14:1;8817:54:66;;1312:18932;8817:54;;;:::i;:::-;;;;1312:18932;8817:54;;;;;;;;1248:14:1;;1312:18932:66;8778:29;1248:14:1;1312:18932:66;;8881:40;;;;1312:18932;;8881:40;1248:14:1;8881:40:66;;1312:18932;8881:40;;1312:18932;4487:10;1248:14:1;;;1671:64:0;8881:40:66;;1248:14:1;8881:40:66;;1312:18932;8881:40;;;;;;;;1248:14:1;;1312:18932:66;8778:29;1248:14:1;1312:18932:66;;8990:29;;;;1312:18932;;8990:29;1248:14:1;8990:29:66;;1312:18932;8990:29;;1312:18932;8990:29;;1248:14:1;8990:29:66;;1312:18932;8990:29;;;;;;;;1248:14:1;1312:18932:66;;9187:38;1312:18932;;1671:64:0;;;:::i;:::-;4593:81:66;1671:64:0;;1248:14:1;4387:75:66;1248:14:1;;;9187:38:66;:::i;:::-;1248:14:1;4387:75:66;1312:18932;5698:13;1248:14:1;1312:18932:66;1248:14:1;1312:18932:66;;9258:29;;;;1248:14:1;9258:29:66;;;1312:18932;9258:29;;1671:64:0;9258:29:66;;;;;;1312:18932;9258:29;;;;;1248:14:1;1312:18932:66;;1248:14:1;9235:53:66;1248:14:1;;;9235:53:66;1248:14:1;1312:18932:66;;9258:29;;;;4387:75;9258:29;4387:75;9258:29;;;;;;;:::i;:::-;;;;8990;;;;:::i;:::-;1312:18932;;8990:29;;;;;1312:18932;;8881:40;;;;:::i;:::-;1312:18932;;8881:40;;;;8817:54;;;;:::i;:::-;1312:18932;;8817:54;;;;;1312:18932;;;8791:16;1312:18932;;;1248:14:1;;;;;;;;8791:16:66;1248:14:1;1671:64:0;;;;;1312:18932:66;1671:64:0;;8415:29:66;;;;4387:75;8415:29;4387:75;8415:29;;;;;;;:::i;:::-;;;;7951:21;;;;;;;;;;;;;;:::i;:::-;;;;7825:72;;;;4387:75;7825:72;4387:75;7825:72;;;;;;;:::i;:::-;;;;7543:51;;;;:::i;:::-;1312:18932;;7543:51;;;;7478:55;;;;:::i;:::-;1312:18932;;7478:55;;;;7415:53;;;;:::i;:::-;1312:18932;;7415:53;;;;7220:89;;;;:::i;:::-;1312:18932;;7220:89;;;;7117:11;1248:14:1;1671:64:0;;;;;1312:18932:66;1671:64:0;;6247:21:66;;;;4387:75;6247:21;4387:75;6247:21;;;;;;;:::i;5972:51::-;;;;:::i;:::-;1312:18932;;5972:51;;;;1248:14:1;;;1312:18932:66;;;;1248:14:1;;-1:-1:-1;4387:75:66;1248:14:1;;;;;;;;;;;;;;;1312:18932:66;;;;1248:14:1;;-1:-1:-1;4387:75:66;1248:14:1;;;;;;;;;;;;;;;1671:64:0;;1248:14:1;;-1:-1:-1;4387:75:66;1248:14:1;;;;;;;;;;;;;;;1312:18932:66;;;;1248:14:1;;-1:-1:-1;4387:75:66;1248:14:1;;;;;;;;;;;;;;;1312:18932:66;;;;1248:14:1;;-1:-1:-1;4387:75:66;1248:14:1;;;;;;;;;;;;5682:52:66;;;;:::i;:::-;1312:18932;;5682:52;;;;5600:72;1248:14:1;1671:64:0;;;;;1312:18932:66;1671:64:0;;5389:34:66;;;;:::i;:::-;1312:18932;;5389:34;;;;5345;;;;:::i;:::-;1312:18932;;5345:34;;;;5303:32;;;;:::i;:::-;1312:18932;;5303:32;;;;1248:14:1;;1312:18932:66;1248:14:1;5214:17:66;1312:18932;1248:14:1;;1312:18932:66;1248:14:1;4718:20:66;;;;:::i;:::-;1312:18932;;4718:20;;;;4684:24;;;;:::i;:::-;1312:18932;;4684:24;;;;;1312:18932;;;;4599:75;;;;4387;4599;4387;4599;;;;;;;:::i;:::-;;;;4558:24;;;;:::i;:::-;1312:18932;;4558:24;;;;4472:26;;;;:::i;:::-;;;;4387:75;;;;;;;;;;;;;;:::i;:::-;;;;1312:18932;;;;;;;;;;;;;;;;3926:77;1312:18932;;;;;1671:64:0;;;;;;;;:::o;:::-;1312:18932:66;1671:64:0;;;;;;;;;;;1312:18932:66;1671:64:0;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;1312:18932:66;1671:64:0;1312:18932:66;;1671:64:0;;;:::i;:::-;;;;-1:-1:-1;1671:64:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;1312:18932:66;;;1671:64:0;;;;;:::o;1819:584::-;1873:7;1312:18932:66;;;;;;;;;;;;;;;1896:14:0:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;1312:18932:66;;;;;2196:43:0;;;;1312:18932:66;;;1671:64:0;1312:18932:66;1671:64:0;;;1312:18932:66;2196:43:0;;;;;:::i;:::-;2086:175;1671:64;1312:18932:66;;2086:175:0;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;1248:14:1:-;;;;;;;;;;1312:18932:66;;;1248:14:1;;;;;:::o;:::-;;;;-1:-1:-1;1671:64:0;;;:::i;:::-;1312:18932:66;1671:64:0;1312:18932:66;;1671:64:0;;;:::i;:::-;;;;1248:14:1;;;;;:::o;:::-;;1671:64:0;;1248:14:1;;;1671:64:0;;1248:14:1;;;;;;;;;;;;:::i;:::-;1671:64:0;;1248:14:1;;;:::o;:::-;;;1312:18932:66;1248:14:1;;;1312:18932:66;;;1248:14:1;;;;;;;;:::i;:::-;1671:64:0;1312:18932:66;1671:64:0;;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;;;;;:::o;:::-;1671:64:0;1312:18932:66;1671:64:0;;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;;;;;:::o;6108:121:14:-;-1:-1:-1;6108:121:14;;1312:18932:66;;6179:42:14;;1312:18932:66;6179:42:14;;;;;;;;;;;1312:18932:66;;;;;;:::i;:::-;6179:42:14;;;;;;;;:::i;:::-;1671:64:0;852:159:14;591:42;852:159;;;6108:121::o;7056:145::-;-1:-1:-1;7056:145:14;;;;7139:54;1312:18932:66;;7139:54:14;;1312:18932:66;7139:54:14;;;;;;;1312:18932:66;7139:54:14;;;1312:18932:66;;;;;;:::i;:::-;;;;;1671:64:0;7139:54:14;;;;;;;;:::i;7508:145::-;-1:-1:-1;7508:145:14;;;;7591:54;1312:18932:66;;7591:54:14;;1312:18932:66;;7591:54:14;;;;;;;1312:18932:66;7591:54:14;;;1312:18932:66;;;;;;:::i;:::-;;;;;;;7591:54:14;;;;;;;;:::i;1312:18932:66:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;;1248:14:1;1312:18932:66;;;;;;:::i;5469:178:0:-;;5545:6;;;;5541:100;;;5469:178;;;;;:::o;5541:100::-;5572:30;;1312:18932:66;;;;5572:30:0;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;5255:203;1312:18932:66;;;;5286:41:0;1312:18932:66;;;;;;;;;;1248:14:1;1312:18932:66;1248:14:1;;;1312:18932:66;;;;;;5286:41:0;1312:18932:66;;;;;;;;;;1248:14:1;1312:18932:66;;1248:14:1;;1312:18932:66;;;;1671:64:0;5346:31;;;;;1312:18932:66;;;;;;;;;1248:14:1;1312:18932:66;;1248:14:1;;1312:18932:66;;;;1671:64:0;5396:31;;;:::i;:::-;5255:203;;;;;2410:424;2939:104;;;2445:359;;2410:424;1312:18932:66;;;2928:1:0;1312:18932:66;;;2928:1:0;1312:18932:66;2410:424:0:o;2445:359::-;1312:18932:66;;2645:67:0;;;;1312:18932:66;;;;1671:64:0;1312:18932:66;;;1671:64:0;2705:4;1312:18932:66;;;1671:64:0;1312:18932:66;2645:67:0;;1312:18932:66;1671:64:0;;;;;;;;;;;;-1:-1:-1;1671:64:0;2534:196;;1671:64;;;;1312:18932:66;1671:64:0;2534:196;;;1671:64;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;16255:93:5;12835:6:66;16318:15:5;1312:18932:66;16318:15:5;;1312:18932:66;;;;16310:31:5;;;;;;-1:-1:-1;1312:18932:66;16085:59:5;1312:18932:66;;;;16310:31:5;;;;;1248:14:1;16310:31:5;;;;;1671:64:0;16310:31:5;;;;;;;;16255:93;:::o;16310:31::-;;;;:::i;:::-;16255:93::o;16310:31::-;1312:18932:66;;1248:14:1;-1:-1:-1;1248:14:1;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "compliantVault()": "4676077e",
    "convexBooster()": "2cdacb50",
    "convexFeeRegistry()": "d2f4b0ca",
    "convexFraxVoterProxy()": "2ebe9869",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "distributor()": "bfe10928",
    "failed()": "ba414fa6",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFarm()": "6fa89364",
    "fxsToken()": "09dacc04",
    "nonCompliantVault()": "6f539c2e",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testEnd2End()": "185a8d73",
    "vaultImpl()": "ec1e31a0",
    "vaultOwner()": "1f52692b",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"contract Booster\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexFeeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexFraxVoterProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCompliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEnd2End\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiverOwner()\":{\"notice\":\"The receiving vault owner - IS A CONTRACT\"},\"senderOwner()\":{\"notice\":\"The sending vault owner - IS NOT A CONTRACT\"},\"senderVault()\":{\"notice\":\"The sending vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol\":{\"keccak256\":\"0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15\",\"dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol\":{\"keccak256\":\"0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9\",\"dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol\":{\"keccak256\":\"0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613\",\"dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol\":{\"keccak256\":\"0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b\",\"dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol\":{\"keccak256\":\"0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c\",\"dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol\":{\"keccak256\":\"0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94\",\"dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol\":{\"keccak256\":\"0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47\",\"dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b\",\"dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a\",\"dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol\":{\"keccak256\":\"0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763\",\"dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d\",\"dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol\":{\"keccak256\":\"0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78\",\"dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol\":{\"keccak256\":\"0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0\",\"dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexBoosterImprovedInitializer.sol\":{\"keccak256\":\"0xf6a01dc9223567919a1a0d7d4656643015dd699aa917e1dfc406f1f39d907db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85ce0b06c612188d57ba076c0b0f436e3f9a5390a74611329ef5d4a1a08283a\",\"dweb:/ipfs/Qma8Fnof7rYmzuBVQywyKvDTzG8eUx4LQnc2bJUnJXoGah\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0x960495c7821f4713fd66aa4e1ea52d5975935584b132729240c879fac8ee29c5\",\"urls\":[\"bzz-raw://bb46930d835d631ab2c214b25338242de23822a983013afa821a25b771b8506d\",\"dweb:/ipfs/QmRyNqmeU9PnAMjM4HLnUJaKuVte7h7p1EBXJjr2Wn8guq\"]},\"src/TransferrableConvexFrxEthFarm.sol\":{\"keccak256\":\"0xeb19b7fa2c6625fe40a897e5fa748e59705166739e89f77803024129b1a582fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1ecfd68bb5c5e77631f84c5db6c7e2aafec16e8912b9de9cdc6b71b130cd093\",\"dweb:/ipfs/QmdEtunh29JqR4NsXXtnDSm1qQk8WdVrzZrDo5LTAuUyNZ\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0\",\"dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0x69fabcfb7ebb3025a8761e6e9c5a3e5c5d9ceb90ddd8cd8ff645057b626ce0a7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://78b4295719ae0a5025c98ffaa4522d5ae18dffbb04eac4cab9a44d7722948cd8\",\"dweb:/ipfs/QmXsutVTprCDEPdkfLoQB822KnY5gmCD1WS8uGVfurXWr5\"]},\"test/mocks/MockVaultOwner.sol\":{\"keccak256\":\"0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226\",\"dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "contract Booster",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexFeeRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexFraxVoterProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonCompliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEnd2End"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultImpl",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiverOwner()": {
            "notice": "The receiving vault owner - IS A CONTRACT"
          },
          "senderOwner()": {
            "notice": "The sending vault owner - IS NOT A CONTRACT"
          },
          "senderVault()": {
            "notice": "The sending vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol": {
        "keccak256": "0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e",
        "urls": [
          "bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78",
          "dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol": {
        "keccak256": "0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7",
        "urls": [
          "bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb",
          "dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol": {
        "keccak256": "0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd",
        "urls": [
          "bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15",
          "dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol": {
        "keccak256": "0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d",
        "urls": [
          "bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9",
          "dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol": {
        "keccak256": "0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a",
        "urls": [
          "bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613",
          "dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol": {
        "keccak256": "0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c",
        "urls": [
          "bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89",
          "dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol": {
        "keccak256": "0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89",
        "urls": [
          "bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b",
          "dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol": {
        "keccak256": "0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7",
        "urls": [
          "bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c",
          "dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol": {
        "keccak256": "0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665",
        "urls": [
          "bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94",
          "dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol": {
        "keccak256": "0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff",
        "urls": [
          "bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47",
          "dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3",
        "urls": [
          "bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b",
          "dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c",
        "urls": [
          "bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a",
          "dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol": {
        "keccak256": "0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b",
        "urls": [
          "bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763",
          "dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol": {
        "keccak256": "0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285",
        "urls": [
          "bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d",
          "dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol": {
        "keccak256": "0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4",
        "urls": [
          "bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78",
          "dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol": {
        "keccak256": "0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d",
        "urls": [
          "bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0",
          "dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexBoosterImprovedInitializer.sol": {
        "keccak256": "0xf6a01dc9223567919a1a0d7d4656643015dd699aa917e1dfc406f1f39d907db9",
        "urls": [
          "bzz-raw://b85ce0b06c612188d57ba076c0b0f436e3f9a5390a74611329ef5d4a1a08283a",
          "dweb:/ipfs/Qma8Fnof7rYmzuBVQywyKvDTzG8eUx4LQnc2bJUnJXoGah"
        ],
        "license": "MIT"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0x960495c7821f4713fd66aa4e1ea52d5975935584b132729240c879fac8ee29c5",
        "urls": [
          "bzz-raw://bb46930d835d631ab2c214b25338242de23822a983013afa821a25b771b8506d",
          "dweb:/ipfs/QmRyNqmeU9PnAMjM4HLnUJaKuVte7h7p1EBXJjr2Wn8guq"
        ],
        "license": null
      },
      "src/TransferrableConvexFrxEthFarm.sol": {
        "keccak256": "0xeb19b7fa2c6625fe40a897e5fa748e59705166739e89f77803024129b1a582fc",
        "urls": [
          "bzz-raw://a1ecfd68bb5c5e77631f84c5db6c7e2aafec16e8912b9de9cdc6b71b130cd093",
          "dweb:/ipfs/QmdEtunh29JqR4NsXXtnDSm1qQk8WdVrzZrDo5LTAuUyNZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50",
        "urls": [
          "bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0",
          "dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0x69fabcfb7ebb3025a8761e6e9c5a3e5c5d9ceb90ddd8cd8ff645057b626ce0a7",
        "urls": [
          "bzz-raw://78b4295719ae0a5025c98ffaa4522d5ae18dffbb04eac4cab9a44d7722948cd8",
          "dweb:/ipfs/QmXsutVTprCDEPdkfLoQB822KnY5gmCD1WS8uGVfurXWr5"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockVaultOwner.sol": {
        "keccak256": "0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec",
        "urls": [
          "bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226",
          "dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 49403,
    "exportedSymbols": {
      "Address": [
        35396
      ],
      "Booster": [
        37092
      ],
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "FRAXStablecoin": [
        32902
      ],
      "FraxFarmERC20TransfersTest": [
        49402
      ],
      "FraxUnifiedFarm_ERC20_V2": [
        47505
      ],
      "IDeposits": [
        48082
      ],
      "IERC20": [
        35506
      ],
      "IERC20Permit": [
        35430
      ],
      "IFraxFarmERC20": [
        47937
      ],
      "IFraxFarmTransfers": [
        47864
      ],
      "IFraxGaugeController": [
        35066
      ],
      "IPoolRegistry": [
        35928
      ],
      "IProxyOwner": [
        35788
      ],
      "IProxyVault": [
        35845
      ],
      "IStaker": [
        36000
      ],
      "ITransferChecker": [
        35855
      ],
      "IVaultType": [
        35861
      ],
      "SafeERC20": [
        35782
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        40418
      ],
      "VaultOwner": [
        49442
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:20206:66",
    "nodes": [
      {
        "id": 48019,
        "nodeType": "PragmaDirective",
        "src": "39:24:66",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 48020,
        "nodeType": "ImportDirective",
        "src": "65:28:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48021,
        "nodeType": "ImportDirective",
        "src": "94:26:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48023,
        "nodeType": "ImportDirective",
        "src": "205:124:66",
        "nodes": [],
        "absolutePath": "src/TransferrableConvexFrxEthFarm.sol",
        "file": "../src/TransferrableConvexFrxEthFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 47506,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48022,
              "name": "FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47505,
              "src": "213:38:66",
              "typeDescriptions": {}
            },
            "local": "FraxUnifiedFarm_ERC20_V2",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48025,
        "nodeType": "ImportDirective",
        "src": "330:80:66",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 40419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48024,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40418,
              "src": "338:18:66",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48027,
        "nodeType": "ImportDirective",
        "src": "411:54:66",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol",
        "file": "@frax/../Frax/Frax.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 32903,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48026,
              "name": "FRAXStablecoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32902,
              "src": "419:14:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48030,
        "nodeType": "ImportDirective",
        "src": "466:77:66",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 48018,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48028,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47864,
              "src": "474:18:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48029,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47937,
              "src": "494:14:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48031,
        "nodeType": "ImportDirective",
        "src": "544:61:66",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 35067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48033,
        "nodeType": "ImportDirective",
        "src": "606:71:66",
        "nodes": [],
        "absolutePath": "test/mocks/MockVaultOwner.sol",
        "file": "@mocks/MockVaultOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 49443,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48032,
              "name": "MockVaultOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49442,
              "src": "614:14:66",
              "typeDescriptions": {}
            },
            "local": "VaultOwner",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48034,
        "nodeType": "ImportDirective",
        "src": "678:53:66",
        "nodes": [],
        "absolutePath": "src/ConvexBoosterImprovedInitializer.sol",
        "file": "../src/ConvexBoosterImprovedInitializer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49403,
        "sourceUnit": 37093,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48082,
        "nodeType": "ContractDefinition",
        "src": "852:458:66",
        "nodes": [
          {
            "id": 48046,
            "nodeType": "FunctionDefinition",
            "src": "878:104:66",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "887:13:66",
            "parameters": {
              "id": 48042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48039,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "919:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48046,
                  "src": "901:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48036,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "901:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48038,
                    "length": {
                      "hexValue": "32",
                      "id": 48037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "909:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "901:10:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48041,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "937:16:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48046,
                  "src": "929:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:54:66"
            },
            "returnParameters": {
              "id": 48045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48046,
                  "src": "973:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:9:66"
            },
            "scope": 48082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48053,
            "nodeType": "FunctionDefinition",
            "src": "987:68:66",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "996:9:66",
            "parameters": {
              "id": 48049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48048,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1014:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48053,
                  "src": "1006:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:17:66"
            },
            "returnParameters": {
              "id": 48052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48053,
                  "src": "1046:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:9:66"
            },
            "scope": 48082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48062,
            "nodeType": "FunctionDefinition",
            "src": "1060:74:66",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1069:7:66",
            "parameters": {
              "id": 48058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48055,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1085:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48062,
                  "src": "1077:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48057,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1102:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48062,
                  "src": "1094:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:33:66"
            },
            "returnParameters": {
              "id": 48061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48062,
                  "src": "1128:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48059,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:6:66"
            },
            "scope": 48082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48067,
            "nodeType": "FunctionDefinition",
            "src": "1139:43:66",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1148:7:66",
            "parameters": {
              "id": 48065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48064,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1164:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48067,
                  "src": "1156:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:17:66"
            },
            "returnParameters": {
              "id": 48066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:66"
            },
            "scope": 48082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48074,
            "nodeType": "FunctionDefinition",
            "src": "1187:56:66",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1196:7:66",
            "parameters": {
              "id": 48072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48069,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1212:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48074,
                  "src": "1204:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48071,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1229:3:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48074,
                  "src": "1221:11:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:30:66"
            },
            "returnParameters": {
              "id": 48073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:66"
            },
            "scope": 48082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48081,
            "nodeType": "FunctionDefinition",
            "src": "1248:60:66",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "1257:10:66",
            "parameters": {
              "id": 48079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48076,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1276:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48081,
                  "src": "1268:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48078,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "1289:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 48081,
                  "src": "1284:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1267:31:66"
            },
            "returnParameters": {
              "id": 48080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1307:0:66"
            },
            "scope": 48082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 48035,
          "nodeType": "StructuredDocumentation",
          "src": "731:120:66",
          "text": "note: The new initializer was removed due to issues etching, values hardcoded in to the vault code for testing only"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          48082
        ],
        "name": "IDeposits",
        "nameLocation": "862:9:66",
        "scope": 49403,
        "usedErrors": []
      },
      {
        "id": 49402,
        "nodeType": "ContractDefinition",
        "src": "1312:18932:66",
        "nodes": [
          {
            "id": 48087,
            "nodeType": "VariableDeclaration",
            "src": "1362:42:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1394:10:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 48086,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48085,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "1362:24:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47505,
                "src": "1362:24:66"
              },
              "referencedDeclaration": 47505,
              "src": "1362:24:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48090,
            "nodeType": "VariableDeclaration",
            "src": "1410:21:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1423:8:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 48089,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48088,
                "name": "Vault",
                "nameLocations": [
                  "1410:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40418,
                "src": "1410:5:66"
              },
              "referencedDeclaration": 40418,
              "src": "1410:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48093,
            "nodeType": "VariableDeclaration",
            "src": "1483:28:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f52692b",
            "mutability": "mutable",
            "name": "vaultOwner",
            "nameLocation": "1501:10:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 48092,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48091,
                "name": "VaultOwner",
                "nameLocations": [
                  "1483:10:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49442,
                "src": "1483:10:66"
              },
              "referencedDeclaration": 49442,
              "src": "1483:10:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48095,
            "nodeType": "VariableDeclaration",
            "src": "1518:20:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1533:5:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1518:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48097,
            "nodeType": "VariableDeclaration",
            "src": "1544:18:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1559:3:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48096,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1544:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48100,
            "nodeType": "VariableDeclaration",
            "src": "1573:66:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1588:6:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48098,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1573:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 48099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1597:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 48103,
            "nodeType": "VariableDeclaration",
            "src": "1645:69:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1660:9:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 48102,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1672:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 48109,
            "nodeType": "VariableDeclaration",
            "src": "1747:84:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "1762:15:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1747:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 48107,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1788:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48106,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1780:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48105,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1780:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1780:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48112,
            "nodeType": "VariableDeclaration",
            "src": "1837:74:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "1852:14:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48110,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1837:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 48111,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1869:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 48118,
            "nodeType": "VariableDeclaration",
            "src": "1964:110:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "1996:7:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 48114,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48113,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "1964:24:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47505,
                "src": "1964:24:66"
              },
              "referencedDeclaration": 47505,
              "src": "1964:24:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 48116,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2031:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48115,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 47505,
                "src": "2006:24:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                }
              },
              "id": 48117,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2006:68:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48124,
            "nodeType": "VariableDeclaration",
            "src": "2098:82:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "2113:13:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48119,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2098:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 48122,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2137:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48121,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2129:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48120,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2129:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48123,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2129:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48130,
            "nodeType": "VariableDeclaration",
            "src": "2186:88:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "2201:19:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48125,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2186:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 48128,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2231:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48127,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2223:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2223:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2223:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48136,
            "nodeType": "VariableDeclaration",
            "src": "2280:81:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "2295:12:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48131,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2280:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 48134,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2318:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48133,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2310:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48132,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2310:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2310:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48142,
            "nodeType": "VariableDeclaration",
            "src": "2367:83:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "2382:14:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48137,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2367:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 48140,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2407:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48139,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2399:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48138,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2399:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2399:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48145,
            "nodeType": "VariableDeclaration",
            "src": "2456:71:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "2471:11:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48143,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2456:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
              "id": 48144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2485:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
            },
            "visibility": "public"
          },
          {
            "id": 48151,
            "nodeType": "VariableDeclaration",
            "src": "2600:82:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "2615:13:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Booster_$37092",
              "typeString": "contract Booster"
            },
            "typeName": {
              "id": 48147,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48146,
                "name": "Booster",
                "nameLocations": [
                  "2600:7:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37092,
                "src": "2600:7:66"
              },
              "referencedDeclaration": 37092,
              "src": "2600:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$37092",
                "typeString": "contract Booster"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 48149,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2639:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48148,
                "name": "Booster",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 37092,
                "src": "2631:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Booster_$37092_$",
                  "typeString": "type(contract Booster)"
                }
              },
              "id": 48150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2631:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$37092",
                "typeString": "contract Booster"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48157,
            "nodeType": "VariableDeclaration",
            "src": "2706:87:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "2721:18:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48152,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2706:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 48155,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2750:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48154,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2742:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48153,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2742:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2742:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48163,
            "nodeType": "VariableDeclaration",
            "src": "2858:89:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "2ebe9869",
            "mutability": "mutable",
            "name": "convexFraxVoterProxy",
            "nameLocation": "2873:20:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2858:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835394346434433383437343665633330333532393944393037383242653036356534363638303042",
                  "id": 48161,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2904:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x59CFCD384746ec3035299D90782Be065e466800B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48160,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2896:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48159,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2896:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48162,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2896:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48169,
            "nodeType": "VariableDeclaration",
            "src": "2953:86:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "d2f4b0ca",
            "mutability": "mutable",
            "name": "convexFeeRegistry",
            "nameLocation": "2968:17:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48164,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2953:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843396143423833414461363834313361364161353730303742433732304545324532623343343644",
                  "id": 48167,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2996:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC9aCB83ADa68413a6Aa57007BC720EE2E2b3C46D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48166,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2988:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2988:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48168,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2988:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48176,
            "nodeType": "VariableDeclaration",
            "src": "3231:76:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48170,
              "nodeType": "StructuredDocumentation",
              "src": "3197:29:66",
              "text": "@notice The sending vault"
            },
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "3244:11:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 48172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48171,
                "name": "Vault",
                "nameLocations": [
                  "3231:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40418,
                "src": "3231:5:66"
              },
              "referencedDeclaration": 40418,
              "src": "3231:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 48174,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3264:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48173,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 40418,
                "src": "3258:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40418_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 48175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3258:49:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48183,
            "nodeType": "VariableDeclaration",
            "src": "3373:80:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48177,
              "nodeType": "StructuredDocumentation",
              "src": "3313:55:66",
              "text": "@notice The sending vault owner - IS NOT A CONTRACT"
            },
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "3388:11:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48178,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3373:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 48181,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3410:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48180,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3402:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48179,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3402:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48182,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3402:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48189,
            "nodeType": "VariableDeclaration",
            "src": "3459:78:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "3472:13:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 48185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48184,
                "name": "Vault",
                "nameLocations": [
                  "3459:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40418,
                "src": "3459:5:66"
              },
              "referencedDeclaration": 40418,
              "src": "3459:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 48187,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3494:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48186,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 40418,
                "src": "3488:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40418_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 48188,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3488:49:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48196,
            "nodeType": "VariableDeclaration",
            "src": "3601:82:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48190,
              "nodeType": "StructuredDocumentation",
              "src": "3543:53:66",
              "text": "@notice The receiving vault owner - IS A CONTRACT"
            },
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "3616:13:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48191,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3601:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 48194,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3640:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48193,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3632:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48192,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3632:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3632:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48199,
            "nodeType": "VariableDeclaration",
            "src": "3689:30:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f539c2e",
            "mutability": "mutable",
            "name": "nonCompliantVault",
            "nameLocation": "3702:17:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 48198,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48197,
                "name": "Vault",
                "nameLocations": [
                  "3689:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40418,
                "src": "3689:5:66"
              },
              "referencedDeclaration": 40418,
              "src": "3689:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48202,
            "nodeType": "VariableDeclaration",
            "src": "3725:27:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "4676077e",
            "mutability": "mutable",
            "name": "compliantVault",
            "nameLocation": "3738:14:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 48201,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48200,
                "name": "Vault",
                "nameLocations": [
                  "3725:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40418,
                "src": "3725:5:66"
              },
              "referencedDeclaration": 40418,
              "src": "3725:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48208,
            "nodeType": "VariableDeclaration",
            "src": "3758:78:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec1e31a0",
            "mutability": "mutable",
            "name": "vaultImpl",
            "nameLocation": "3773:9:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48203,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3758:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830336662383534334539333336323462343561626464333139383735343863304439383932463037",
                  "id": 48206,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3793:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x03fb8543E933624b45abdd31987548c0D9892F07"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48205,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3785:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48204,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3785:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48207,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3785:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48211,
            "nodeType": "VariableDeclaration",
            "src": "3843:69:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "3858:9:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48209,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3843:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 48210,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3870:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 48217,
            "nodeType": "VariableDeclaration",
            "src": "3926:77:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "3941:8:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3926:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 48215,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3960:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48214,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3952:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48213,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3952:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48216,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3952:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48223,
            "nodeType": "VariableDeclaration",
            "src": "4016:77:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "4031:8:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4016:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 48221,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4050:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48220,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4042:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48219,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4042:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 48222,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4042:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48226,
            "nodeType": "VariableDeclaration",
            "src": "4119:31:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "4137:13:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48224,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4119:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48225,
              "nodeType": "ArrayTypeName",
              "src": "4119:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48229,
            "nodeType": "VariableDeclaration",
            "src": "4156:33:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "4174:15:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48227,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4156:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48228,
              "nodeType": "ArrayTypeName",
              "src": "4156:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48232,
            "nodeType": "VariableDeclaration",
            "src": "4195:30:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "4213:12:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 48230,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4195:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 48231,
              "nodeType": "ArrayTypeName",
              "src": "4195:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48235,
            "nodeType": "VariableDeclaration",
            "src": "4231:35:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "4249:17:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48233,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4231:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48234,
              "nodeType": "ArrayTypeName",
              "src": "4231:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48238,
            "nodeType": "VariableDeclaration",
            "src": "4272:37:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "4290:19:66",
            "scope": 49402,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48236,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4272:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48237,
              "nodeType": "ArrayTypeName",
              "src": "4272:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48658,
            "nodeType": "FunctionDefinition",
            "src": "4316:5156:66",
            "nodes": [],
            "body": {
              "id": 48657,
              "nodeType": "Block",
              "src": "4340:5132:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48241,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48095,
                      "src": "4379:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 48244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4395:66:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 48242,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4387:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 48243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4390:4:66",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4387:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 48245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4387:75:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4379:83:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48247,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:83:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48251,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48095,
                        "src": "4480:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4487:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4472:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4475:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4472:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48254,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48258,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48095,
                        "src": "4567:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 48259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4574:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 48255,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4558:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4561:5:66",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4558:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 48260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4558:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48261,
                  "nodeType": "ExpressionStatement",
                  "src": "4558:24:66"
                },
                {
                  "expression": {
                    "id": 48267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48262,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48097,
                      "src": "4593:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 48265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4607:66:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 48263,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4599:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 48264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4602:4:66",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4599:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 48266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4599:75:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4593:81:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48268,
                  "nodeType": "ExpressionStatement",
                  "src": "4593:81:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48272,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48097,
                        "src": "4692:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4697:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48269,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4684:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4687:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4684:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48275,
                  "nodeType": "ExpressionStatement",
                  "src": "4684:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48279,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48097,
                        "src": "4727:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 48280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4732:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 48276,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4718:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4721:5:66",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4718:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 48281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:20:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48282,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:20:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307842313734384337393730396634426132446438323833344238633832443461353035303033663237",
                            "id": 48288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4816:42:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4808:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4808:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4808:51:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48283,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48229,
                        "src": "4787:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4803:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4787:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48291,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:73:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31313537343037",
                        "id": 48295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4936:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        },
                        "value": "1157407"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        }
                      ],
                      "expression": {
                        "id": 48292,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48232,
                        "src": "4918:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 48294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4931:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4918:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 48296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48297,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48303,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48145,
                            "src": "5094:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5086:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5086:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5086:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48298,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48238,
                        "src": "5061:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5081:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5061:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48306,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48312,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48217,
                            "src": "5144:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5136:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5136:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5136:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48307,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48226,
                        "src": "5117:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5131:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5117:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5117:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48315,
                  "nodeType": "ExpressionStatement",
                  "src": "5117:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 48321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5245:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5237:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5237:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5237:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48316,
                        "name": "_gaugeControllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48235,
                        "src": "5214:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5232:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5214:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5214:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48324,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:36:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48328,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48183,
                        "src": "5311:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5324:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48325,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5303:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5306:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5303:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5303:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48331,
                  "nodeType": "ExpressionStatement",
                  "src": "5303:32:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48335,
                        "name": "receiverOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48196,
                        "src": "5353:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5368:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48332,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5345:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5348:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5345:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5345:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48338,
                  "nodeType": "ExpressionStatement",
                  "src": "5345:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48344,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5405:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 48343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5397:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48342,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5397:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5397:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5412:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48339,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5389:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5392:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5389:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5389:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48348,
                  "nodeType": "ExpressionStatement",
                  "src": "5389:34:66"
                },
                {
                  "assignments": [
                    48351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48351,
                      "mutability": "mutable",
                      "name": "boost",
                      "nameLocation": "5592:5:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48657,
                      "src": "5584:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Booster_$37092",
                        "typeString": "contract Booster"
                      },
                      "typeName": {
                        "id": 48350,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48349,
                          "name": "Booster",
                          "nameLocations": [
                            "5584:7:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37092,
                          "src": "5584:7:66"
                        },
                        "referencedDeclaration": 37092,
                        "src": "5584:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Booster_$37092",
                          "typeString": "contract Booster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48359,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48355,
                        "name": "convexFraxVoterProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48163,
                        "src": "5612:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48356,
                        "name": "convexPoolRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48157,
                        "src": "5634:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48357,
                        "name": "convexFeeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48169,
                        "src": "5654:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5600:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Booster_$37092_$",
                        "typeString": "function (address,address,address) returns (contract Booster)"
                      },
                      "typeName": {
                        "id": 48353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48352,
                          "name": "Booster",
                          "nameLocations": [
                            "5604:7:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37092,
                          "src": "5604:7:66"
                        },
                        "referencedDeclaration": 37092,
                        "src": "5604:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Booster_$37092",
                          "typeString": "contract Booster"
                        }
                      }
                    },
                    "id": 48358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5600:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Booster_$37092",
                      "typeString": "contract Booster"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5584:88:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48365,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48151,
                            "src": "5698:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          ],
                          "id": 48364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5690:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5690:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5690:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48369,
                              "name": "boost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48351,
                              "src": "5722:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            ],
                            "id": 48368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5714:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48367,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5714:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5714:14:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5729:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5714:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48360,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5682:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5685:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5682:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:52:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48373,
                  "nodeType": "ExpressionStatement",
                  "src": "5682:52:66"
                },
                {
                  "expression": {
                    "id": 48389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48374,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48087,
                      "src": "5804:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48380,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5854:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 48379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5846:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48378,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5846:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5846:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 48382,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48226,
                          "src": "5861:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 48383,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48229,
                          "src": "5876:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 48384,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48232,
                          "src": "5893:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 48385,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48235,
                          "src": "5907:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 48386,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48238,
                          "src": "5926:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 48387,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48112,
                          "src": "5947:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5817:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                        },
                        "typeName": {
                          "id": 48376,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48375,
                            "name": "FraxUnifiedFarm_ERC20_V2",
                            "nameLocations": [
                              "5821:24:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47505,
                            "src": "5821:24:66"
                          },
                          "referencedDeclaration": 47505,
                          "src": "5821:24:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        }
                      },
                      "id": 48388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5817:145:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "src": "5804:158:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                      "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                    }
                  },
                  "id": 48390,
                  "nodeType": "ExpressionStatement",
                  "src": "5804:158:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48396,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "5988:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 48395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5980:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5980:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5980:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48400,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48087,
                              "src": "6006:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            ],
                            "id": 48399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5998:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5998:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5998:19:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6018:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5998:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48391,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5972:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5975:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5972:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5972:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48404,
                  "nodeType": "ExpressionStatement",
                  "src": "5972:51:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "47657450726f7879466f72",
                        "id": 48408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6106:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        "value": "GetProxyFor"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                                "id": 48413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6149:42:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6141:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48411,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6141:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6141:51:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48409,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "6121:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 48410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6129:11:66",
                          "memberName": "getProxyFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44028,
                          "src": "6121:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 48415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6121:72:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48405,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6093:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6102:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6093:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6093:101:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48417,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:101:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e766578426f6f73746572566f74657250726f7879536574",
                        "id": 48421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6217:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        "value": "ConvexBoosterVoterProxySet"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 48422,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48151,
                            "src": "6247:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          },
                          "id": 48423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6261:5:66",
                          "memberName": "proxy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36012,
                          "src": "6247:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 48424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6247:21:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48418,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6204:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6213:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6204:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6204:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48426,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:65:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784661726d",
                        "id": 48430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6292:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5394e27db8eab585af7d8c6b0139e2cb390cae0a1ed7958fe57438025d6bd710",
                          "typeString": "literal_string \"frxFarm\""
                        },
                        "value": "frxFarm"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48433,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "6311:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 48432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6303:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6303:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6303:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5394e27db8eab585af7d8c6b0139e2cb390cae0a1ed7958fe57438025d6bd710",
                          "typeString": "literal_string \"frxFarm\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48427,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6279:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6288:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6279:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6279:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48436,
                  "nodeType": "ExpressionStatement",
                  "src": "6279:41:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784574684661726d",
                        "id": 48440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6343:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_510b8743de8f6a67844ce3431904b67b2bff054167d050e026d99dcb1490f8af",
                          "typeString": "literal_string \"frxEthFarm\""
                        },
                        "value": "frxEthFarm"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48443,
                            "name": "frxEthFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48087,
                            "src": "6365:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 48442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6357:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6357:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6357:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_510b8743de8f6a67844ce3431904b67b2bff054167d050e026d99dcb1490f8af",
                          "typeString": "literal_string \"frxEthFarm\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48437,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6330:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6339:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6330:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48446,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6376785661756c7420636f646520707265206465706c6f79",
                        "id": 48450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6894:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9f133d26cbfd32374daacc341dddab69bd1b4297ff24797cc75e3127b9226c3",
                          "typeString": "literal_string \"cvxVault code pre deploy\""
                        },
                        "value": "cvxVault code pre deploy"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 48453,
                                "name": "cvxVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48090,
                                "src": "6930:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6922:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48451,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6922:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6922:17:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 48455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6940:4:66",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6922:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 48456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6945:6:66",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6922:29:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9f133d26cbfd32374daacc341dddab69bd1b4297ff24797cc75e3127b9226c3",
                          "typeString": "literal_string \"cvxVault code pre deploy\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48447,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6881:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6890:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6881:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6881:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48458,
                  "nodeType": "ExpressionStatement",
                  "src": "6881:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572207661756c7420636f646520707265206465706c6f79",
                        "id": 48462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6975:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b383e8039f7f362de2be00c09f9d708518c5a3b2502e058802ec26918542400",
                          "typeString": "literal_string \"sender vault code pre deploy\""
                        },
                        "value": "sender vault code pre deploy"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 48465,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48176,
                                "src": "7015:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7007:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48463,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7007:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7007:20:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 48467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7028:4:66",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7007:25:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 48468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7033:6:66",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7007:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7b383e8039f7f362de2be00c09f9d708518c5a3b2502e058802ec26918542400",
                          "typeString": "literal_string \"sender vault code pre deploy\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48459,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6962:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6971:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6962:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6962:78:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48470,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:78:66"
                },
                {
                  "expression": {
                    "id": 48476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48471,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48090,
                      "src": "7106:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7117:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$40418_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 48473,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48472,
                            "name": "Vault",
                            "nameLocations": [
                              "7121:5:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40418,
                            "src": "7121:5:66"
                          },
                          "referencedDeclaration": 40418,
                          "src": "7121:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 48475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7117:11:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "7106:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 48477,
                  "nodeType": "ExpressionStatement",
                  "src": "7106:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6376785661756c7420636f646520706f7374206465706c6f79",
                        "id": 48481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7151:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17e6a2f871b5224135c459e9762accd4c882a0d49388c898c6cd62a8a06ce5db",
                          "typeString": "literal_string \"cvxVault code post deploy\""
                        },
                        "value": "cvxVault code post deploy"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 48484,
                                "name": "cvxVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48090,
                                "src": "7188:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7180:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48482,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7180:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7180:17:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 48486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7198:4:66",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7180:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 48487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7203:6:66",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7180:29:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17e6a2f871b5224135c459e9762accd4c882a0d49388c898c6cd62a8a06ce5db",
                          "typeString": "literal_string \"cvxVault code post deploy\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48478,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7138:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7147:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7138:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7138:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48489,
                  "nodeType": "ExpressionStatement",
                  "src": "7138:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48495,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7248:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$49402",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 48494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7240:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7240:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7240:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48499,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "7263:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 48498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7255:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7255:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7255:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48501,
                        "name": "cvxStkFrxEthLp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48112,
                        "src": "7273:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48502,
                        "name": "vaultRewardsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48130,
                        "src": "7289:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48490,
                        "name": "cvxVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48090,
                        "src": "7220:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 48492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7229:10:66",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39356,
                      "src": "7220:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 48503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7220:89:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48504,
                  "nodeType": "ExpressionStatement",
                  "src": "7220:89:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48510,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48176,
                            "src": "7431:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 48509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7423:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48508,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7423:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7423:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48514,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48090,
                              "src": "7453:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7445:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7445:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7445:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7463:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7445:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48505,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7415:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7418:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7415:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7415:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48518,
                  "nodeType": "ExpressionStatement",
                  "src": "7415:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48524,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48189,
                            "src": "7494:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 48523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7486:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7486:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7486:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48528,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48090,
                              "src": "7518:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7510:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48526,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7510:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7510:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7528:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7510:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48519,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7478:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7481:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7478:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7478:55:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48532,
                  "nodeType": "ExpressionStatement",
                  "src": "7478:55:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48538,
                            "name": "vaultImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48208,
                            "src": "7559:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7551:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48536,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7551:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7551:18:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48542,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48090,
                              "src": "7579:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7571:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7571:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7571:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7589:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7571:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48533,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7543:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7546:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7543:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7543:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48546,
                  "nodeType": "ExpressionStatement",
                  "src": "7543:51:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e6465727661756c7420636f646520706f7374206465706c6f79",
                        "id": 48550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7721:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b15f3947d7a02cc4b02318e9ce40babfe8ffb8a83c549e40cf3585cc8c838418",
                          "typeString": "literal_string \"sendervault code post deploy\""
                        },
                        "value": "sendervault code post deploy"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 48553,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48176,
                                "src": "7761:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7753:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48551,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7753:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7753:20:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 48555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7774:4:66",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7753:25:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 48556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7779:6:66",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7753:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b15f3947d7a02cc4b02318e9ce40babfe8ffb8a83c549e40cf3585cc8c838418",
                          "typeString": "literal_string \"sendervault code post deploy\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48547,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7708:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7717:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7708:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7708:78:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48558,
                  "nodeType": "ExpressionStatement",
                  "src": "7708:78:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "47657450726f7879466f72",
                        "id": 48562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7810:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        "value": "GetProxyFor"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                                "id": 48567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7853:42:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7845:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48565,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7845:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7845:51:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48563,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "7825:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 48564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7833:11:66",
                          "memberName": "getProxyFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44028,
                          "src": "7825:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 48569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7825:72:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48559,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7797:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7806:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "7797:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7797:101:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48571,
                  "nodeType": "ExpressionStatement",
                  "src": "7797:101:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e766578426f6f73746572566f74657250726f7879536574",
                        "id": 48575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7921:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        "value": "ConvexBoosterVoterProxySet"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 48576,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48151,
                            "src": "7951:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          },
                          "id": 48577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7965:5:66",
                          "memberName": "proxy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36012,
                          "src": "7951:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 48578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7951:21:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48572,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7908:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7917:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "7908:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48580,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:65:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "637265617465206e6f6e636f6d706c69616e74207661756c74",
                        "id": 48584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8351:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6de3f8c9ce8fbc69359d35f387a35fd90c6e1cd111420ea183ef9e9466bc7349",
                          "typeString": "literal_string \"create noncompliant vault\""
                        },
                        "value": "create noncompliant vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6de3f8c9ce8fbc69359d35f387a35fd90c6e1cd111420ea183ef9e9466bc7349",
                          "typeString": "literal_string \"create noncompliant vault\""
                        }
                      ],
                      "expression": {
                        "id": 48581,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8338:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8347:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "8338:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8338:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48586,
                  "nodeType": "ExpressionStatement",
                  "src": "8338:41:66"
                },
                {
                  "expression": {
                    "id": 48594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48587,
                      "name": "nonCompliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48199,
                      "src": "8389:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 48591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8441:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 48589,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48151,
                              "src": "8415:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 48590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8429:11:66",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36936,
                            "src": "8415:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 48592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8415:29:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48588,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40418,
                        "src": "8409:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40418_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 48593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8409:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "8389:56:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 48595,
                  "nodeType": "ExpressionStatement",
                  "src": "8389:56:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63726561746520636f6d706c69616e74207661756c74206f776e6572",
                        "id": 48599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8737:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f6f599fe85c61e46cd4b337b7842186018dc5b2a11e68e0a91da93a11e6ac1c",
                          "typeString": "literal_string \"create compliant vault owner\""
                        },
                        "value": "create compliant vault owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f6f599fe85c61e46cd4b337b7842186018dc5b2a11e68e0a91da93a11e6ac1c",
                          "typeString": "literal_string \"create compliant vault owner\""
                        }
                      ],
                      "expression": {
                        "id": 48596,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8724:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8733:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "8724:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48601,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:44:66"
                },
                {
                  "expression": {
                    "id": 48607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48602,
                      "name": "vaultOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48093,
                      "src": "8778:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8791:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockVaultOwner_$49442_$",
                          "typeString": "function () returns (contract MockVaultOwner)"
                        },
                        "typeName": {
                          "id": 48604,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48603,
                            "name": "VaultOwner",
                            "nameLocations": [
                              "8795:10:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 49442,
                            "src": "8795:10:66"
                          },
                          "referencedDeclaration": 49442,
                          "src": "8795:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                            "typeString": "contract MockVaultOwner"
                          }
                        }
                      },
                      "id": 48606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8791:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "src": "8778:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                      "typeString": "contract MockVaultOwner"
                    }
                  },
                  "id": 48608,
                  "nodeType": "ExpressionStatement",
                  "src": "8778:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48614,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48093,
                            "src": "8833:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 48613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8825:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8825:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8825:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48618,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48093,
                              "src": "8854:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 48617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8846:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48616,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8846:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8846:19:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8866:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "8846:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48609,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8817:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8820:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "8817:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 48621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8817:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48622,
                  "nodeType": "ExpressionStatement",
                  "src": "8817:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48628,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48093,
                            "src": "8897:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 48627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8889:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8889:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8889:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 48630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8910:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48623,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8881:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8884:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "8881:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8881:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48632,
                  "nodeType": "ExpressionStatement",
                  "src": "8881:40:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48638,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48093,
                            "src": "9007:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$49442",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 48637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8999:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48636,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8999:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8999:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48633,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8990:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8993:5:66",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8607,
                      "src": "8990:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8990:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48641,
                  "nodeType": "ExpressionStatement",
                  "src": "8990:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63726561746520636f6d706c69616e74207661756c74",
                        "id": 48645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9200:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba1b073a521479fa8594537b60d2f5a10e694fac1c239582041a65e766c90f93",
                          "typeString": "literal_string \"create compliant vault\""
                        },
                        "value": "create compliant vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ba1b073a521479fa8594537b60d2f5a10e694fac1c239582041a65e766c90f93",
                          "typeString": "literal_string \"create compliant vault\""
                        }
                      ],
                      "expression": {
                        "id": 48642,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9187:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9196:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "9187:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9187:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48647,
                  "nodeType": "ExpressionStatement",
                  "src": "9187:38:66"
                },
                {
                  "expression": {
                    "id": 48655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48648,
                      "name": "compliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48202,
                      "src": "9235:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 48652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9284:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 48650,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48151,
                              "src": "9258:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 48651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9272:11:66",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36936,
                            "src": "9258:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 48653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:29:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48649,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40418,
                        "src": "9252:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40418_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 48654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9252:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "9235:53:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 48656,
                  "nodeType": "ExpressionStatement",
                  "src": "9235:53:66"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4325:5:66",
            "parameters": {
              "id": 48239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:2:66"
            },
            "returnParameters": {
              "id": 48240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4340:0:66"
            },
            "scope": 49402,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48713,
            "nodeType": "StructDefinition",
            "src": "9551:1031:66",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 48660,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "9584:6:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9578:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 48659,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "9578:5:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48662,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "9608:6:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9600:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48661,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9600:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48664,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "9632:12:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9624:20:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48663,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9624:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48666,
                "mutability": "mutable",
                "name": "senderBaseLockedLiquidity",
                "nameLocation": "9662:25:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9654:33:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48665,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9654:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48668,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "9705:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9697:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48667,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9697:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48670,
                "mutability": "mutable",
                "name": "senderInitialLockedLiquidity",
                "nameLocation": "9736:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9728:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48669,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9728:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48672,
                "mutability": "mutable",
                "name": "receiverInitialLockedLiquidity",
                "nameLocation": "9782:30:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9774:38:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48671,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9774:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48674,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "9830:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9822:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48673,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9822:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48676,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "9867:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9859:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48675,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9859:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48678,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "9904:20:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9896:28:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48677,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9896:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48680,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "9942:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9934:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48679,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9934:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48682,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "9981:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "9973:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48681,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9973:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48684,
                "mutability": "mutable",
                "name": "senderLock",
                "nameLocation": "10020:10:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10012:18:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48683,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10012:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48686,
                "mutability": "mutable",
                "name": "receiverLock1",
                "nameLocation": "10048:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10040:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48685,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10040:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48688,
                "mutability": "mutable",
                "name": "receiverLock2",
                "nameLocation": "10079:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10071:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48687,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10071:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48690,
                "mutability": "mutable",
                "name": "receiverLock3",
                "nameLocation": "10110:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10102:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48689,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10102:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48692,
                "mutability": "mutable",
                "name": "senderPostTransfer1Balance",
                "nameLocation": "10141:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10133:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48691,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10133:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48694,
                "mutability": "mutable",
                "name": "senderPostTransfer2Balance",
                "nameLocation": "10185:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10177:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48693,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10177:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48696,
                "mutability": "mutable",
                "name": "senderPreTransfer3",
                "nameLocation": "10229:18:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10221:26:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48695,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10221:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48698,
                "mutability": "mutable",
                "name": "receiverPostTransfer1Balance",
                "nameLocation": "10265:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10257:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48697,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10257:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48700,
                "mutability": "mutable",
                "name": "receiverPostTransfer2Balance",
                "nameLocation": "10311:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10303:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48699,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10303:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48702,
                "mutability": "mutable",
                "name": "receiverPreTransfer3",
                "nameLocation": "10357:20:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10349:28:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48701,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10349:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48704,
                "mutability": "mutable",
                "name": "senderPostTransfer3Balance",
                "nameLocation": "10395:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10387:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48703,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10387:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48706,
                "mutability": "mutable",
                "name": "receiverPostTransfer3Balance",
                "nameLocation": "10439:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10431:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48705,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10431:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48708,
                "mutability": "mutable",
                "name": "senderPostTransfer3",
                "nameLocation": "10485:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10477:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48707,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10477:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48710,
                "mutability": "mutable",
                "name": "receiverPostTransfer3",
                "nameLocation": "10522:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10514:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48709,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10514:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48712,
                "mutability": "mutable",
                "name": "transferAmount",
                "nameLocation": "10561:14:66",
                "nodeType": "VariableDeclaration",
                "scope": 48713,
                "src": "10553:22:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 48711,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10553:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "9558:9:66",
            "scope": 49402,
            "visibility": "public"
          },
          {
            "id": 49401,
            "nodeType": "FunctionDefinition",
            "src": "10588:6882:66",
            "nodes": [],
            "body": {
              "id": 49400,
              "nodeType": "Block",
              "src": "10618:6852:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48718,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "10645:1:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 49400,
                      "src": "10628:18:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 48717,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48716,
                          "name": "TestState",
                          "nameLocations": [
                            "10628:9:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 48713,
                          "src": "10628:9:66"
                        },
                        "referencedDeclaration": 48713,
                        "src": "10628:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48719,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10628:18:66"
                },
                {
                  "expression": {
                    "id": 48724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48720,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "10825:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10827:14:66",
                      "memberName": "transferAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48712,
                      "src": "10825:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 48723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10844:8:66",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000"
                      },
                      "value": "10"
                    },
                    "src": "10825:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48725,
                  "nodeType": "ExpressionStatement",
                  "src": "10825:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48729,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48183,
                        "src": "10928:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48726,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "10914:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10917:10:66",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "10914:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10914:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48731,
                  "nodeType": "ExpressionStatement",
                  "src": "10914:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e64696e67207661756c74206f776e6572",
                        "id": 48735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10963:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c3c331c94023ed2e7726d9c76ce2ed338a7ecbebbc4929a9629a36b9b774542",
                          "typeString": "literal_string \"sending vault owner\""
                        },
                        "value": "sending vault owner"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 48739,
                                    "name": "senderVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48176,
                                    "src": "11000:11:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                      "typeString": "contract StakingProxyConvex"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                      "typeString": "contract StakingProxyConvex"
                                    }
                                  ],
                                  "id": 48738,
                                  "name": "Vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40418,
                                  "src": "10994:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40418_$",
                                    "typeString": "type(contract StakingProxyConvex)"
                                  }
                                },
                                "id": 48740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10994:18:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              },
                              "id": 48741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11013:5:66",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 38440,
                              "src": "10994:24:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 48742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10994:26:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10986:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48736,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10986:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10986:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0c3c331c94023ed2e7726d9c76ce2ed338a7ecbebbc4929a9629a36b9b774542",
                          "typeString": "literal_string \"sending vault owner\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48732,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10950:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10959:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "10950:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 48744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10950:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48745,
                  "nodeType": "ExpressionStatement",
                  "src": "10950:72:66"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 48755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11123:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 48753,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11099:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11103:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11099:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 48756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11099:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 48746,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48136,
                          "src": "11063:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11076:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "11063:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 48752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 48751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 48749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11088:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 48750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11093:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "11088:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "11063:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 48757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11063:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 48758,
                  "nodeType": "ExpressionStatement",
                  "src": "11063:72:66"
                },
                {
                  "expression": {
                    "id": 48771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 48759,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "11147:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11149:6:66",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48660,
                          "src": "11147:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 48762,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11145:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 48767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11195:20:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "id": 48768,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48183,
                              "src": "11217:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 48765,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11171:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 48766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11175:19:66",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "11171:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 48769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11171:58:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 48763,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48100,
                          "src": "11159:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11166:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "11159:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 48770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11159:71:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "11145:85:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48772,
                  "nodeType": "ExpressionStatement",
                  "src": "11145:85:66"
                },
                {
                  "expression": {
                    "id": 48784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48773,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "11240:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11242:6:66",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48662,
                      "src": "11240:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48778,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "11262:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48779,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11264:6:66",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48660,
                          "src": "11262:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 48781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11273:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48780,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11273:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 48782,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11272:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 48776,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11251:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 48777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11255:6:66",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "11251:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11251:31:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11240:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48785,
                  "nodeType": "ExpressionStatement",
                  "src": "11240:42:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48787,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "11301:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48788,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11303:6:66",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48662,
                        "src": "11301:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11311:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 48790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11322:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 48786,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        927,
                        952,
                        982,
                        1007
                      ],
                      "referencedDeclaration": 952,
                      "src": "11292:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11292:59:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48792,
                  "nodeType": "ExpressionStatement",
                  "src": "11292:59:66"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 48800,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48124,
                        "src": "11446:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11466:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48802,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11466:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 48801,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "11461:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11461:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 48805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11475:3:66",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "11461:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48796,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48100,
                                "src": "11429:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11421:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48794,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11421:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11421:15:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48793,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48082,
                          "src": "11411:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$48082_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11411:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$48082",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11438:7:66",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48062,
                      "src": "11411:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 48806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11411:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48807,
                  "nodeType": "ExpressionStatement",
                  "src": "11411:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11537:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11529:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48812,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11529:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11529:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 48818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11549:10:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 48817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11541:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48816,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11541:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11541:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48820,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11528:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11563:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48809,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48124,
                            "src": "11499:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48808,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48082,
                          "src": "11489:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$48082_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11489:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$48082",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11514:13:66",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48046,
                      "src": "11489:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11489:84:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48823,
                  "nodeType": "ExpressionStatement",
                  "src": "11489:84:66"
                },
                {
                  "expression": {
                    "id": 48833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48824,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "11583:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11585:6:66",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48662,
                      "src": "11583:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48831,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48183,
                          "src": "11625:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 48828,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48103,
                              "src": "11604:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48827,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48082,
                            "src": "11594:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$48082_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 48829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11594:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$48082",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 48830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11615:9:66",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48053,
                        "src": "11594:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11594:43:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11583:54:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48834,
                  "nodeType": "ExpressionStatement",
                  "src": "11583:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48836,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "11656:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11658:6:66",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48662,
                        "src": "11656:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11666:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 48839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11677:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 48835,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "11647:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11647:70:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48841,
                  "nodeType": "ExpressionStatement",
                  "src": "11647:70:66"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 48852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48842,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "11857:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48844,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11859:12:66",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48664,
                      "src": "11857:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48849,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "11911:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11903:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48847,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11903:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11903:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48845,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "11874:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11882:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "11874:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11874:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11857:67:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48853,
                  "nodeType": "ExpressionStatement",
                  "src": "11857:67:66"
                },
                {
                  "expression": {
                    "id": 48864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48854,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "11934:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11936:25:66",
                      "memberName": "senderBaseLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48666,
                      "src": "11934:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48861,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "11998:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11990:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48859,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11990:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11990:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48857,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "11964:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11972:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "11964:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11964:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11934:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48865,
                  "nodeType": "ExpressionStatement",
                  "src": "11934:77:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572507265416464",
                        "id": 48869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12034:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10bd15b5d1ec7b404c9a3ddf36b98539788d754e6617ed35b5b34467f9cdbfd5",
                          "typeString": "literal_string \"senderPreAdd\""
                        },
                        "value": "senderPreAdd"
                      },
                      {
                        "expression": {
                          "id": 48870,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12050:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12052:12:66",
                        "memberName": "senderPreAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48664,
                        "src": "12050:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_10bd15b5d1ec7b404c9a3ddf36b98539788d754e6617ed35b5b34467f9cdbfd5",
                          "typeString": "literal_string \"senderPreAdd\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48866,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12021:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12030:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12021:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12021:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48873,
                  "nodeType": "ExpressionStatement",
                  "src": "12021:44:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572426173654c6f636b65644c6971756964697479",
                        "id": 48877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12088:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc374dafa8633d6de4b32828b35b405c3a549dddad341e93351eeb5203292122",
                          "typeString": "literal_string \"senderBaseLockedLiquidity\""
                        },
                        "value": "senderBaseLockedLiquidity"
                      },
                      {
                        "expression": {
                          "id": 48878,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12117:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48879,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12119:25:66",
                        "memberName": "senderBaseLockedLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48666,
                        "src": "12117:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc374dafa8633d6de4b32828b35b405c3a549dddad341e93351eeb5203292122",
                          "typeString": "literal_string \"senderBaseLockedLiquidity\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48874,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12075:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12084:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12075:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12075:70:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48881,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:70:66"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7374616b654c6f636b656443757276654c502054657374",
                        "id": 48885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12201:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17f3a4734292fccb48ebb54af79f13b5dd974a0ebfc5428b891d33faf725557",
                          "typeString": "literal_string \"stakeLockedCurveLP Test\""
                        },
                        "value": "stakeLockedCurveLP Test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d17f3a4734292fccb48ebb54af79f13b5dd974a0ebfc5428b891d33faf725557",
                          "typeString": "literal_string \"stakeLockedCurveLP Test\""
                        }
                      ],
                      "expression": {
                        "id": 48882,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12188:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12197:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "12188:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12188:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48887,
                  "nodeType": "ExpressionStatement",
                  "src": "12188:39:66"
                },
                {
                  "expression": {
                    "id": 48903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48888,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "12237:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48890,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12239:10:66",
                      "memberName": "senderLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48684,
                      "src": "12237:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 48893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12283:9:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 48900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 48898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 48896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 48894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12295:2:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 48895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12298:2:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "12295:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 48897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12301:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "12295:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 48899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12304:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "12295:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 48901,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12294:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 48891,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48176,
                          "src": "12252:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12264:18:66",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39451,
                        "src": "12252:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 48902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12252:57:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12237:72:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48904,
                  "nodeType": "ExpressionStatement",
                  "src": "12237:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e6465724c6f636b",
                        "id": 48908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12332:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34ffdf973afb1e116327e4c56fa647c4373056b8fb7126fd48736c0bb66fef50",
                          "typeString": "literal_string \"senderLock\""
                        },
                        "value": "senderLock"
                      },
                      {
                        "expression": {
                          "id": 48909,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12346:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12348:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48684,
                        "src": "12346:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_34ffdf973afb1e116327e4c56fa647c4373056b8fb7126fd48736c0bb66fef50",
                          "typeString": "literal_string \"senderLock\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48905,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12319:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12328:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12319:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12319:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48912,
                  "nodeType": "ExpressionStatement",
                  "src": "12319:40:66"
                },
                {
                  "expression": {
                    "id": 48923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48913,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "12369:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48915,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12371:13:66",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48668,
                      "src": "12369:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48920,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "12424:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12416:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48918,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12416:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12416:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48916,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "12387:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12395:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "12387:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12387:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12369:68:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48924,
                  "nodeType": "ExpressionStatement",
                  "src": "12369:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48926,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12456:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12458:13:66",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48668,
                        "src": "12456:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48928,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "12473:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12475:12:66",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48664,
                          "src": "12473:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12490:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12473:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 48932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12493:36:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 48925,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12447:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12447:83:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48934,
                  "nodeType": "ExpressionStatement",
                  "src": "12447:83:66"
                },
                {
                  "expression": {
                    "id": 48945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48935,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "12540:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12542:28:66",
                      "memberName": "senderInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48670,
                      "src": "12540:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48942,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "12607:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12599:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12599:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12599:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48938,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "12573:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12581:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "12573:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12573:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12540:80:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48946,
                  "nodeType": "ExpressionStatement",
                  "src": "12540:80:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572506f7374416464",
                        "id": 48950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12643:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c010e81f9c8eb2152f661a1e3c16419b1d3b71eb7edae7e806057575e3cebf88",
                          "typeString": "literal_string \"senderPostAdd\""
                        },
                        "value": "senderPostAdd"
                      },
                      {
                        "expression": {
                          "id": 48951,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12660:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12662:13:66",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48668,
                        "src": "12660:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c010e81f9c8eb2152f661a1e3c16419b1d3b71eb7edae7e806057575e3cebf88",
                          "typeString": "literal_string \"senderPostAdd\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48947,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12630:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12639:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12630:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12630:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48954,
                  "nodeType": "ExpressionStatement",
                  "src": "12630:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572496e697469616c4c6f636b65644c6971756964697479",
                        "id": 48958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12699:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f768c4bea386dde88fa8823c04beb318f5073c1a589fc29a32721c907a800b2",
                          "typeString": "literal_string \"senderInitialLockedLiquidity\""
                        },
                        "value": "senderInitialLockedLiquidity"
                      },
                      {
                        "expression": {
                          "id": 48959,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "12731:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12733:28:66",
                        "memberName": "senderInitialLockedLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48670,
                        "src": "12731:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f768c4bea386dde88fa8823c04beb318f5073c1a589fc29a32721c907a800b2",
                          "typeString": "literal_string \"senderInitialLockedLiquidity\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48955,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12686:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12695:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12686:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12686:76:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48962,
                  "nodeType": "ExpressionStatement",
                  "src": "12686:76:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12835:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48963,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "12830:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12830:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48966,
                  "nodeType": "ExpressionStatement",
                  "src": "12830:12:66"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 48977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48967,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "12922:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12924:20:66",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48678,
                      "src": "12922:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48974,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "12984:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12976:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12976:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12976:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48970,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "12947:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12955:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "12947:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12947:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12922:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48978,
                  "nodeType": "ExpressionStatement",
                  "src": "12922:77:66"
                },
                {
                  "expression": {
                    "id": 48989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48979,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "13009:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13011:30:66",
                      "memberName": "receiverInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48672,
                      "src": "13009:32:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48986,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "13078:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13070:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48984,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13070:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13070:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48982,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "13044:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13052:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "13044:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13044:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13009:84:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48990,
                  "nodeType": "ExpressionStatement",
                  "src": "13009:84:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48996,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48176,
                            "src": "13129:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 48995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13121:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13121:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13121:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48991,
                        "name": "frxFarm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48118,
                        "src": "13103:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                          "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                        }
                      },
                      "id": 48993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13111:9:66",
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44540,
                      "src": "13103:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) external returns (uint256[] memory)"
                      }
                    },
                    "id": 48998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13103:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 48999,
                  "nodeType": "ExpressionStatement",
                  "src": "13103:39:66"
                },
                {
                  "expression": {
                    "id": 49017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 49000,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "13246:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13248:13:66",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48686,
                          "src": "13246:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49003,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13243:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49008,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "13300:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13292:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49006,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13292:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13292:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 49010,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "13316:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13318:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48684,
                          "src": "13316:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 49012,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "13330:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49013,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13332:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "13330:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 49014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13348:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 49015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13355:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 49004,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48176,
                          "src": "13265:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 49005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13277:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39910,
                        "src": "13265:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 49016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13265:92:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "13243:114:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49018,
                  "nodeType": "ExpressionStatement",
                  "src": "13243:114:66"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 49029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49019,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "13475:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13477:19:66",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48674,
                      "src": "13475:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49026,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "13536:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13528:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13528:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13528:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49022,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "13499:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13507:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "13499:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13499:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13475:74:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49030,
                  "nodeType": "ExpressionStatement",
                  "src": "13475:74:66"
                },
                {
                  "expression": {
                    "id": 49041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49031,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "13559:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49033,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13561:21:66",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48680,
                      "src": "13559:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49038,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "13622:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13614:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49036,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13614:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13614:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49034,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "13585:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13593:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "13585:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13585:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13559:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49042,
                  "nodeType": "ExpressionStatement",
                  "src": "13559:78:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49044,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "13656:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49045,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13658:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48674,
                        "src": "13656:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49046,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "13679:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49047,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13681:13:66",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48668,
                        "src": "13679:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 49048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13696:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 49043,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13647:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13647:83:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49050,
                  "nodeType": "ExpressionStatement",
                  "src": "13647:83:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49052,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "13749:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49053,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13751:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48680,
                        "src": "13749:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 49054,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48718,
                                "src": "13775:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 49055,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13777:20:66",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48678,
                              "src": "13775:22:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 49056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13800:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13775:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49058,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13774:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 49059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13804:34:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 49051,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13740:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13740:99:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49061,
                  "nodeType": "ExpressionStatement",
                  "src": "13740:99:66"
                },
                {
                  "expression": {
                    "id": 49072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49062,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "13893:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49064,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13895:26:66",
                      "memberName": "senderPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48692,
                      "src": "13893:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49069,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "13958:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13950:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49067,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13950:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13950:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49065,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "13924:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13932:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "13924:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13924:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13893:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49073,
                  "nodeType": "ExpressionStatement",
                  "src": "13893:78:66"
                },
                {
                  "expression": {
                    "id": 49084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49074,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "13981:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49076,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13983:28:66",
                      "memberName": "receiverPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48698,
                      "src": "13981:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49081,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "14048:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14040:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49079,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14040:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14040:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49077,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "14014:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14022:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "14014:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14014:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13981:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49085,
                  "nodeType": "ExpressionStatement",
                  "src": "13981:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49087,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14082:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49088,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14084:26:66",
                        "memberName": "senderPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48692,
                        "src": "14082:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49089,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "14112:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49090,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14114:28:66",
                          "memberName": "senderInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48670,
                          "src": "14112:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 49091,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "14145:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14147:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "14145:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14112:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393830206c6f636b6564",
                        "id": 49094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14163:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        },
                        "value": "sender should have 980 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        }
                      ],
                      "id": 49086,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14073:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14073:122:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49096,
                  "nodeType": "ExpressionStatement",
                  "src": "14073:122:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49098,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14214:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14216:28:66",
                        "memberName": "receiverPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48698,
                        "src": "14214:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49100,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "14246:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14248:30:66",
                          "memberName": "receiverInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48672,
                          "src": "14246:32:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 49102,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "14281:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14283:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "14281:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14246:51:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203130206c6f636b6564",
                        "id": 49105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14299:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        },
                        "value": "receiver should have 10 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        }
                      ],
                      "id": 49097,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14205:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14205:127:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49107,
                  "nodeType": "ExpressionStatement",
                  "src": "14205:127:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49108,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "14428:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14431:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "14428:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14428:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49112,
                  "nodeType": "ExpressionStatement",
                  "src": "14428:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49118,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48189,
                            "src": "14490:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 49117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14482:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14482:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14482:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49120,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14506:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14508:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48684,
                        "src": "14506:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49122,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14520:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14522:14:66",
                        "memberName": "transferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48712,
                        "src": "14520:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 49124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14538:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "3639",
                        "id": 49125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14544:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        },
                        "value": "69"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        }
                      ],
                      "expression": {
                        "id": 49113,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48176,
                        "src": "14455:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 49115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14467:14:66",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39910,
                      "src": "14455:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 49126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14455:92:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 49127,
                  "nodeType": "ExpressionStatement",
                  "src": "14455:92:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14608:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 49128,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "14603:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 49130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14603:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49131,
                  "nodeType": "ExpressionStatement",
                  "src": "14603:12:66"
                },
                {
                  "documentation": "transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49137,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48189,
                                "src": "14768:13:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 49136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14760:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49135,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14760:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14760:22:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49133,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "14731:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 49134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14739:20:66",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45893,
                          "src": "14731:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14731:52:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49140,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14785:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14787:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48680,
                        "src": "14785:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 49142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14810:46:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 49132,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14722:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14722:135:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49144,
                  "nodeType": "ExpressionStatement",
                  "src": "14722:135:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49150,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48176,
                                "src": "14913:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 49149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14905:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49148,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14905:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14905:20:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 49146,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48118,
                            "src": "14876:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 49147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14884:20:66",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45893,
                          "src": "14876:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14876:50:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49153,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "14928:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49154,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14930:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48674,
                        "src": "14928:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 49155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14951:44:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 49145,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14867:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14867:129:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49157,
                  "nodeType": "ExpressionStatement",
                  "src": "14867:129:66"
                },
                {
                  "expression": {
                    "id": 49176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 49158,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15060:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "15062:13:66",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48688,
                          "src": "15060:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49161,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15057:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49166,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "15114:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15106:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49164,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15106:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15106:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 49168,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15130:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15132:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48684,
                          "src": "15130:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 49170,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15144:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49171,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15146:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "15144:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 49172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15162:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 49173,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15168:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15170:13:66",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48686,
                          "src": "15168:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 49162,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48176,
                          "src": "15079:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 49163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15091:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39910,
                        "src": "15079:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 49175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15079:105:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15057:127:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49177,
                  "nodeType": "ExpressionStatement",
                  "src": "15057:127:66"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 49188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49178,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "15292:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15294:19:66",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48676,
                      "src": "15292:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49185,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "15353:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15345:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15345:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15345:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49181,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "15316:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15324:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "15316:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15316:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15292:74:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49189,
                  "nodeType": "ExpressionStatement",
                  "src": "15292:74:66"
                },
                {
                  "expression": {
                    "id": 49200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49190,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "15376:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15378:21:66",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48682,
                      "src": "15376:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49197,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "15439:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15431:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15431:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15431:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49193,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "15402:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15410:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "15402:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15402:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15376:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49201,
                  "nodeType": "ExpressionStatement",
                  "src": "15376:78:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49203,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "15473:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15475:19:66",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48676,
                        "src": "15473:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49205,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "15496:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49206,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15498:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48674,
                        "src": "15496:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 49207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15519:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 49202,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15464:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15464:91:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49209,
                  "nodeType": "ExpressionStatement",
                  "src": "15464:91:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49211,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "15574:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15576:21:66",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48682,
                        "src": "15574:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49213,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "15599:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15601:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48680,
                        "src": "15599:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 49215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15624:37:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 49210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15565:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15565:97:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49217,
                  "nodeType": "ExpressionStatement",
                  "src": "15565:97:66"
                },
                {
                  "expression": {
                    "id": 49228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49218,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "15716:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15718:26:66",
                      "memberName": "senderPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48694,
                      "src": "15716:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49225,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "15781:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15773:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15773:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15773:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49221,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "15747:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15755:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "15747:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15747:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15716:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49229,
                  "nodeType": "ExpressionStatement",
                  "src": "15716:78:66"
                },
                {
                  "expression": {
                    "id": 49240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49230,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "15804:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15806:28:66",
                      "memberName": "receiverPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48700,
                      "src": "15804:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49237,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "15871:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15863:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15863:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15863:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49233,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "15837:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15845:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "15837:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15837:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15804:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49241,
                  "nodeType": "ExpressionStatement",
                  "src": "15804:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49243,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "15905:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15907:26:66",
                        "memberName": "senderPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48694,
                        "src": "15905:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49245,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15935:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15937:26:66",
                          "memberName": "senderPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48692,
                          "src": "15935:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 49247,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "15966:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15968:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "15966:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15935:47:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393730206c6f636b6564",
                        "id": 49250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15985:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        },
                        "value": "sender should have 970 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        }
                      ],
                      "id": 49242,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15896:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15896:121:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49252,
                  "nodeType": "ExpressionStatement",
                  "src": "15896:121:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49254,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "16036:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16038:28:66",
                        "memberName": "receiverPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48700,
                        "src": "16036:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 49256,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "16068:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16070:28:66",
                          "memberName": "receiverPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48698,
                          "src": "16068:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 49258,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "16101:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16103:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48712,
                          "src": "16101:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16068:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203230206c6f636b6564",
                        "id": 49261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16119:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        },
                        "value": "receiver should have 20 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        }
                      ],
                      "id": 49253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16027:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16027:125:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49263,
                  "nodeType": "ExpressionStatement",
                  "src": "16027:125:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49264,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16236:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16239:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "16236:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16236:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49268,
                  "nodeType": "ExpressionStatement",
                  "src": "16236:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49274,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48097,
                            "src": "16298:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16290:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16290:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16290:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49276,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "16304:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16306:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48684,
                        "src": "16304:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 49278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16318:8:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 49279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16328:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 49280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16335:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 49269,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48176,
                        "src": "16263:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 49271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16275:14:66",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39910,
                      "src": "16263:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 49281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16263:74:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 49282,
                  "nodeType": "ExpressionStatement",
                  "src": "16263:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16445:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 49283,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "16440:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 49285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16440:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49286,
                  "nodeType": "ExpressionStatement",
                  "src": "16440:12:66"
                },
                {
                  "expression": {
                    "id": 49297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49287,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "16462:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49289,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16464:18:66",
                      "memberName": "senderPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48696,
                      "src": "16462:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49294,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "16522:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16514:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16514:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16514:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49290,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "16485:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16493:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "16485:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16485:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16462:73:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49298,
                  "nodeType": "ExpressionStatement",
                  "src": "16462:73:66"
                },
                {
                  "expression": {
                    "id": 49309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49299,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "16545:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16547:20:66",
                      "memberName": "receiverPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48702,
                      "src": "16545:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49306,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "16607:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16599:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16599:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16599:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49302,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "16570:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16578:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45893,
                        "src": "16570:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16570:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16545:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49310,
                  "nodeType": "ExpressionStatement",
                  "src": "16545:77:66"
                },
                {
                  "expression": {
                    "id": 49339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 49311,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "16635:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "16637:13:66",
                          "memberName": "receiverLock3",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48690,
                          "src": "16635:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49314,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16632:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49319,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "16689:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16681:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49317,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16681:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16681:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 49321,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "16705:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16707:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48684,
                          "src": "16705:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 49333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 49323,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48718,
                                    "src": "16720:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 49324,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16722:28:66",
                                  "memberName": "senderInitialLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48670,
                                  "src": "16720:30:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 49325,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48718,
                                    "src": "16753:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 49326,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16755:25:66",
                                  "memberName": "senderBaseLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48666,
                                  "src": "16753:27:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16720:60:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 49331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 49328,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16784:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 49329,
                                        "name": "t",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48718,
                                        "src": "16788:1:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                        }
                                      },
                                      "id": 49330,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "16790:14:66",
                                      "memberName": "transferAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48712,
                                      "src": "16788:16:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16784:20:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 49332,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "16783:22:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16720:85:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 49334,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16719:87:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 49335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16808:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 49336,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48718,
                            "src": "16814:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 49337,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16816:13:66",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48688,
                          "src": "16814:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 49315,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48176,
                          "src": "16654:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 49316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16666:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39910,
                        "src": "16654:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 49338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16654:176:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16632:198:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49340,
                  "nodeType": "ExpressionStatement",
                  "src": "16632:198:66"
                },
                {
                  "expression": {
                    "id": 49351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49341,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "16884:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16886:26:66",
                      "memberName": "senderPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48704,
                      "src": "16884:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49348,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48176,
                              "src": "16949:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16941:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16941:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16941:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49344,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "16915:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16923:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "16915:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16915:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16884:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49352,
                  "nodeType": "ExpressionStatement",
                  "src": "16884:78:66"
                },
                {
                  "expression": {
                    "id": 49363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49353,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48718,
                        "src": "16972:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 49355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16974:28:66",
                      "memberName": "receiverPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48706,
                      "src": "16972:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49360,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48189,
                              "src": "17039:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40418",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 49359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17031:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17031:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17031:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49356,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48118,
                          "src": "17005:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$47505",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 49357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17013:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43821,
                        "src": "17005:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17005:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16972:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49364,
                  "nodeType": "ExpressionStatement",
                  "src": "16972:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49366,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "17073:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49367,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17075:26:66",
                        "memberName": "senderPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48704,
                        "src": "17073:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49368,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "17103:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49369,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17105:25:66",
                        "memberName": "senderBaseLockedLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48666,
                        "src": "17103:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "616c6c206f662073656e6465722773206c6f636b6564206c69717569646974792073686f756c64206265206261636b20746f2062617365206c6576656c",
                        "id": 49370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17132:63:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        },
                        "value": "all of sender's locked liquidity should be back to base level"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        }
                      ],
                      "id": 49365,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17064:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17064:132:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49372,
                  "nodeType": "ExpressionStatement",
                  "src": "17064:132:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49374,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48718,
                          "src": "17215:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 49375,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17217:28:66",
                        "memberName": "receiverPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48706,
                        "src": "17215:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 49376,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48718,
                                "src": "17248:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 49377,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17250:30:66",
                              "memberName": "receiverInitialLockedLiquidity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48672,
                              "src": "17248:32:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 49378,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48718,
                                      "src": "17284:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 49379,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "17286:28:66",
                                    "memberName": "senderInitialLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48670,
                                    "src": "17284:30:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 49380,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48718,
                                      "src": "17317:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$48713_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 49381,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "17319:25:66",
                                    "memberName": "senderBaseLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48666,
                                    "src": "17317:27:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17284:60:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 49383,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17283:62:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17248:97:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49385,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17247:99:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64206861766520616c6c206f662073656e6465722773206c6f636b6564",
                        "id": 49386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17348:45:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        },
                        "value": "receiver should have all of sender's locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        }
                      ],
                      "id": 49373,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17206:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 49387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17206:188:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49388,
                  "nodeType": "ExpressionStatement",
                  "src": "17206:188:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49389,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "17405:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17408:9:66",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "17405:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17405:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49393,
                  "nodeType": "ExpressionStatement",
                  "src": "17405:14:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4532452054657374205375636365737321",
                        "id": 49397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17443:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        },
                        "value": "E2E Test Success!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        }
                      ],
                      "expression": {
                        "id": 49394,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "17430:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 49396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17439:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "17430:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 49398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17430:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49399,
                  "nodeType": "ExpressionStatement",
                  "src": "17430:33:66"
                }
              ]
            },
            "functionSelector": "185a8d73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEnd2End",
            "nameLocation": "10597:11:66",
            "parameters": {
              "id": 48714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10608:2:66"
            },
            "returnParameters": {
              "id": 48715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10618:0:66"
            },
            "scope": 49402,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48083,
              "name": "Test",
              "nameLocations": [
                "1351:4:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "1351:4:66"
            },
            "id": 48084,
            "nodeType": "InheritanceSpecifier",
            "src": "1351:4:66"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          37092,
          40418,
          47505,
          49442
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49402,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "1321:26:66",
        "scope": 49403,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 66
}