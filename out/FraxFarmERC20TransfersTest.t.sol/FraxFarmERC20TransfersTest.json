{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonCompliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDepositAndSendToExsitingVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMeetsOnLockReceivedCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNonOnLockReceivedCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVaultPermanance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1101:18926:81:-:0;;;;;;-1:-1:-1;1101:18926:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1101:18926:81;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;1101:18926:81;;;;;;;-1:-1:-1;;;;;1101:18926:81;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;1383:42;;;;:::i;:::-;1458;;;;:::i;:::-;1566:51;1574:42;1566:51;;:::i;:::-;1655:42;;;;:::i;:::-;1789:65;;1811:42;1789:65;:::i;:::-;;;:::i;:::-;1909:51;1917:42;1909:51;;:::i;:::-;2003;2011:42;2003:51;;:::i;:::-;2090;2098:42;2090:51;;:::i;:::-;2179;2187:42;2179:51;;:::i;:::-;2601;2609:42;2601:51;;:::i;:::-;2712;2720:42;2712:51;;:::i;:::-;2890:49;;2896:42;2890:49;:::i;:::-;;;:::i;:::-;3034:51;3042:42;3034:51;;:::i;:::-;3120:49;;3126:42;3120:49;:::i;:::-;;;:::i;:::-;3264:51;3272:42;3264:51;;:::i;:::-;3418:42;;;;:::i;:::-;3500:51;3508:42;3500:51;;:::i;:::-;3590;3598:42;3590:51;;:::i;:::-;3677:42;;;;:::i;:::-;1101:18926::o;365:92:11:-;;320:43;115:1185:1;91:4525:10;15938:4423:5;147:15741;120:3862:4;117:7236:3;;:::i;1101:18926:81:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;715:15435:0:-;1594:4;;;;:::i",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1101:18926:81:-:0;;;;;;;;;-1:-1:-1;1101:18926:81;;;;;-1:-1:-1;1101:18926:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;3474:77::-;;;;;:::i;1101:18926::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1101:18926:81;;;;;;;;2060:81;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;2147:83;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1269:28;;;;;:::i;1101:18926::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2570:82;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1623:74;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1431:69;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3357:27;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2676:87;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1533:84;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1966:88;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;3321:30;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1750:104;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1878:82;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1151:39;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1196:21;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3564:77;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1359:66;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3391:69;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3091:78;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3648:71;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1330:18;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2863:76;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;3005:80;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3233:82;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;:::i;1101:18926:81:-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1304:20;;;;;:::i;1101:18926::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;1631:104:0:-;1671:64;1679:55;1687:46;1695:37;1703:28;1695:37;:::i;:::-;1687:46;:::i;:::-;1679:55;:::i;:::-;1671:64;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;1101:18926:81;;1671:64:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;1101:18926:81;;;;1671:64:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;1101:18926:81;:::o;1671:64:0:-;1101:18926:81;;;1671:64:0;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1101:18926:81;;;1671:64:0;;:::i;1819:584::-;1873:7;;;:::i;:::-;1869:528;;;1903:7;;;:::i;1869:528::-;1961:5;1941:25;1984:16;;:::i;:::-;1980:374;;2367:19;;:::o;1980:374::-;2047:12;;;;;:::i;:::-;1671:64;2221:17;2086:175;;1671:64;2196:43;;1101:18926:81;;;;2196:43:0;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1101:18926:81;;2086:175:0;;;;;;;;1671:64;;;;;;;;;1101:18926:81;;;2086:175:0;;;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2312:27;;;1671:64;;;2312:27;;;;;;;;:::i;2840:242::-;2928:1;2905:24;;;:::i;:::-;2939:104;3059:16;;2939:104;;3059:16;;:::i;:::-;;1101:18926:81;;3059:16:0;;2840:242;:::o;221:94:1:-;260:55;268:46;276:37;284:28;276:37;:::i;268:46::-;260:55;:::i;1222:40::-;1248:14;1251:10;;:::i;:::-;1248:14;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1101:18926:81;;;1248:14:1;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;1101:18926:81;;1248:14:1;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;1101:18926:81;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;1101:18926:81;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;1101:18926:81;;1248:14:1;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;1101:18926:81;;1248:14:1;;;;;;;;;;;;;;;;;;1671:64:0;;1248:14:1;;;;;:::i;:::-;;;;;;;1101:18926:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:18926:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;1101:18926:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;1101:18926:81:o;1248:14:1:-;;;:::i;4273:2995:81:-;4343:7;:2;;:::i;:7::-;;4335:83;4343:75;;4351:66;4343:75;1101:18926;;;;4343:75;;;;;;;1248:14:1;;;;4343:75:81;;;;;;;:::i;:::-;;;;;;;;;;;4273:2995;4343:75;;;;4273:2995;4335:83;;;:::i;:::-;4428:7;4436:5;;;:::i;:::-;4443:10;4428:26;;4443:10;4428:26;;;;;;;4273:2995;1101:18926;;4428:26;;;;;;;;1248:14:1;;;;4428:26:81;;;;;;;:::i;:::-;;;;;;;;;;;4273:2995;4428:26;;4273:2995;4514:8;4549:81;4514:8;4523:5;4514:24;;4523:5;;;:::i;:::-;4514:24;;;;;4273:2995;1101:18926;;4514:24;;;;;;1248:14:1;;;;4514:24:81;;;;;;;:::i;:::-;;;;;;;;;;;4273:2995;4514:24;;4273:2995;4563:66;4555:75;;4563:66;4555:75;;;1101:18926;;;;4555:75;;;;;;1248:14:1;;;;4555:75:81;;;;;;;;;;;4273:2995;4555:75;;;;4273:2995;4549:81;;;:::i;:::-;4640:24;;4648:3;;;;:::i;:::-;4640:24;;;;;1101:18926;;4640:24;1101:18926;4640:24;;;;;;;;;;;4273:2995;4640:24;;4273:2995;4683:3;4674:20;;4683:3;;;:::i;:::-;4674:20;;;;;;4273:2995;4674:20;;1101:18926;;;;4674:20;;;;;;;:::i;:::-;;;;;;;;;;;4273:2995;4674:20;;4273:2995;-1:-1:-1;4742:15:81;5343:155;4742:15;4787:35;4763:13;4771:4;4763:13;:::i;:::-;4742:35;;;;;;:::i;:::-;4787;:::i;:::-;4832:12;4895:24;4832:12;:24;;4850:5;4832:24;:::i;:::-;;;:::i;:::-;4895;4913:5;4895:24;:::i;:::-;;;:::i;:::-;5356:142;4959:19;:24;:46;:24;;1248:14:1;;4959:24:81;4992:11;;;:::i;:::-;4959:46;;:::i;:::-;5015:13;;5062:37;5015:13;:37;5042:8;;;:::i;:::-;5015:37;;:::i;:::-;5089:8;;;:::i;5062:37::-;5161:11;5153:32;5161:11;;;:::i;:::-;5153:32;;;;;4273:2995;5153:32;;;;;;1101:18926;;;;5153:32;;;;;;;;1248:14:1;;;;5153:32:81;;;;;;;;;4273:2995;5153:32;;4273:2995;5203:13;;5195:34;5203:13;;;:::i;:::-;5195:34;;;;;4273:2995;5195:34;;;;;;1101:18926;;;;5195:34;;;;;;;;;4273:2995;5195:34;;4273:2995;5239:34;;;;;;4273:2995;5239:34;;;;;;;;;1101:18926;;;;5239:34;;;;;;;;;4273:2995;5239:34;;4273:2995;5443:17;;5483:14;;;:::i;:::-;5356:142;;1101:18926;;;;5356:142;;;;;;;;;;;;;;;;;4273:2995;5356:142;;;;;:::i;:::-;;;;;;;;;4273:2995;5343:155;;:::i;:::-;5508:7;5524;5508:51;;5516:16;5524:7;;;:::i;5516:16::-;5534:24;:19;5542:10;;;:::i;5534:19::-;:24;:::i;:::-;5508:51;;;;;;4273:2995;1101:18926;;5508:51;;;;;;;1248:14:1;;;;5508:51:81;;;;;;;:::i;:::-;;;;;;;;;;;4273:2995;5508:51;;4273:2995;5605:7;5570:43;5605:7;;;:::i;5570:43::-;5680:22;5691:11;1101:18926;;;;5691:11;;;;;;;;;;;;;;;4273:2995;5691:11;;;;1101:18926;;5691:11;;;;;;;;;4273:2995;5680:22;;:::i;:::-;5712:89;:19;:8;;;:::i;:19::-;;;5755:7;5712:89;5755:7;5747:16;5755:7;;;:::i;5747:16::-;5765:14;5712:89;5765:14;;;:::i;:::-;5781:19;;;:::i;:::-;5712:89;;;;;;4273:2995;1101:18926;;5712:89;;;;;;;1248:14:1;;;;5712:89:81;;;;;;;:::i;:::-;;;;;;;;;4273:2995;5712:89;;4273:2995;5923:11;5907:53;;5915:20;5923:11;;;:::i;5915:20::-;5937:22;:17;5945:8;;;:::i;5937:22::-;5907:53;;;;;;4273:2995;1101:18926;;5907:53;;;;;;;1248:14:1;;;;5907:53:81;;;;;;;;;;;4273:2995;5907:53;;4273:2995;5986:13;5970:55;;5978:22;5986:13;;;:::i;5970:55::-;;;;;;;;;;;4273:2995;5970:55;;4273:2995;6116:13;;;;:::i;:::-;6183:2;6135:51;;1101:18926;;;;6135:51;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;6116:71;;;;;;;;;;;;;;;;:::i;:::-;6076:111;6198:38;;;:::i;:::-;1671:64:0;;6272:31:81;;;;;;;;;;;:::i;:::-;6266:38;;;:::i;:::-;6246:58;;;;:::i;:::-;6356:17;;;:::i;:::-;6348:26;;;:::i;:::-;6314:61;;:::i;:::-;;;;;:::i;:::-;6443:10;;;:::i;:::-;6435:19;;;:::i;:::-;:31;6386:81;;:::i;:::-;;;;;:::i;:::-;1101:18926;;6549:16;;;;;;;;;;;;;7048:38;6549:16;6639:40;;7054:31;6549:16;;;6536:29;6549:16;;7031:55;6549:16;;;;;6840:29;6549:16;;;4273:2995;6549:16;;;;1101:18926;;6549:16;;;;;;;;;4273:2995;6536:29;;:::i;:::-;6591:10;6575:54;6583:19;6591:10;;;:::i;6583:19::-;6612:10;6575:54;6604:24;:19;6612:10;;;:::i;6604:24::-;6575:54;;;;;4273:2995;1101:18926;;6575:54;;;;;;1248:14:1;;;;6575:54:81;;;;;;;;;;;4273:2995;6575:54;;4273:2995;6655:10;6639:40;6647:19;6655:10;;;:::i;6647:19::-;6639:40;;;;;;1101:18926;;6639:40;1101:18926;6639:40;;;;;;;;;;;4273:2995;6639:40;;4273:2995;6747:10;6689:82;6739:19;6747:10;;;:::i;6739:19::-;:31;6689:82;;:::i;:::-;;:::i;:::-;6840:8;6857:10;6840:29;6857:10;6849:19;6857:10;;;:::i;6849:19::-;6840:29;;;;;;4273:2995;1101:18926;;6840:29;;;;;;;1248:14:1;;;;6840:29:81;;;;;;;:::i;:::-;;;;;;;;;4273:2995;6840:29;;4273:2995;6901:13;6920:51;;6901:13;;;:::i;:::-;6920:51;;1101:18926;;;;6920:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;6901:71;;;;;;;;;6983:38;6901:71;;:::i;:::-;6879:93;6983:38;:::i;:::-;7054:31;;;1671:64:0;;;7054:31:81;;;;;;;;:::i;7048:38::-;7031:55;;:::i;:::-;7096:58;7130:23;7138:14;;;:::i;7130:23::-;7096:58;;:::i;:::-;;:::i;:::-;7164:96;7224:22;;:20;:14;;;:::i;:20::-;;:22;;1101:18926;;;;7224:22;;;;1248:14:1;;;;7224:22:81;;;;;;;;;;;;;;4273:2995;7224:22;;;;4273:2995;7223:36;;7164:96;;:::i;7224:22::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;6840:29;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;1101:18926;;;6840:29;;;6639:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;6639:40;;;6575:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;6549:16;;;:::i;:::-;;;;;;:::i;:::-;;;5970:55;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5970:55;;;5907:53;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;5712:89;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5712:89;;;5691:11;;;:::i;:::-;;;;;;:::i;:::-;;;5508:51;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5508:51;;;5356:142;;;:::i;:::-;;;;;;:::i;:::-;;;5239:34;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5239:34;;;5195;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5195:34;;;5153:32;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;5153:32;;;4674:20;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;4674:20;;;4640:24;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;4640:24;;;4555:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4514:24;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;4514:24;;;4428:26;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4343:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1101:18926;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7056:145:14;;7139:54;;7056:145;7139:54;;1101:18926:81;;;;7139:54:14;;;;;;;;;;;;;:::i;:::-;852:159;641:376;;735:14;;1671:64:0;;;735:14:14;784:15;852:159;;591:42;852:159;;;641:376::o;1101:18926:81:-;;;;;;;;;;;;;;;;;;;:::i;7508:145:14:-;;7591:54;;7508:145;7591:54;;1101:18926:81;;;;7591:54:14;;;;;;;;;;;;;:::i;1101:18926:81:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1101:18926:81:o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;1248:14:1;1671:64:0;;;1101:18926:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;7753:5085::-;12773:14;8651:1;7816:18;;:::i;:::-;7913:83;7922:28;;:26;:11;;;:::i;:26::-;;:28;;1101:18926;;;;7922:28;;;;;;;;;;;;;;7753:5085;7922:28;;;;7753:5085;7960:7;7952:16;7960:7;;;:::i;7952:16::-;7913:83;;:::i;:::-;;;:::i;:::-;12665:97;8058:13;:2;;:::i;:13::-;;;8072:11;8058:26;8072:11;;;:::i;:::-;8058:26;;;;;;7753:5085;8058:26;;1101:18926;;;;8058:26;;;;;;;;;;;7753:5085;8058:26;;7753:5085;8126:12;9485:83;9041:50;8126:12;8814:70;8823:8;8126:12;;;:::i;:::-;8151:9;;8126:35;8151:9;8126:35;:::i;:::-;8162;;1101:18926;;;;8162:35;;;;;;;;;;;;1101:18926;8162:35;8126:72;;;;;;;;;;;;:::i;:::-;;8222:6;;;;;:::i;:::-;8234:58;;8280:11;;;:::i;:::-;1101:18926;;8234:58;;;;;;;;;;;;:::i;:::-;8222:71;;;;;;;;;;8314:31;8222:71;;:::i;:::-;8210:8;;;8208:85;;;1671:64:0;;8314:31:81;;;;;;;;;;:::i;:::-;8303:8;:42;:8;;;:42;;1101:18926;;8303:42;8355:60;8364:8;;1101:18926;;;8364:8;8355:60;;;:::i;:::-;;;:::i;:::-;8425:40;8456:8;;1101:18926;;;8456:8;8425:40;;:::i;:::-;8525:34;:26;8543:6;;;:::i;8525:34::-;:68;:34;8560:13;;;;:::i;:::-;8575:17;8525:68;8575:17;;8525:68;;;1101:18926;;;;8525:68;;;;;;;:::i;:::-;;;;;;;;;7753:5085;8525:68;;7753:5085;8613:13;8603:84;:38;:24;8613:13;;;:::i;8603:38::-;;;8642:33;;;;;:::i;:::-;8643:10;8642:33;8643:10;;;:::i;:::-;8642:33;;;1101:18926;;8642:33;;;;1101:18926;;8642:33;8603:84;8677:9;8603:84;;;;;1101:18926;;;;8603:84;;;;;;;:::i;:::-;;;;;;;;;7753:5085;8603:84;;7753:5085;8718:9;8697:54;8708:43;;:30;:20;8718:9;;;:::i;8708:30::-;;8739:11;8708:43;8739:11;;;:::i;:::-;8708:43;;1101:18926;;;;8708:43;;;;;;;;1248:14:1;;;;8708:43:81;;;;;;;;;;7753:5085;8708:43;;;;8697:54;;1101:18926;;8697:54;8761:43;8795:8;;1101:18926;;;8795:8;8761:43;;:::i;:::-;1101:18926;;;8823:8;8814:70;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;9041:50;:28;:7;;;:::i;:28::-;9070:20;9078:11;;;:::i;9070:20::-;9041:50;;1101:18926;;;;9041:50;;;;;;;;1248:14:1;9041:50:81;1248:14:1;9041:50:81;;;;;;;;;;7753:5085;9041:50;;;;7753:5085;9024:14;9192:71;9024:14;:67;:14;;;:67;;1101:18926;;9024:67;9101:47;9133:14;;1101:18926;;;9133:14;9101:47;;:::i;:::-;9206:57;:30;:11;;;:::i;:30::-;;;9249:12;9206:57;9249:12;;9206:57;;;1101:18926;;;;9206:57;;;;;;;:::i;:::-;;;;;;;;;;7753:5085;9206:57;;;;7753:5085;9192:11;;;;1101:18926;;9192:71;9273:23;;;:::i;:::-;;:::i;:::-;9326:11;;9192;;;1101:18926;;;9326:11;;:::i;:::-;9348:68;9366:50;;:28;:7;;;:::i;:28::-;9395:20;9403:11;;;:::i;9395:20::-;9366:50;;1101:18926;;;;9366:50;;;;;;;;1248:14:1;9366:50:81;1248:14:1;9366:50:81;;;;;;;;;;7753:5085;9366:50;;;;7753:5085;9348:15;;;;1101:18926;;9348:68;9426:49;9459:15;9348;;;1101:18926;;;9459:15;9426:49;;:::i;:::-;9511:18;:14;9494:15;9348;;;1101:18926;;;9494:15;9511:14;1101:18926;;;9511:14;:18;9528:1;9511:18;:::i;:::-;;;:::i;:::-;9485:83;;:::i;:::-;11177:12;9637;9642:6;9637:12;:::i;:::-;;;;:::i;:::-;9729:77;9754:52;;:28;:7;;;:::i;:28::-;9783:22;9791:13;;;:::i;9754:52::-;;;;;;;;;;7753:5085;9754:52;;;;7753:5085;9729:22;;;;1101:18926;;9729:77;9816:83;9876:22;9729;;;1101:18926;;;9876:22;9816:83;;:::i;:::-;10001:102;10018:26;:11;;;:::i;:26::-;:85;10082:8;10045:22;10053:13;;;:::i;10045:22::-;9192:11;10069;9192;;;1101:18926;;;10069:11;10092:10;;;;:::i;:::-;10018:85;;;1101:18926;;;;10018:85;;;;;;;;1248:14:1;10018:85:81;;;;;;:::i;:::-;;;;;;;;;;7753:5085;10018:85;;;;7753:5085;10004:10;;;;1101:18926;;10001:102;10221:74;10245:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;7753:5085;10245:50;;;;7753:5085;10221:21;;;;1101:18926;;10221:74;10305:78;10331:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;7753:5085;10331:52;;;;7753:5085;10305:23;;;;1101:18926;;10305:78;10393:77;10448:21;10221;;;1101:18926;;;10448:21;10393:77;;:::i;:::-;10480:83;10539:23;10305;;;1101:18926;;;10539:23;10480:83;;:::i;:::-;10573;10582:21;10221;;;1101:18926;;;10582:21;9348:15;;;1101:18926;10573:83;;:::i;:::-;10666:99;10675:23;10305;;;1101:18926;;;10675:23;10701:26;:22;9729;;;1101:18926;;;10701:26;10666:99;;:::i;:::-;10953:17;;;;;7753:5085;1101:18926;;1248:14:1;10953:17:81;;;1101:18926;10953:17;1101:18926;10953:17;;;;;;;;7753:5085;10953:17;;7753:5085;10980:11;:26;:11;;;:::i;:26::-;:141;10082:8;11007:22;11015:13;;;:::i;11007:22::-;9192:11;11031;9192;;;1101:18926;;;11031:11;11054:66;;10980:141;;;1101:18926;;;;10980:141;;;;;;;;1248:14:1;10980:141:81;;;;;;:::i;:::-;;;;;;;;;7753:5085;10980:141;;7753:5085;11177:12;;:::i;:::-;11395:135;11404:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;7753:5085;11404:52;;;;7753:5085;-1:-1:-1;10305:23:81;;;1101:18926;11395:135;;:::i;:::-;11540:129;11549:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;7753:5085;11549:50;;;;7753:5085;-1:-1:-1;10221:21:81;;;1101:18926;11540:129;;:::i;:::-;12050:64;11747:26;:11;;;:::i;:26::-;:85;10082:8;11774:22;11782:13;;;:::i;11774:22::-;9192:11;11798;9192;;;1101:18926;;;11798:11;10004:10;11821;10004;;;1101:18926;;;11821:10;11747:85;;;1101:18926;;;;11747:85;;;;;;;;;;7753:5085;11747:85;;;;7753:5085;11733:10;11730:102;11733:10;;;11730:102;;1101:18926;;11730:102;11931:27;;;:::i;:::-;11988:10;;10004;;;1101:18926;;;11988:10;12029;;;1101:18926;;;12029:10;12071;12059;10004;;;1101:18926;;;12059:10;12071;1101:18926;;;12071:10;12050:64;;:::i;:::-;;;:::i;:::-;12699:23;10305;12674;12331:52;12245:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;7753:5085;12245:50;;;;7753:5085;12221:21;:74;:21;;;:74;;1101:18926;;12221:74;12331:52;:28;:7;;;:::i;:28::-;12360:22;12368:13;;;:::i;12331:52::-;;;;;;;;;;7753:5085;12331:52;;;;7753:5085;12305:23;12573:21;12564:91;12305:23;:78;:23;;;:78;;1101:18926;;12305:78;12393:77;12448:21;;1101:18926;;;12448:21;12393:77;;:::i;:::-;12480:74;12530:23;;1101:18926;;;12530:23;12480:74;;:::i;12573:21::-;10221;;;1101:18926;12564:91;;:::i;12674:23::-;10305;;1101:18926;;;12699:23;12665:97;;:::i;:::-;12773:12;:14;;;;;;7753:5085;1101:18926;;12773:14;1101:18926;12773:14;;;;;;;;;;;;;;;7753:5085;12773:14;;7753:5085;12798:33;;;;:::i;12773:14::-;;;8651:1;12773:14;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;12773:14;;;12331:52;12564:91;12331:52;;;;12573:21;12331:52;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;12245:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;11747:85;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;11549:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;11404:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10980:141;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10953:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;10953:17;;;10331:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10245:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10018:85;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9754:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9366:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9206:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9041:50;9192:71;9041:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;8708:43;;;;;;;;;;;;;;:::i;:::-;8697:54;1101:18926;;8708:43;;;:::i;:::-;;;8603:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;8525:68;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;8058:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;8058:26;;;7922:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1101:18926;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;1671:64:0;1101:18926:81;;;;;;;;1671:64:0;;;1101:18926:81;:::i;3897:185:0:-;3979:6;;;:::i;:::-;;;;:::i;:::-;;3975:101;;3897:185;;;:::o;3975:101::-;4063:1;4006:31;;;;;1101:18926:81;;;;4006:31:0;;;;;;:::i;:::-;;;;4063:1;:::i;1101:18926:81:-;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;1671:64:0;1101:18926:81;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;1671:64:0;3615:277;;3678:6;;;:::i;:::-;;;;:::i;:::-;;3674:212;;3615:277;;:::o;3674:212::-;3768:34;3705:44;3821:34;3705:44;;;1101:18926:81;;;;3705:44:0;1101:18926:81;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;3705:44;3768:34;;;;;1101:18926:81;;;;3768:34:0;;;;;;:::i;:::-;;;;1101:18926:81;;3821:34:0;;;;;:::i;:::-;;;;;;:::i;1101:18926:81:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2410:424:0:-;2449:16;;:::i;:::-;2445:359;;2410:424;2813:14;2823:4;2813:14;;:::i;2445:359::-;2499:245;:12;;;:::i;:::-;1671:64;2670:17;2534:196;;2645:67;;1671:64;2689:22;2697:13;2705:4;2697:13;:::i;:::-;2689:22;:::i;:::-;2645:67;;1101:18926:81;;;;2645:67:0;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;4370:185;4452:6;;;4448:101;;4370:185;;;:::o;4448:101::-;4536:1;4479:31;;;;;1101:18926:81;;;;4479:31:0;;;;4536:1;:::i;1101:18926:81:-;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;;;;;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;;;;4088:277:0;;;4151:6;;4147:212;;4088:277;;:::o;4147:212::-;4241:34;4178:44;4294:34;4178:44;;;1101:18926:81;;;;4178:44:0;1101:18926:81;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;4178:44;4241:34;;;;;1101:18926:81;;;;4241:34:0;;;;;;:::i;:::-;;;;1101:18926:81;;4294:34:0;;;;;:::i;5469:178::-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;5628:1;5572:30;;;;;1101:18926:81;;;;5572:30:0;;;;5202:262;;5259:6;;5255:203;;5202:262;;:::o;5255:203::-;5346:31;5286:41;5396:31;5286:41;;;1101:18926:81;;;;5286:41:0;1101:18926:81;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;5286:41;5346:31;;;;;1101:18926:81;;;;7020:178:0;7096:6;;;;7092:100;;7020:178;;;:::o;7092:100::-;7179:1;7123:30;;;;;1101:18926:81;;;;7123:30:0;;;;7179:1;:::i;1101:18926:81:-;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;;;;;;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;;1101:18926:81;;;;6756:259:0;6813:6;;;;6809:200;;6756:259;;:::o;6809:200::-;6899:30;6840:40;6948:30;6840:40;;;1101:18926:81;;;;6840:40:0;1101:18926:81;;;;;;;;1248:14:1;1101:18926:81;1248:14:1;;;1101:18926:81;;;;;;1671:64:0;;6840:40;6899:30;;;;;1101:18926:81;;;;6899:30:0;;;;;;:::i;:::-;;;;1101:18926:81;;6948:30:0;;;;;:::i;16060:84:5:-;16085:59;16088:55;16096:46;16104:37;16112:28;16104:37;:::i;16255:93::-;16310:31;;16255:93;16310:7;:2;;:::i;:7::-;:31;:7;16318:22;16310:7;16318:15;;:22;:::i;16310:31::-;;;;;;1101:18926:81;16085:59:5;;;;1101:18926:81;16310:31:5;;;;;;;;;16255:93;16310:31;;16255:93;:::o;16310:31::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;5857:123:14;5929:43;;;5857:123;5929:43;1101:18926:81;;;;5929:43:14;;;;;;;;;;;;1101:18926:81;;;16085:59:5;;;1101:18926:81;;;;;;;;;;;;:::i;6108:121:14:-;6179:42;;;6108:121;6179:42;1101:18926:81;;;;6179:42:14;;;;;;;;;;;;;:::i;1101:18926:81:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;15216:1804::-;15276:13;:2;;:::i;:13::-;;:26;;15290:11;;;:::i;:::-;15276:26;;;;;;15216:1804;15276:26;;1101:18926;;;;15276:26;;;;;;;;;;;15216:1804;15276:26;;15216:1804;15313:12;16916:14;15791:33;15313:12;;;:::i;:::-;15338:9;15313:72;15338:9;15313:35;15338:9;15313:35;:::i;:::-;15349;;1101:18926;;;;15349:35;;;;;;;;;;;;1101:18926;15349:35;15313:72;;;;;;;;;;;;:::i;:::-;;15420:71;:6;;;;:::i;:::-;15432:58;;15478:11;;;:::i;15432:58::-;15420:71;;;;;;;;;;15557:58;15518:29;15420:71;;:::i;:::-;15518:29;;;1671:64:0;;;15518:29:81;15557:58;;;:::i;:::-;15674:34;:26;15692:6;;;:::i;15674:34::-;:68;:34;15709:13;;;;:::i;:::-;15724:17;15674:68;;15724:17;15674:68;;;1101:18926;;;;15674:68;;;;;;;;;15216:1804;15674:68;;15216:1804;15762:13;15752:38;:24;15762:13;;;:::i;15752:38::-;;;:84;15791:33;;;:::i;:::-;15800:1;15792:10;;;;;15791:33;15792:10;;;:::i;:::-;15791:33;;;1101:18926;;15791:33;15752:84;15826:9;15752:84;;;;;1101:18926;;;;15752:84;;;;;;;;;15216:1804;15752:84;;15216:1804;15865:9;15959:68;15855:43;;:30;:20;15865:9;;;:::i;15855:43::-;;;;;;;;;;15216:1804;15855:43;;;;15216:1804;15846:52;15908:41;;;;:::i;15959:68::-;16088:57;:30;:11;;;:::i;:30::-;;;16131:12;16088:57;16131:12;;16088:57;;;1101:18926;;;;16088:57;;;;;;;;;;15216:1804;16088:57;;;;15216:1804;16155:23;;;;:::i;:::-;16208:7;;;:::i;:::-;16501:12;;16506:6;16501:12;:::i;:::-;;:::i;:::-;16613:15;:17;;;;;15216:1804;16613:17;;1101:18926;;;;16613:17;;1248:14:1;;;;16613:17:81;;;;;;;;;;;;;;;15216:1804;16613:17;;15216:1804;16654:11;:77;:26;:11;;;:::i;:26::-;;16689:17;16654:77;16689:17;16681:26;16689:17;;;:::i;16681:26::-;16718:8;16654:77;16718:8;16654:77;1101:18926;;;;16654:77;;;;;;;;1248:14:1;;;;16654:77:81;;;;;;;:::i;:::-;;;;;;;;;;15216:1804;16654:77;;;;15216:1804;16640:91;16916:12;;:14;;;;;;1101:18926;;16916:14;1101:18926;16916:14;;;;;;;;;;;;;;;15216:1804;16916:14;;15216:1804;16941:72;;;;;:::i;16916:14::-;;;;;;-1:-1:-1;16916:14:81;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;16654:77;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;16613:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;16613:17;;;16088:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;15855:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;15752:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;15674:68;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;15276:26;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;15276:26;;;1101:18926;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;17026:2387::-;17088:13;:2;;:::i;:13::-;;:35;;17110:11;;;:::i;:::-;17088:35;;;;;;17026:2387;17088:35;;1101:18926;;;;17088:35;;;;;;;;;;;17026:2387;17088:35;;17026:2387;17134:12;19312:14;17612:33;17134:12;;;:::i;17612:33::-;17573:84;17647:9;17573:84;;;;;1101:18926;;;;17573:84;;;;;;;;;17026:2387;17573:84;;17026:2387;17686:9;17780:68;17676:43;;:30;:20;17686:9;;;:::i;17780:68::-;17909:57;:30;:11;;;:::i;:30::-;;;17952:12;17909:57;17952:12;;17909:57;;;1101:18926;;;;17909:57;;;;;;;;;;17026:2387;17909:57;;;;17026:2387;17976:23;;;;:::i;:::-;18029:7;;;:::i;:::-;18791:12;;18796:6;18791:12;:::i;:::-;19046:95;19105:22;;:20;:14;;;:::i;:22::-;;;;;;;;;;;;;;17026:2387;19105:22;;;;17026:2387;19104:36;;19046:95;;:::i;:::-;19227:74;:26;:11;;;:::i;:26::-;;19262:14;19227:74;19262:14;19254:23;19262:14;;;:::i;19312:::-;;;;;;;;;;;;;;;17026:2387;19312:14;;17026:2387;19337:69;;;;;:::i;19312:14::-;;;;;;-1:-1:-1;19312:14:81;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;19105:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;17909:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;17573:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;17088:35;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:18926;;;17088:35;;;1101:18926;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;19419:606::-;19929:89;19506:23;19514:14;;;:::i;19506:23::-;19467:96;19539:20;:14;;;:::i;:20::-;;:22;;;1101:18926;;;;19539:22;;;;;1248:14:1;;;;19539:22:81;;;;;;;;;;;;;;19419:606;19539:22;;;;19419:606;19467:96;;;:::i;:::-;;:::i;:::-;19573:56;19609:19;19617:10;;;:::i;19609:19::-;19573:56;;:::i;:::-;19639:105;19681:26;19689:17;;;:::i;19681:26::-;19717:23;:17;;;:::i;:23::-;:25;;;1101:18926;;;;19717:25;;;;;1248:14:1;;;;19717:25:81;;;;;;;;;;;;;;19419:606;19717:25;;;;19419:606;19639:105;;;:::i;:::-;19754:65;19793:23;:17;;;:::i;:23::-;:25;;1101:18926;;;;19793:25;;;;;1248:14:1;;;;19793:25:81;;;;;;;;;;;;;;19419:606;19793:25;;;;19419:606;19754:65;;;:::i;:::-;19829:90;19838:19;19846:10;;;:::i;19838:19::-;19859:20;:14;;;:::i;:20::-;:22;;1101:18926;;;;19859:22;;;;;1248:14:1;;;;19859:22:81;;;;;;;;;;;;;;19419:606;19859:22;;;;19419:606;19829:90;;;:::i;:::-;19953:25;;19938:13;19946:4;19938:13;:::i;:::-;19953:17;:23;:17;;;:::i;:25::-;;;;;;;;;;;;;;19419:606;19953:25;;;;19419:606;19929:89;;;:::i;19953:25::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;19859:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;19793:25;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;19717;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;19539:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1101:18926;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;14130:169:14:-;14225:66;14130:169;14225:66;;14130:169;14225:66;1101:18926:81;;;;14225:66:14;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "compliantVault()": "4676077e",
    "convexBooster()": "2cdacb50",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "distributor()": "bfe10928",
    "failed()": "ba414fa6",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFarm()": "6fa89364",
    "fxsToken()": "09dacc04",
    "nonCompliantVault()": "6f539c2e",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testDepositAndSendToExsitingVaults()": "c7b19271",
    "testMeetsOnLockReceivedCompliance()": "f6823097",
    "testNonOnLockReceivedCompliance()": "6ddd7969",
    "testVaultPermanance()": "14ac57f9",
    "vaultOwner()": "1f52692b",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCompliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDepositAndSendToExsitingVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMeetsOnLockReceivedCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNonOnLockReceivedCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testVaultPermanance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiverOwner()\":{\"notice\":\"The receiving vault owner - IS A CONTRACT\"},\"senderOwner()\":{\"notice\":\"The sending vault owner - IS NOT A CONTRACT\"},\"senderVault()\":{\"notice\":\"The sending vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"\",\"stackAllocation\":true}},\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax-solidity/src/hardhat/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d\",\"dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol\":{\"keccak256\":\"0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200\",\"dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol\":{\"keccak256\":\"0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f\",\"dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR\"]},\"lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/Math.sol\":{\"keccak256\":\"0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1\",\"dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol\":{\"keccak256\":\"0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98\",\"dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol\":{\"keccak256\":\"0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84\",\"dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol\":{\"keccak256\":\"0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15\",\"dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol\":{\"keccak256\":\"0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9\",\"dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol\":{\"keccak256\":\"0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613\",\"dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol\":{\"keccak256\":\"0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320\",\"dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol\":{\"keccak256\":\"0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5\",\"urls\":[\"bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72\",\"dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol\":{\"keccak256\":\"0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b\",\"dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol\":{\"keccak256\":\"0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c\",\"dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol\":{\"keccak256\":\"0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94\",\"dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol\":{\"keccak256\":\"0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5\",\"dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol\":{\"keccak256\":\"0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02\",\"dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol\":{\"keccak256\":\"0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff\",\"dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol\":{\"keccak256\":\"0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108\",\"dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol\":{\"keccak256\":\"0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47\",\"dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b\",\"dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a\",\"dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol\":{\"keccak256\":\"0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763\",\"dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d\",\"dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol\":{\"keccak256\":\"0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78\",\"dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol\":{\"keccak256\":\"0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0\",\"dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol\":{\"keccak256\":\"0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc\",\"dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b\",\"dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0xb6fc778df70bd8a98883a8d7eb457db6758e308bd418f35409c215ce86ae76d5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ea54bdbc03034fec8f18a15a9f98151dd9686623a8c8f30400820f9362f85c97\",\"dweb:/ipfs/QmaG4M1sYReHnTok9EnnayEHcXi8NB9cjzFeQpAKPu16zp\"]},\"src/FraxFarmERC20Transferrable.sol\":{\"keccak256\":\"0x955730c7b3bd7f9053ce0dd80c104911c3930d52589662d10c7d6a726d6c2d2a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c15d75fb4e039362e92bb7ecb5c935d888f3c595d60665fe9f32294edc2f3e1\",\"dweb:/ipfs/QmQMUEJ541381HYPJqn3dX1Kfn69wZpdSLLzaR7SP58wyG\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3\",\"dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK\"]},\"src/interfaces/ILockReceiver.sol\":{\"keccak256\":\"0xb5fddee92e65cc57747b52e459bdc0ccda9bf607043a205422845266aba066b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aca77177354b19ffdf6c96d535eb322f166cbe1f8d4e5ec34c085f57aaf079cc\",\"dweb:/ipfs/QmNwT2p4ZAoCem6YfC21ZpjXHQPg6fNTpHea71qnvGyQst\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0xcebd5664f7080d382ff7a311328785990fbb166478edad192f9e284a12ccf4c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f569df15ba2777e93f6ee4e417c08bf1f88c6861b9513da82c5dbf55cd3d482c\",\"dweb:/ipfs/QmW1s3C7i7YGv8iuWXkkztL5tH2dCuVTsFCTEMZEsqXqGo\"]},\"test/mocks/MockVaultOwner.sol\":{\"keccak256\":\"0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226\",\"dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonCompliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDepositAndSendToExsitingVaults"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMeetsOnLockReceivedCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNonOnLockReceivedCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testVaultPermanance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiverOwner()": {
            "notice": "The receiving vault owner - IS A CONTRACT"
          },
          "senderOwner()": {
            "notice": "The sending vault owner - IS NOT A CONTRACT"
          },
          "senderVault()": {
            "notice": "The sending vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "runs": 100000,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": ""
          }
        }
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol": {
        "keccak256": "0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e",
        "urls": [
          "bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d",
          "dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol": {
        "keccak256": "0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6",
        "urls": [
          "bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200",
          "dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol": {
        "keccak256": "0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172",
        "urls": [
          "bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f",
          "dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/Math.sol": {
        "keccak256": "0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda",
        "urls": [
          "bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1",
          "dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol": {
        "keccak256": "0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee",
        "urls": [
          "bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98",
          "dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol": {
        "keccak256": "0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad",
        "urls": [
          "bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84",
          "dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol": {
        "keccak256": "0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e",
        "urls": [
          "bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78",
          "dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol": {
        "keccak256": "0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7",
        "urls": [
          "bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb",
          "dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol": {
        "keccak256": "0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd",
        "urls": [
          "bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15",
          "dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol": {
        "keccak256": "0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d",
        "urls": [
          "bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9",
          "dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol": {
        "keccak256": "0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a",
        "urls": [
          "bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613",
          "dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol": {
        "keccak256": "0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c",
        "urls": [
          "bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89",
          "dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol": {
        "keccak256": "0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27",
        "urls": [
          "bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320",
          "dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol": {
        "keccak256": "0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5",
        "urls": [
          "bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72",
          "dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4"
        ],
        "license": null
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol": {
        "keccak256": "0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89",
        "urls": [
          "bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b",
          "dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol": {
        "keccak256": "0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7",
        "urls": [
          "bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c",
          "dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol": {
        "keccak256": "0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665",
        "urls": [
          "bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94",
          "dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol": {
        "keccak256": "0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b",
        "urls": [
          "bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5",
          "dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol": {
        "keccak256": "0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930",
        "urls": [
          "bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02",
          "dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol": {
        "keccak256": "0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838",
        "urls": [
          "bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff",
          "dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol": {
        "keccak256": "0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515",
        "urls": [
          "bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108",
          "dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol": {
        "keccak256": "0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff",
        "urls": [
          "bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47",
          "dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3",
        "urls": [
          "bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b",
          "dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c",
        "urls": [
          "bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a",
          "dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol": {
        "keccak256": "0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b",
        "urls": [
          "bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763",
          "dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol": {
        "keccak256": "0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285",
        "urls": [
          "bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d",
          "dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol": {
        "keccak256": "0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4",
        "urls": [
          "bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78",
          "dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol": {
        "keccak256": "0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d",
        "urls": [
          "bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0",
          "dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol": {
        "keccak256": "0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21",
        "urls": [
          "bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc",
          "dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol": {
        "keccak256": "0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784",
        "urls": [
          "bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b",
          "dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0xb6fc778df70bd8a98883a8d7eb457db6758e308bd418f35409c215ce86ae76d5",
        "urls": [
          "bzz-raw://ea54bdbc03034fec8f18a15a9f98151dd9686623a8c8f30400820f9362f85c97",
          "dweb:/ipfs/QmaG4M1sYReHnTok9EnnayEHcXi8NB9cjzFeQpAKPu16zp"
        ],
        "license": "UNLICENSED"
      },
      "src/FraxFarmERC20Transferrable.sol": {
        "keccak256": "0x955730c7b3bd7f9053ce0dd80c104911c3930d52589662d10c7d6a726d6c2d2a",
        "urls": [
          "bzz-raw://1c15d75fb4e039362e92bb7ecb5c935d888f3c595d60665fe9f32294edc2f3e1",
          "dweb:/ipfs/QmQMUEJ541381HYPJqn3dX1Kfn69wZpdSLLzaR7SP58wyG"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e",
        "urls": [
          "bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3",
          "dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILockReceiver.sol": {
        "keccak256": "0xb5fddee92e65cc57747b52e459bdc0ccda9bf607043a205422845266aba066b0",
        "urls": [
          "bzz-raw://aca77177354b19ffdf6c96d535eb322f166cbe1f8d4e5ec34c085f57aaf079cc",
          "dweb:/ipfs/QmNwT2p4ZAoCem6YfC21ZpjXHQPg6fNTpHea71qnvGyQst"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0xcebd5664f7080d382ff7a311328785990fbb166478edad192f9e284a12ccf4c4",
        "urls": [
          "bzz-raw://f569df15ba2777e93f6ee4e417c08bf1f88c6861b9513da82c5dbf55cd3d482c",
          "dweb:/ipfs/QmW1s3C7i7YGv8iuWXkkztL5tH2dCuVTsFCTEMZEsqXqGo"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockVaultOwner.sol": {
        "keccak256": "0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec",
        "urls": [
          "bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226",
          "dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 46832,
    "exportedSymbols": {
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "FRAXStablecoin": [
        34406
      ],
      "FraxFarmERC20TransfersTest": [
        46831
      ],
      "FraxUnifiedFarm_ERC20": [
        44766
      ],
      "IDeposits": [
        45395
      ],
      "IFraxFarmERC20": [
        45223
      ],
      "IFraxFarmTransfers": [
        45148
      ],
      "IFraxGaugeController": [
        39604
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        42648
      ],
      "VaultOwner": [
        46871
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:19989:81",
    "nodes": [
      {
        "id": 45334,
        "nodeType": "PragmaDirective",
        "src": "39:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 45335,
        "nodeType": "ImportDirective",
        "src": "65:28:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45336,
        "nodeType": "ImportDirective",
        "src": "94:26:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45338,
        "nodeType": "ImportDirective",
        "src": "122:76:81",
        "nodes": [],
        "absolutePath": "src/FraxFarmERC20Transferrable.sol",
        "file": "../src/FraxFarmERC20Transferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 44794,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45337,
              "name": "FraxUnifiedFarm_ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44766,
              "src": "130:21:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45340,
        "nodeType": "ImportDirective",
        "src": "199:80:81",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 42649,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45339,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42648,
              "src": "207:18:81",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45342,
        "nodeType": "ImportDirective",
        "src": "280:54:81",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol",
        "file": "@frax/../Frax/Frax.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 34407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45341,
              "name": "FRAXStablecoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34406,
              "src": "288:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45345,
        "nodeType": "ImportDirective",
        "src": "335:77:81",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 45304,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45343,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45148,
              "src": "343:18:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45344,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45223,
              "src": "363:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45346,
        "nodeType": "ImportDirective",
        "src": "413:61:81",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 39605,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45348,
        "nodeType": "ImportDirective",
        "src": "568:71:81",
        "nodes": [],
        "absolutePath": "test/mocks/MockVaultOwner.sol",
        "file": "@mocks/MockVaultOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46832,
        "sourceUnit": 46872,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45347,
              "name": "MockVaultOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46871,
              "src": "576:14:81",
              "typeDescriptions": {}
            },
            "local": "VaultOwner",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45395,
        "nodeType": "ContractDefinition",
        "src": "641:458:81",
        "nodes": [
          {
            "id": 45359,
            "nodeType": "FunctionDefinition",
            "src": "667:104:81",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "676:13:81",
            "parameters": {
              "id": 45355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45352,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "708:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45359,
                  "src": "690:26:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45349,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "690:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45351,
                    "length": {
                      "hexValue": "32",
                      "id": 45350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "698:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "690:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45354,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "726:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45359,
                  "src": "718:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:54:81"
            },
            "returnParameters": {
              "id": 45358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45359,
                  "src": "762:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:9:81"
            },
            "scope": 45395,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45366,
            "nodeType": "FunctionDefinition",
            "src": "776:68:81",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "785:9:81",
            "parameters": {
              "id": 45362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45361,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "803:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45366,
                  "src": "795:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:17:81"
            },
            "returnParameters": {
              "id": 45365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45366,
                  "src": "835:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:9:81"
            },
            "scope": 45395,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45375,
            "nodeType": "FunctionDefinition",
            "src": "849:74:81",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "858:7:81",
            "parameters": {
              "id": 45371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45368,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "874:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45375,
                  "src": "866:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45370,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "891:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45375,
                  "src": "883:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "865:33:81"
            },
            "returnParameters": {
              "id": 45374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45375,
                  "src": "917:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:6:81"
            },
            "scope": 45395,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45380,
            "nodeType": "FunctionDefinition",
            "src": "928:43:81",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "937:7:81",
            "parameters": {
              "id": 45378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45377,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "953:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45380,
                  "src": "945:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:17:81"
            },
            "returnParameters": {
              "id": 45379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:81"
            },
            "scope": 45395,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45387,
            "nodeType": "FunctionDefinition",
            "src": "976:56:81",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "985:7:81",
            "parameters": {
              "id": 45385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45382,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1001:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45387,
                  "src": "993:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45384,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1018:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45387,
                  "src": "1010:11:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:81"
            },
            "returnParameters": {
              "id": 45386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:81"
            },
            "scope": 45395,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45394,
            "nodeType": "FunctionDefinition",
            "src": "1037:60:81",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "1046:10:81",
            "parameters": {
              "id": 45392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45389,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1065:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45394,
                  "src": "1057:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45391,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "1078:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45394,
                  "src": "1073:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45390,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:31:81"
            },
            "returnParameters": {
              "id": 45393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:81"
            },
            "scope": 45395,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45395
        ],
        "name": "IDeposits",
        "nameLocation": "651:9:81",
        "scope": 46832,
        "usedErrors": []
      },
      {
        "id": 46831,
        "nodeType": "ContractDefinition",
        "src": "1101:18926:81",
        "nodes": [
          {
            "id": 45400,
            "nodeType": "VariableDeclaration",
            "src": "1151:39:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1180:10:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45399,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45398,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "1151:21:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44766,
                "src": "1151:21:81"
              },
              "referencedDeclaration": 44766,
              "src": "1151:21:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45403,
            "nodeType": "VariableDeclaration",
            "src": "1196:21:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1209:8:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45402,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45401,
                "name": "Vault",
                "nameLocations": [
                  "1196:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "1196:5:81"
              },
              "referencedDeclaration": 42648,
              "src": "1196:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45406,
            "nodeType": "VariableDeclaration",
            "src": "1269:28:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f52692b",
            "mutability": "mutable",
            "name": "vaultOwner",
            "nameLocation": "1287:10:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 45405,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45404,
                "name": "VaultOwner",
                "nameLocations": [
                  "1269:10:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46871,
                "src": "1269:10:81"
              },
              "referencedDeclaration": 46871,
              "src": "1269:10:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45408,
            "nodeType": "VariableDeclaration",
            "src": "1304:20:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1319:5:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45407,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45410,
            "nodeType": "VariableDeclaration",
            "src": "1330:18:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1345:3:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45409,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1330:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45413,
            "nodeType": "VariableDeclaration",
            "src": "1359:66:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1374:6:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45411,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 45412,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1383:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 45416,
            "nodeType": "VariableDeclaration",
            "src": "1431:69:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1446:9:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45414,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1431:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 45415,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1458:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 45422,
            "nodeType": "VariableDeclaration",
            "src": "1533:84:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "1548:15:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45417,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1533:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 45420,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1574:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45419,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1566:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45418,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1566:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45421,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1566:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45425,
            "nodeType": "VariableDeclaration",
            "src": "1623:74:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "1638:14:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45423,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1623:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 45424,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1655:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 45431,
            "nodeType": "VariableDeclaration",
            "src": "1750:104:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "1779:7:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45427,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45426,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "1750:21:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44766,
                "src": "1750:21:81"
              },
              "referencedDeclaration": 44766,
              "src": "1750:21:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 45429,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1811:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45428,
                "name": "FraxUnifiedFarm_ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44766,
                "src": "1789:21:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44766_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                }
              },
              "id": 45430,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1789:65:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45437,
            "nodeType": "VariableDeclaration",
            "src": "1878:82:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "1893:13:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45432,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1878:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 45435,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1917:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45434,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1909:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45433,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1909:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45436,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1909:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45443,
            "nodeType": "VariableDeclaration",
            "src": "1966:88:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "1981:19:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45438,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1966:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 45441,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2011:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45440,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2003:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45439,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2003:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45442,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2003:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45449,
            "nodeType": "VariableDeclaration",
            "src": "2060:81:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "2075:12:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45444,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2060:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 45447,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2098:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45446,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2090:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45445,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2090:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2090:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45455,
            "nodeType": "VariableDeclaration",
            "src": "2147:83:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "2162:14:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45450,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2147:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 45453,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2187:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45452,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2179:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45451,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2179:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45454,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2179:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45461,
            "nodeType": "VariableDeclaration",
            "src": "2570:82:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "2585:13:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45456,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2570:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 45459,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2609:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45458,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2601:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45457,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2601:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45460,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2601:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45467,
            "nodeType": "VariableDeclaration",
            "src": "2676:87:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "2691:18:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45462,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2676:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 45465,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2720:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45464,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2712:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45463,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2712:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45466,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2712:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45474,
            "nodeType": "VariableDeclaration",
            "src": "2863:76:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45468,
              "nodeType": "StructuredDocumentation",
              "src": "2829:29:81",
              "text": "@notice The sending vault"
            },
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "2876:11:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45470,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45469,
                "name": "Vault",
                "nameLocations": [
                  "2863:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "2863:5:81"
              },
              "referencedDeclaration": 42648,
              "src": "2863:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 45472,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2896:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45471,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42648,
                "src": "2890:5:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45473,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2890:49:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45481,
            "nodeType": "VariableDeclaration",
            "src": "3005:80:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45475,
              "nodeType": "StructuredDocumentation",
              "src": "2945:55:81",
              "text": "@notice The sending vault owner - IS NOT A CONTRACT"
            },
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "3020:11:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45476,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3005:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 45479,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3042:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45478,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3034:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3034:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45480,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3034:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45487,
            "nodeType": "VariableDeclaration",
            "src": "3091:78:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "3104:13:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45482,
                "name": "Vault",
                "nameLocations": [
                  "3091:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "3091:5:81"
              },
              "referencedDeclaration": 42648,
              "src": "3091:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 45485,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3126:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45484,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42648,
                "src": "3120:5:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45486,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3120:49:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45494,
            "nodeType": "VariableDeclaration",
            "src": "3233:82:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45488,
              "nodeType": "StructuredDocumentation",
              "src": "3175:53:81",
              "text": "@notice The receiving vault owner - IS A CONTRACT"
            },
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "3248:13:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45489,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3233:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 45492,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3272:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45491,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3264:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45490,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3264:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3264:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45497,
            "nodeType": "VariableDeclaration",
            "src": "3321:30:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f539c2e",
            "mutability": "mutable",
            "name": "nonCompliantVault",
            "nameLocation": "3334:17:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45496,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45495,
                "name": "Vault",
                "nameLocations": [
                  "3321:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "3321:5:81"
              },
              "referencedDeclaration": 42648,
              "src": "3321:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45500,
            "nodeType": "VariableDeclaration",
            "src": "3357:27:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "4676077e",
            "mutability": "mutable",
            "name": "compliantVault",
            "nameLocation": "3370:14:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45499,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45498,
                "name": "Vault",
                "nameLocations": [
                  "3357:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "3357:5:81"
              },
              "referencedDeclaration": 42648,
              "src": "3357:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45503,
            "nodeType": "VariableDeclaration",
            "src": "3391:69:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "3406:9:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45501,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3391:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 45502,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3418:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 45509,
            "nodeType": "VariableDeclaration",
            "src": "3474:77:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "3489:8:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45504,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3474:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 45507,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3508:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45506,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3500:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45505,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3500:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45508,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3500:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45515,
            "nodeType": "VariableDeclaration",
            "src": "3564:77:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "3579:8:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45510,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3564:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 45513,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3598:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45512,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3590:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45511,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3590:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45514,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3590:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45518,
            "nodeType": "VariableDeclaration",
            "src": "3648:71:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "3663:11:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45516,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3648:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
              "id": 45517,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3677:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
            },
            "visibility": "public"
          },
          {
            "id": 45521,
            "nodeType": "VariableDeclaration",
            "src": "4076:31:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "4094:13:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45519,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4076:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45520,
              "nodeType": "ArrayTypeName",
              "src": "4076:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45524,
            "nodeType": "VariableDeclaration",
            "src": "4113:33:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "4131:15:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45522,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4113:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45523,
              "nodeType": "ArrayTypeName",
              "src": "4113:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45527,
            "nodeType": "VariableDeclaration",
            "src": "4152:30:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "4170:12:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 45525,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4152:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 45526,
              "nodeType": "ArrayTypeName",
              "src": "4152:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45530,
            "nodeType": "VariableDeclaration",
            "src": "4188:35:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "4206:17:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45528,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4188:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45529,
              "nodeType": "ArrayTypeName",
              "src": "4188:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45533,
            "nodeType": "VariableDeclaration",
            "src": "4229:37:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "4247:19:81",
            "scope": 46831,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45531,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4229:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45532,
              "nodeType": "ArrayTypeName",
              "src": "4229:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45903,
            "nodeType": "FunctionDefinition",
            "src": "4273:2995:81",
            "nodes": [],
            "body": {
              "id": 45902,
              "nodeType": "Block",
              "src": "4297:2971:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45536,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45408,
                      "src": "4335:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4351:66:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 45537,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4343:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4346:4:81",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4343:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4343:75:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4335:83:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45542,
                  "nodeType": "ExpressionStatement",
                  "src": "4335:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45546,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45408,
                        "src": "4436:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4443:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45543,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4428:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4431:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4428:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4428:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45549,
                  "nodeType": "ExpressionStatement",
                  "src": "4428:26:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45553,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45408,
                        "src": "4523:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45550,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4514:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4517:5:81",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4514:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45556,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:24:81"
                },
                {
                  "expression": {
                    "id": 45562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45557,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45410,
                      "src": "4549:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4563:66:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 45558,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4555:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4558:4:81",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4555:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4555:75:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4549:81:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45563,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:81:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45567,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45410,
                        "src": "4648:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4653:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45564,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4640:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4643:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4640:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45570,
                  "nodeType": "ExpressionStatement",
                  "src": "4640:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45574,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45410,
                        "src": "4683:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 45575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4688:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 45571,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4674:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4677:5:81",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4674:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4674:20:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45577,
                  "nodeType": "ExpressionStatement",
                  "src": "4674:20:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45583,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4771:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4763:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4763:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4763:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45578,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45524,
                        "src": "4742:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4758:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4742:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4742:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45586,
                  "nodeType": "ExpressionStatement",
                  "src": "4742:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45592,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4816:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4808:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4808:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4808:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45587,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45524,
                        "src": "4787:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4803:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4787:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45595,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3132333435",
                        "id": 45599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4850:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        },
                        "value": "12345"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        }
                      ],
                      "expression": {
                        "id": 45596,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45527,
                        "src": "4832:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4845:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4832:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4832:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45601,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3234363930",
                        "id": 45605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4913:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        },
                        "value": "24690"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        }
                      ],
                      "expression": {
                        "id": 45602,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45527,
                        "src": "4895:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4908:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4895:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45607,
                  "nodeType": "ExpressionStatement",
                  "src": "4895:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45613,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45518,
                            "src": "4992:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4984:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4984:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4984:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45608,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45533,
                        "src": "4959:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4979:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4959:24:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4959:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45616,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45622,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45509,
                            "src": "5042:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5034:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45620,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5034:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5034:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45617,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45521,
                        "src": "5015:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5029:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5015:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5015:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45625,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45631,
                            "name": "cvxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45515,
                            "src": "5089:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5081:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5081:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5081:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45626,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45521,
                        "src": "5062:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5076:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5062:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45634,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45638,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45481,
                        "src": "5161:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5153:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5156:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5153:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45641,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45645,
                        "name": "receiverOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45494,
                        "src": "5203:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5218:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45642,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5195:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5198:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5195:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:34:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45648,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45654,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5255:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5247:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45652,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5247:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5262:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45649,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5239:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5242:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5239:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5239:34:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45658,
                  "nodeType": "ExpressionStatement",
                  "src": "5239:34:81"
                },
                {
                  "expression": {
                    "id": 45674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45659,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45400,
                      "src": "5343:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45665,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5390:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 45664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5382:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45663,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5382:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5382:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45667,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45521,
                          "src": "5397:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45668,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45524,
                          "src": "5412:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45669,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45527,
                          "src": "5429:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 45670,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45530,
                          "src": "5443:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45671,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45533,
                          "src": "5462:19:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45672,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45425,
                          "src": "5483:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5356:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_$44766_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20)"
                        },
                        "typeName": {
                          "id": 45661,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45660,
                            "name": "FraxUnifiedFarm_ERC20",
                            "nameLocations": [
                              "5360:21:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44766,
                            "src": "5360:21:81"
                          },
                          "referencedDeclaration": 44766,
                          "src": "5360:21:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      },
                      "id": 45673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5356:142:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "5343:155:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45675,
                  "nodeType": "ExpressionStatement",
                  "src": "5343:155:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45681,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45431,
                            "src": "5524:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5516:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5516:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5516:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45685,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45400,
                              "src": "5542:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            ],
                            "id": 45684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5534:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45683,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5534:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5534:19:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5554:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5534:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45676,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5508:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5511:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5508:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5508:51:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45689,
                  "nodeType": "ExpressionStatement",
                  "src": "5508:51:81"
                },
                {
                  "expression": {
                    "id": 45694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45690,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45400,
                      "src": "5570:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45692,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "5605:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        ],
                        "id": 45691,
                        "name": "FraxUnifiedFarm_ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44766,
                        "src": "5583:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44766_$",
                          "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                        }
                      },
                      "id": 45693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5583:30:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "5570:43:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45695,
                  "nodeType": "ExpressionStatement",
                  "src": "5570:43:81"
                },
                {
                  "expression": {
                    "id": 45701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45696,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45403,
                      "src": "5680:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5691:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$42648_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 45698,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45697,
                            "name": "Vault",
                            "nameLocations": [
                              "5695:5:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42648,
                            "src": "5695:5:81"
                          },
                          "referencedDeclaration": 42648,
                          "src": "5695:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 45700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5691:11:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "5680:22:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45702,
                  "nodeType": "ExpressionStatement",
                  "src": "5680:22:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45708,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5740:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5732:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5732:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5732:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45712,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45431,
                            "src": "5755:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5747:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45710,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5747:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5747:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45714,
                        "name": "cvxStkFrxEthLp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45425,
                        "src": "5765:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45715,
                        "name": "vaultRewardsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45443,
                        "src": "5781:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45703,
                        "name": "cvxVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45403,
                        "src": "5712:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 45705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5721:10:81",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41773,
                      "src": "5712:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 45716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:89:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45717,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:89:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45723,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45474,
                            "src": "5923:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5915:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5915:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5915:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45727,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45403,
                              "src": "5945:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5937:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45725,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5937:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5937:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5955:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5937:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45718,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5907:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5910:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5907:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45731,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45737,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45487,
                            "src": "5986:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5978:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5978:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5978:22:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45741,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45403,
                              "src": "6010:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6002:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6002:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6002:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6020:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6002:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45732,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5970:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5973:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5970:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5970:55:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45745,
                  "nodeType": "ExpressionStatement",
                  "src": "5970:55:81"
                },
                {
                  "assignments": [
                    45747,
                    45749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45747,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6082:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 45902,
                      "src": "6077:12:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45746,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6077:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45749,
                      "mutability": "mutable",
                      "name": "retBytes",
                      "nameLocation": "6104:8:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 45902,
                      "src": "6091:21:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45748,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6091:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45758,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6372656174655661756c742875696e7432353629",
                            "id": 45754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6159:22:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            "value": "createVault(uint256)"
                          },
                          {
                            "hexValue": "3336",
                            "id": 45755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6183:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            }
                          ],
                          "expression": {
                            "id": 45752,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6135:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6139:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6135:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 45756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6135:51:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45750,
                        "name": "convexBooster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45461,
                        "src": "6116:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 45751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6130:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "6116:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6116:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6076:111:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45760,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45747,
                        "src": "6206:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6372656174655661756c74206661696c6564",
                        "id": 45761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6215:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        },
                        "value": "createVault failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        }
                      ],
                      "id": 45759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6198:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6198:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45763,
                  "nodeType": "ExpressionStatement",
                  "src": "6198:38:81"
                },
                {
                  "expression": {
                    "id": 45774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45764,
                      "name": "nonCompliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45497,
                      "src": "6246:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45768,
                              "name": "retBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45749,
                              "src": "6283:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 45770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6294:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 45769,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6294:7:81",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 45771,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6293:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 45766,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6272:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6276:6:81",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6272:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 45772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6272:31:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 45765,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42648,
                        "src": "6266:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 45773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6266:38:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "6246:58:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45775,
                  "nodeType": "ExpressionStatement",
                  "src": "6246:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f6e436f6d706c69616e745661756c74",
                        "id": 45779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6327:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        "value": "nonCompliantVault"
                      },
                      {
                        "arguments": [
                          {
                            "id": 45782,
                            "name": "nonCompliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "6356:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6348:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45780,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6348:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6348:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45776,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6314:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6323:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6314:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 45784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6314:61:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45785,
                  "nodeType": "ExpressionStatement",
                  "src": "6314:61:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5641554c544f574e4552205052454445504c4f5920434f4445204c454e475448",
                        "id": 45789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6399:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        "value": "VAULTOWNER PREDEPLOY CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45792,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45406,
                                "src": "6443:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                  "typeString": "contract MockVaultOwner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                  "typeString": "contract MockVaultOwner"
                                }
                              ],
                              "id": 45791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6435:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45790,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6435:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6435:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6455:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6435:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6460:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6435:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45786,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6386:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6395:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6386:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6386:81:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45797,
                  "nodeType": "ExpressionStatement",
                  "src": "6386:81:81"
                },
                {
                  "expression": {
                    "id": 45803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45798,
                      "name": "vaultOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45406,
                      "src": "6536:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6549:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockVaultOwner_$46871_$",
                          "typeString": "function () returns (contract MockVaultOwner)"
                        },
                        "typeName": {
                          "id": 45800,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45799,
                            "name": "VaultOwner",
                            "nameLocations": [
                              "6553:10:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46871,
                            "src": "6553:10:81"
                          },
                          "referencedDeclaration": 46871,
                          "src": "6553:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                            "typeString": "contract MockVaultOwner"
                          }
                        }
                      },
                      "id": 45802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6549:16:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "src": "6536:29:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                      "typeString": "contract MockVaultOwner"
                    }
                  },
                  "id": 45804,
                  "nodeType": "ExpressionStatement",
                  "src": "6536:29:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45810,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45406,
                            "src": "6591:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 45809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6583:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6583:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6583:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45814,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45406,
                              "src": "6612:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 45813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6604:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45812,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6604:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6604:19:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6624:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6604:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45805,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6575:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6578:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6575:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6575:54:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45818,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45824,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45406,
                            "src": "6655:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 45823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6647:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6647:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6647:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6668:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45819,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6639:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6642:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "6639:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6639:40:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45828,
                  "nodeType": "ExpressionStatement",
                  "src": "6639:40:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5641554c544f574e455220504f53544445504c4f5920434f4445204c454e475448",
                        "id": 45832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6702:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3320961f0cd60788dd066a0066484bb3620278b676dae4cf9eaed770ddf4f84c",
                          "typeString": "literal_string \"VAULTOWNER POSTDEPLOY CODE LENGTH\""
                        },
                        "value": "VAULTOWNER POSTDEPLOY CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45835,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45406,
                                "src": "6747:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                  "typeString": "contract MockVaultOwner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                                  "typeString": "contract MockVaultOwner"
                                }
                              ],
                              "id": 45834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6739:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45833,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6739:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6739:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6759:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6739:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6764:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6739:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3320961f0cd60788dd066a0066484bb3620278b676dae4cf9eaed770ddf4f84c",
                          "typeString": "literal_string \"VAULTOWNER POSTDEPLOY CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45829,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6689:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6698:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6689:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:82:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45840,
                  "nodeType": "ExpressionStatement",
                  "src": "6689:82:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45846,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45406,
                            "src": "6857:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 45845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6849:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45844,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6849:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6849:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45841,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6840:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6843:5:81",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8607,
                      "src": "6840:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6840:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45849,
                  "nodeType": "ExpressionStatement",
                  "src": "6840:29:81"
                },
                {
                  "expression": {
                    "id": 45861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 45850,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45747,
                          "src": "6880:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 45851,
                          "name": "retBytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45749,
                          "src": "6889:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 45852,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6879:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "6372656174655661756c742875696e7432353629",
                              "id": 45857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6944:22:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                                "typeString": "literal_string \"createVault(uint256)\""
                              },
                              "value": "createVault(uint256)"
                            },
                            {
                              "hexValue": "3336",
                              "id": 45858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6968:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                                "typeString": "literal_string \"createVault(uint256)\""
                              },
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 45855,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6920:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6924:19:81",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "6920:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 45859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6920:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 45853,
                          "name": "convexBooster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45461,
                          "src": "6901:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6915:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6901:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6901:71:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "6879:93:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45862,
                  "nodeType": "ExpressionStatement",
                  "src": "6879:93:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45864,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45747,
                        "src": "6991:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6372656174655661756c74206661696c6564",
                        "id": 45865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7000:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        },
                        "value": "createVault failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        }
                      ],
                      "id": 45863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6983:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6983:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45867,
                  "nodeType": "ExpressionStatement",
                  "src": "6983:38:81"
                },
                {
                  "expression": {
                    "id": 45878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45868,
                      "name": "compliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45500,
                      "src": "7031:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45872,
                              "name": "retBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45749,
                              "src": "7065:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 45874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7076:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 45873,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7076:7:81",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 45875,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7075:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 45870,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7054:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7058:6:81",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "7054:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 45876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7054:31:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 45869,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42648,
                        "src": "7048:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 45877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7048:38:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "7031:55:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45879,
                  "nodeType": "ExpressionStatement",
                  "src": "7031:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f6e436f6d706c69616e745661756c74",
                        "id": 45883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7109:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        "value": "nonCompliantVault"
                      },
                      {
                        "arguments": [
                          {
                            "id": 45886,
                            "name": "compliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45500,
                            "src": "7138:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7130:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7130:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7130:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45880,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7096:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7105:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "7096:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 45888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45889,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5345545550205641554c54204445504c4f5920504f5354205052414e4b204f574e4552204c454e475448",
                        "id": 45893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7177:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf3d44ebb6df2abfe9685702ef4a345d78680742532ed0121b84f0d58b49ec1c",
                          "typeString": "literal_string \"SETUP VAULT DEPLOY POST PRANK OWNER LENGTH\""
                        },
                        "value": "SETUP VAULT DEPLOY POST PRANK OWNER LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "components": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 45894,
                                    "name": "compliantVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45500,
                                    "src": "7224:14:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                      "typeString": "contract StakingProxyConvex"
                                    }
                                  },
                                  "id": 45895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7239:5:81",
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40929,
                                  "src": "7224:20:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 45896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7224:22:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 45897,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7223:24:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7248:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7223:29:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7253:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7223:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cf3d44ebb6df2abfe9685702ef4a345d78680742532ed0121b84f0d58b49ec1c",
                          "typeString": "literal_string \"SETUP VAULT DEPLOY POST PRANK OWNER LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45890,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7164:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7173:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7164:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7164:96:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45901,
                  "nodeType": "ExpressionStatement",
                  "src": "7164:96:81"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4282:5:81",
            "parameters": {
              "id": 45534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:2:81"
            },
            "returnParameters": {
              "id": 45535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4297:0:81"
            },
            "scope": 46831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45928,
            "nodeType": "StructDefinition",
            "src": "7347:400:81",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 45905,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "7380:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7374:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 45904,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "7374:5:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45907,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "7404:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7396:14:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45906,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7396:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45909,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "7428:12:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7420:20:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45908,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7420:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45911,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "7458:13:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7450:21:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45910,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7450:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45913,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "7489:19:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7481:27:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45912,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7481:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45915,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "7526:19:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7518:27:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45914,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7518:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45917,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "7563:20:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7555:28:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45916,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7555:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45919,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "7601:21:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7593:29:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45918,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7593:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45921,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "7640:21:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7632:29:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45920,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7632:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45923,
                "mutability": "mutable",
                "name": "senderKek",
                "nameLocation": "7679:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7671:17:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45922,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7671:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45925,
                "mutability": "mutable",
                "name": "destKek1",
                "nameLocation": "7706:8:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7698:16:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45924,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7698:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45927,
                "mutability": "mutable",
                "name": "destKek2",
                "nameLocation": "7732:8:81",
                "nodeType": "VariableDeclaration",
                "scope": 45928,
                "src": "7724:16:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45926,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7724:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "7354:9:81",
            "scope": 46831,
            "visibility": "public"
          },
          {
            "id": 46409,
            "nodeType": "FunctionDefinition",
            "src": "7753:5085:81",
            "nodes": [],
            "body": {
              "id": 46408,
              "nodeType": "Block",
              "src": "7806:5032:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45933,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "7833:1:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46408,
                      "src": "7816:18:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 45932,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45931,
                          "name": "TestState",
                          "nameLocations": [
                            "7816:9:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45928,
                          "src": "7816:9:81"
                        },
                        "referencedDeclaration": 45928,
                        "src": "7816:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45934,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7816:18:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45936,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45474,
                            "src": "7922:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 45937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7934:14:81",
                          "memberName": "stakingAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40931,
                          "src": "7922:26:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 45938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7922:28:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45941,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45431,
                            "src": "7960:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7952:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7952:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7952:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374616b696e672061646472657373",
                        "id": 45943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7970:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        },
                        "value": "invalid staking address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        }
                      ],
                      "id": 45935,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "7913:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 45944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7913:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45945,
                  "nodeType": "ExpressionStatement",
                  "src": "7913:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45949,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45481,
                        "src": "8072:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45946,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8058:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8061:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "8058:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45951,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:26:81"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 45961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8186:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 45959,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8162:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8166:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "8162:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 45962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8162:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 45952,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45449,
                          "src": "8126:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8139:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8126:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8151:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 45956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8156:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "8151:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "8126:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8126:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 45964,
                  "nodeType": "ExpressionStatement",
                  "src": "8126:72:81"
                },
                {
                  "expression": {
                    "id": 45977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 45965,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "8210:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 45967,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "8212:6:81",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45905,
                          "src": "8210:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 45968,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8208:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 45973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8258:20:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "id": 45974,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45481,
                              "src": "8280:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45971,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8234:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8238:19:81",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "8234:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 45975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8234:58:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 45969,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45413,
                          "src": "8222:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8229:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8222:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8222:71:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "8208:85:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45978,
                  "nodeType": "ExpressionStatement",
                  "src": "8208:85:81"
                },
                {
                  "expression": {
                    "id": 45990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45979,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "8303:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 45981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8305:6:81",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45907,
                      "src": "8303:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 45984,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "8325:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 45985,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8327:6:81",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45905,
                          "src": "8325:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 45987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8336:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 45986,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8336:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 45988,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8335:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 45982,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "8314:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 45983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8318:6:81",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "8314:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 45989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8314:31:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8303:42:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45991,
                  "nodeType": "ExpressionStatement",
                  "src": "8303:42:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45993,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "8364:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8366:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45907,
                        "src": "8364:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8374:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 45996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8386:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 45992,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8355:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8355:60:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45998,
                  "nodeType": "ExpressionStatement",
                  "src": "8355:60:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784574682062616c616e6365",
                        "id": 46002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8438:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        "value": "frxEth balance"
                      },
                      {
                        "expression": {
                          "id": 46003,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "8456:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46004,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8458:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45907,
                        "src": "8456:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45999,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8425:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8434:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "8425:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8425:40:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46006,
                  "nodeType": "ExpressionStatement",
                  "src": "8425:40:81"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 46014,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45437,
                        "src": "8560:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8580:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46016,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8580:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46015,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "8575:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8575:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8589:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "8575:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46010,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45413,
                                "src": "8543:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8535:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8535:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8535:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46007,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "8525:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8525:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8552:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45375,
                      "src": "8525:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8525:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46021,
                  "nodeType": "ExpressionStatement",
                  "src": "8525:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8651:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8643:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46026,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8643:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8643:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8663:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8655:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46030,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8655:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8655:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46034,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8642:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8677:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46023,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45437,
                            "src": "8613:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46022,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "8603:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8603:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8628:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45359,
                      "src": "8603:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8603:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46037,
                  "nodeType": "ExpressionStatement",
                  "src": "8603:84:81"
                },
                {
                  "expression": {
                    "id": 46047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46038,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "8697:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46040,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8699:6:81",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45907,
                      "src": "8697:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46045,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45481,
                          "src": "8739:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46042,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45416,
                              "src": "8718:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46041,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45395,
                            "src": "8708:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8708:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45395",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8729:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45366,
                        "src": "8708:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8708:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8697:54:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46048,
                  "nodeType": "ExpressionStatement",
                  "src": "8697:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8774:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "expression": {
                          "id": 46053,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "8795:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46054,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8797:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45907,
                        "src": "8795:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46049,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8761:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8770:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "8761:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8761:43:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46056,
                  "nodeType": "ExpressionStatement",
                  "src": "8761:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46058,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "8823:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8825:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45907,
                        "src": "8823:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8833:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8844:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46057,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "8814:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:70:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46063,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:70:81"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 46074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46064,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "9024:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9026:12:81",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45909,
                      "src": "9024:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46071,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45474,
                              "src": "9078:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9070:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46069,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9070:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9070:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46067,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "9041:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9049:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "9041:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9041:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9024:67:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46075,
                  "nodeType": "ExpressionStatement",
                  "src": "9024:67:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7072652d6164642023206c6f636b73",
                        "id": 46079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9114:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        "value": "pre-add # locks"
                      },
                      {
                        "expression": {
                          "id": 46080,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "9133:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9135:12:81",
                        "memberName": "senderPreAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45909,
                        "src": "9133:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46076,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9101:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9110:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9101:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9101:47:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46083,
                  "nodeType": "ExpressionStatement",
                  "src": "9101:47:81"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "id": 46099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46084,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "9192:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9194:9:81",
                      "memberName": "senderKek",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45923,
                      "src": "9192:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 46089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9237:9:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 46096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 46094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 46092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 46090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9249:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 46091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9252:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "9249:5:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 46093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9255:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "9249:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 46095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9258:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "9249:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 46097,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9248:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 46087,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45474,
                          "src": "9206:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9218:18:81",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41829,
                        "src": "9206:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256) external returns (bytes32)"
                        }
                      },
                      "id": 46098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9206:57:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9192:71:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 46100,
                  "nodeType": "ExpressionStatement",
                  "src": "9192:71:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9286:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46101,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9273:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9282:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "9273:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9273:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46106,
                  "nodeType": "ExpressionStatement",
                  "src": "9273:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46110,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "9326:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46111,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9328:9:81",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45923,
                        "src": "9326:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46107,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9306:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9315:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "9306:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9306:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46113,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:32:81"
                },
                {
                  "expression": {
                    "id": 46124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46114,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "9348:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9350:13:81",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45911,
                      "src": "9348:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46121,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45474,
                              "src": "9403:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9395:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46119,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9395:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9395:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46117,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "9366:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9374:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "9366:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9366:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9348:68:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46125,
                  "nodeType": "ExpressionStatement",
                  "src": "9348:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f73742d6164642023206c6f636b73",
                        "id": 46129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9439:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        "value": "post-add # locks"
                      },
                      {
                        "expression": {
                          "id": 46130,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "9459:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9461:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45911,
                        "src": "9459:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46126,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9426:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9435:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9426:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9426:49:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46133,
                  "nodeType": "ExpressionStatement",
                  "src": "9426:49:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46135,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "9494:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9496:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45911,
                        "src": "9494:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46137,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "9511:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9513:12:81",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45909,
                          "src": "9511:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 46139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9528:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9511:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 46141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9531:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 46134,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9485:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9485:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46143,
                  "nodeType": "ExpressionStatement",
                  "src": "9485:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9642:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46144,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "9637:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9637:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46147,
                  "nodeType": "ExpressionStatement",
                  "src": "9637:12:81"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 46158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46148,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "9729:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9731:20:81",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45917,
                      "src": "9729:22:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46155,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45487,
                              "src": "9791:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9783:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9783:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9783:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46151,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "9754:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9762:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "9754:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9754:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9729:77:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46159,
                  "nodeType": "ExpressionStatement",
                  "src": "9729:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265636569766572206265666f726520726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9829:45:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        "value": "Receiver before receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46164,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "9876:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9878:20:81",
                        "memberName": "receiverPreTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45917,
                        "src": "9876:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46160,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9816:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9825:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9816:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9816:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46167,
                  "nodeType": "ExpressionStatement",
                  "src": "9816:83:81"
                },
                {
                  "expression": {
                    "id": 46186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46168,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "10004:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46170,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "10006:8:81",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45925,
                          "src": "10004:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46171,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "10001:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46176,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45487,
                              "src": "10053:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10045:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46174,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10045:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10045:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46178,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "10069:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10071:9:81",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45923,
                          "src": "10069:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10082:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10100:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10092:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 46181,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10092:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10092:10:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46172,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45474,
                          "src": "10018:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10030:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "10018:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10018:85:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "10001:102:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46187,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:102:81"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 46198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46188,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "10221:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10223:19:81",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45913,
                      "src": "10221:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46195,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45474,
                              "src": "10282:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10274:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46193,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10274:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10274:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46191,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "10245:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10253:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "10245:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10245:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10221:74:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46199,
                  "nodeType": "ExpressionStatement",
                  "src": "10221:74:81"
                },
                {
                  "expression": {
                    "id": 46210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46200,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "10305:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10307:21:81",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45919,
                      "src": "10305:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46207,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45487,
                              "src": "10368:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10360:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46205,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10360:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10360:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46203,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "10331:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10339:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "10331:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10331:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10305:78:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46211,
                  "nodeType": "ExpressionStatement",
                  "src": "10305:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572312023206c6f636b73",
                        "id": 46215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10406:40:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        "value": "Sender after sending transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46216,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "10448:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10450:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45913,
                        "src": "10448:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46212,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10393:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10402:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10393:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10393:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46219,
                  "nodeType": "ExpressionStatement",
                  "src": "10393:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220416674657220726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10493:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        "value": "Receiver After receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46224,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "10539:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10541:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45919,
                        "src": "10539:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46220,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10480:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10489:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10480:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10480:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46227,
                  "nodeType": "ExpressionStatement",
                  "src": "10480:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46229,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "10582:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10584:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45913,
                        "src": "10582:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46231,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "10605:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46232,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10607:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45911,
                        "src": "10605:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 46233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10622:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 46228,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10573:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10573:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46235,
                  "nodeType": "ExpressionStatement",
                  "src": "10573:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46237,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "10675:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10677:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45919,
                        "src": "10675:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 46242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 46239,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45933,
                                "src": "10701:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 46240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10703:20:81",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45917,
                              "src": "10701:22:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 46241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10726:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10701:26:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46243,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10700:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 46244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10730:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 46236,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10666:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10666:99:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46246,
                  "nodeType": "ExpressionStatement",
                  "src": "10666:99:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46247,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "10953:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10956:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "10953:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10953:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46251,
                  "nodeType": "ExpressionStatement",
                  "src": "10953:17:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46257,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45487,
                            "src": "11015:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11007:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11007:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11007:22:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46259,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "11031:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11033:9:81",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45923,
                        "src": "11031:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11044:8:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303130663263",
                        "id": 46262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11054:66:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        },
                        "value": "0x0000000000000000000000000000000000000000000000000000000000010f2c"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        }
                      ],
                      "expression": {
                        "id": 46252,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45474,
                        "src": "10980:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10992:14:81",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42268,
                      "src": "10980:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                      }
                    },
                    "id": 46263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10980:141:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "id": 46264,
                  "nodeType": "ExpressionStatement",
                  "src": "10980:141:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11182:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46265,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "11177:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11177:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46268,
                  "nodeType": "ExpressionStatement",
                  "src": "11177:12:81"
                },
                {
                  "documentation": "TODO Commented out due to stack too deep with all the placeholders above while troubleshooting.\n transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46274,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45487,
                                "src": "11441:13:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11433:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46272,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11433:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11433:22:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46270,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45431,
                            "src": "11404:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11412:20:81",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43146,
                          "src": "11404:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11404:52:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46277,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "11458:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11460:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45919,
                        "src": "11458:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11483:46:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 46269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11395:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11395:135:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46281,
                  "nodeType": "ExpressionStatement",
                  "src": "11395:135:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46287,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45474,
                                "src": "11586:11:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11578:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46285,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11578:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11578:20:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46283,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45431,
                            "src": "11549:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11557:20:81",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43146,
                          "src": "11549:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11549:50:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46290,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "11601:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11603:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45913,
                        "src": "11601:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11624:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 46282,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11540:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11540:129:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46294,
                  "nodeType": "ExpressionStatement",
                  "src": "11540:129:81"
                },
                {
                  "expression": {
                    "id": 46311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46295,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "11733:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46297,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11735:8:81",
                          "memberName": "destKek2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45927,
                          "src": "11733:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46298,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11730:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46303,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45487,
                              "src": "11782:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11774:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11774:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11774:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46305,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "11798:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11800:9:81",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45923,
                          "src": "11798:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11811:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "expression": {
                            "id": 46308,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "11821:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11823:8:81",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45925,
                          "src": "11821:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46299,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45474,
                          "src": "11747:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11759:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "11747:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11747:85:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "11730:102:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46312,
                  "nodeType": "ExpressionStatement",
                  "src": "11730:102:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "426f7468206b656b496473",
                        "id": 46316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11944:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        },
                        "value": "Both kekIds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        }
                      ],
                      "expression": {
                        "id": 46313,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "11931:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11940:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "11931:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11931:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46318,
                  "nodeType": "ExpressionStatement",
                  "src": "11931:27:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46322,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "11988:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11990:8:81",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45925,
                        "src": "11988:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46319,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "11968:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11977:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "11968:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11968:31:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46325,
                  "nodeType": "ExpressionStatement",
                  "src": "11968:31:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46329,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12029:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12031:8:81",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45927,
                        "src": "12029:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46326,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12009:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12018:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "12009:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12009:31:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46332,
                  "nodeType": "ExpressionStatement",
                  "src": "12009:31:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46334,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12059:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46335,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12061:8:81",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45925,
                        "src": "12059:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 46336,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12071:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12073:8:81",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45927,
                        "src": "12071:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6661696c656420746f2073656e6420746f2073616d65206b656b4964",
                        "id": 46338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12083:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        },
                        "value": "failed to send to same kekId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        }
                      ],
                      "id": 46333,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 400,
                      "src": "12050:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 46339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12050:64:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46340,
                  "nodeType": "ExpressionStatement",
                  "src": "12050:64:81"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 46351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46341,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "12221:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12223:19:81",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45915,
                      "src": "12221:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46348,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45474,
                              "src": "12282:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12274:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12274:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12274:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46344,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "12245:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12253:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "12245:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12245:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12221:74:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46352,
                  "nodeType": "ExpressionStatement",
                  "src": "12221:74:81"
                },
                {
                  "expression": {
                    "id": 46363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46353,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "12305:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12307:21:81",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45921,
                      "src": "12305:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46360,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45487,
                              "src": "12368:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12360:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12360:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12360:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46356,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45431,
                          "src": "12331:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44766",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12339:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43146,
                        "src": "12331:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12331:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12305:78:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46364,
                  "nodeType": "ExpressionStatement",
                  "src": "12305:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572322023206c6f636b73",
                        "id": 46368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12406:40:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        "value": "Sender after sending transfer2 # locks"
                      },
                      {
                        "expression": {
                          "id": 46369,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12448:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12450:19:81",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45915,
                        "src": "12448:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46365,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12393:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12402:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12393:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12393:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46372,
                  "nodeType": "ExpressionStatement",
                  "src": "12393:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220706f7374207472616e7366657220322c2023206c6f636b73",
                        "id": 46376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12493:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        "value": "Receiver post transfer 2, # locks"
                      },
                      {
                        "expression": {
                          "id": 46377,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12530:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46378,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12532:21:81",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45921,
                        "src": "12530:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46373,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12480:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12489:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12480:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12480:74:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46380,
                  "nodeType": "ExpressionStatement",
                  "src": "12480:74:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46382,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12573:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12575:19:81",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45915,
                        "src": "12573:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46384,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12596:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46385,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12598:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45913,
                        "src": "12596:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12619:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 46381,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12564:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12564:91:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46388,
                  "nodeType": "ExpressionStatement",
                  "src": "12564:91:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46390,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12674:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12676:21:81",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45921,
                        "src": "12674:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46392,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45933,
                          "src": "12699:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45928_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12701:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45919,
                        "src": "12699:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12724:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 46389,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12665:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12665:97:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46396,
                  "nodeType": "ExpressionStatement",
                  "src": "12665:97:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46397,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "12773:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12776:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "12773:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12773:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46401,
                  "nodeType": "ExpressionStatement",
                  "src": "12773:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4532452054657374205375636365737321",
                        "id": 46405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12811:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        },
                        "value": "E2E Test Success!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        }
                      ],
                      "expression": {
                        "id": 46402,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12798:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12807:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "12798:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12798:33:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46407,
                  "nodeType": "ExpressionStatement",
                  "src": "12798:33:81"
                }
              ]
            },
            "functionSelector": "c7b19271",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDepositAndSendToExsitingVaults",
            "nameLocation": "7762:34:81",
            "parameters": {
              "id": 45929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7796:2:81"
            },
            "returnParameters": {
              "id": 45930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7806:0:81"
            },
            "scope": 46831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46576,
            "nodeType": "FunctionDefinition",
            "src": "15216:1804:81",
            "nodes": [],
            "body": {
              "id": 46575,
              "nodeType": "Block",
              "src": "15266:1754:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46415,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45481,
                        "src": "15290:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46412,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "15276:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15279:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "15276:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15276:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46417,
                  "nodeType": "ExpressionStatement",
                  "src": "15276:26:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 46427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15373:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 46425,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15349:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15353:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15349:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15349:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46418,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45449,
                          "src": "15313:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15326:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "15313:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15338:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 46422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15343:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "15338:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "15313:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15313:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 46430,
                  "nodeType": "ExpressionStatement",
                  "src": "15313:72:81"
                },
                {
                  "assignments": [
                    null,
                    46432
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 46432,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "15410:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "15397:19:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46431,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15397:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46441,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 46437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15456:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 46438,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45481,
                            "src": "15478:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46435,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15432:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15436:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15432:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15432:58:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46433,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45413,
                        "src": "15420:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 46434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15427:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "15420:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15420:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15395:96:81"
                },
                {
                  "assignments": [
                    46443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46443,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "15509:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "15501:14:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15501:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46446,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46432,
                        "src": "15529:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15538:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 46447,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15538:7:81",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 46449,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15537:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 46444,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15518:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "15522:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "15518:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15518:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15501:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46453,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46443,
                        "src": "15566:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15574:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 46455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15586:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 46452,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15557:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15557:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46457,
                  "nodeType": "ExpressionStatement",
                  "src": "15557:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46465,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45437,
                        "src": "15709:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15729:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46467,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15729:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46466,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "15724:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15724:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15738:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "15724:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46461,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45413,
                                "src": "15692:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15684:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46459,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15684:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15684:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46458,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "15674:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15674:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15701:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45375,
                      "src": "15674:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15674:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46472,
                  "nodeType": "ExpressionStatement",
                  "src": "15674:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15800:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15792:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46477,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15792:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15792:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15812:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15804:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46481,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15804:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15804:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46485,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15791:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15826:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46474,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45437,
                            "src": "15762:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46473,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "15752:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15752:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15777:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45359,
                      "src": "15752:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15752:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46488,
                  "nodeType": "ExpressionStatement",
                  "src": "15752:84:81"
                },
                {
                  "expression": {
                    "id": 46496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46489,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46443,
                      "src": "15846:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46494,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45481,
                          "src": "15886:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46491,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45416,
                              "src": "15865:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46490,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45395,
                            "src": "15855:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15855:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45395",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15876:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45366,
                        "src": "15855:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15855:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15846:52:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46497,
                  "nodeType": "ExpressionStatement",
                  "src": "15846:52:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15921:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "id": 46502,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46443,
                        "src": "15942:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46498,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "15908:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15917:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "15908:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15908:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46504,
                  "nodeType": "ExpressionStatement",
                  "src": "15908:41:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46506,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46443,
                        "src": "15968:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15976:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15987:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46505,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "15959:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15959:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46510,
                  "nodeType": "ExpressionStatement",
                  "src": "15959:68:81"
                },
                {
                  "assignments": [
                    46512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46512,
                      "mutability": "mutable",
                      "name": "lockKek",
                      "nameLocation": "16078:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "16070:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46511,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16070:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46525,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 46515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16119:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 46522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 46520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 46518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 46516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16131:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 46517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16134:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "16131:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 46519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16137:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "16131:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 46521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16140:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "16131:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 46523,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16130:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 46513,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45474,
                        "src": "16088:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16100:18:81",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41829,
                      "src": "16088:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) external returns (bytes32)"
                      }
                    },
                    "id": 46524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16088:57:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16070:75:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16168:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46526,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16155:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16164:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "16155:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16155:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46531,
                  "nodeType": "ExpressionStatement",
                  "src": "16155:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46535,
                        "name": "lockKek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46512,
                        "src": "16208:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46532,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16188:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16197:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "16188:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16188:28:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46537,
                  "nodeType": "ExpressionStatement",
                  "src": "16188:28:81"
                },
                {
                  "documentation": "Try calling on lock received",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16506:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46538,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "16501:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16501:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46541,
                  "nodeType": "ExpressionStatement",
                  "src": "16501:12:81"
                },
                {
                  "assignments": [
                    46543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46543,
                      "mutability": "mutable",
                      "name": "destKek",
                      "nameLocation": "16532:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46575,
                      "src": "16524:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46542,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16524:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46544,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16524:15:81"
                },
                {
                  "documentation": "Test sending to a non-compliant vault owner ///// ",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46545,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16613:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16616:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "16613:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16613:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46549,
                  "nodeType": "ExpressionStatement",
                  "src": "16613:17:81"
                },
                {
                  "expression": {
                    "id": 46562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 46550,
                          "name": "destKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46543,
                          "src": "16643:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46551,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16640:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46556,
                              "name": "nonCompliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45497,
                              "src": "16689:17:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16681:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46554,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16681:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16681:26:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46558,
                          "name": "lockKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46512,
                          "src": "16709:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16718:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "",
                          "id": 46560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16728:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 46552,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45474,
                          "src": "16654:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16666:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "16654:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16654:77:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "16640:91:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46563,
                  "nodeType": "ExpressionStatement",
                  "src": "16640:91:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46564,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16916:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16919:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "16916:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16916:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46568,
                  "nodeType": "ExpressionStatement",
                  "src": "16916:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d206e6f6e2d636f6d706c69616e74207661756c74204641494c53206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 46572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16954:58:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        },
                        "value": "PASS = non-compliant vault FAILS on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 46569,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16941:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16950:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "16941:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16941:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46574,
                  "nodeType": "ExpressionStatement",
                  "src": "16941:72:81"
                }
              ]
            },
            "functionSelector": "6ddd7969",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNonOnLockReceivedCompliance",
            "nameLocation": "15225:31:81",
            "parameters": {
              "id": 46410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15256:2:81"
            },
            "returnParameters": {
              "id": 46411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15266:0:81"
            },
            "scope": 46831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46753,
            "nodeType": "FunctionDefinition",
            "src": "17026:2387:81",
            "nodes": [],
            "body": {
              "id": 46752,
              "nodeType": "Block",
              "src": "17078:2335:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46584,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45481,
                            "src": "17110:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17102:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17102:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17102:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46579,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "17088:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17091:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "17088:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17088:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46587,
                  "nodeType": "ExpressionStatement",
                  "src": "17088:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 46597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17194:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 46595,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17170:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17174:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "17170:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17170:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46588,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45449,
                          "src": "17134:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17147:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "17134:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17159:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 46592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17164:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "17159:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "17134:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17134:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 46600,
                  "nodeType": "ExpressionStatement",
                  "src": "17134:72:81"
                },
                {
                  "assignments": [
                    null,
                    46602
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 46602,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "17231:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46752,
                      "src": "17218:19:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46601,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17218:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46611,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 46607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17277:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 46608,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45481,
                            "src": "17299:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46605,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17253:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17257:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "17253:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17253:58:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46603,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45413,
                        "src": "17241:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 46604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17248:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "17241:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17241:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17216:96:81"
                },
                {
                  "assignments": [
                    46613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46613,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "17330:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46752,
                      "src": "17322:14:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17322:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46616,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46602,
                        "src": "17350:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17359:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 46617,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17359:7:81",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 46619,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17358:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 46614,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17339:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "17343:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "17339:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17339:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17322:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46623,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46613,
                        "src": "17387:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17395:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 46625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17407:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 46622,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17378:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17378:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46627,
                  "nodeType": "ExpressionStatement",
                  "src": "17378:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46635,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45437,
                        "src": "17530:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17550:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46637,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17550:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46636,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "17545:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17545:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "17559:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "17545:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46631,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45413,
                                "src": "17513:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17505:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46629,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17505:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17505:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46628,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "17495:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17495:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17522:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45375,
                      "src": "17495:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17495:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46642,
                  "nodeType": "ExpressionStatement",
                  "src": "17495:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17621:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17613:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46647,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17613:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17613:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17633:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17625:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46651,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17625:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17625:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46655,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17612:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17647:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46644,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45437,
                            "src": "17583:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46643,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45395,
                          "src": "17573:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17573:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45395",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17598:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45359,
                      "src": "17573:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17573:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46658,
                  "nodeType": "ExpressionStatement",
                  "src": "17573:84:81"
                },
                {
                  "expression": {
                    "id": 46666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46659,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46613,
                      "src": "17667:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46664,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45481,
                          "src": "17707:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46661,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45416,
                              "src": "17686:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46660,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45395,
                            "src": "17676:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45395_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17676:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45395",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17697:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45366,
                        "src": "17676:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17676:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17667:52:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46667,
                  "nodeType": "ExpressionStatement",
                  "src": "17667:52:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17742:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "id": 46672,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46613,
                        "src": "17763:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46668,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "17729:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17738:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "17729:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17729:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46674,
                  "nodeType": "ExpressionStatement",
                  "src": "17729:41:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46676,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46613,
                        "src": "17789:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17797:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17808:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46675,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "17780:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17780:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46680,
                  "nodeType": "ExpressionStatement",
                  "src": "17780:68:81"
                },
                {
                  "assignments": [
                    46682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46682,
                      "mutability": "mutable",
                      "name": "lockKek",
                      "nameLocation": "17899:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46752,
                      "src": "17891:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46681,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17891:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46695,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 46685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17940:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 46692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 46690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 46688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 46686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17952:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 46687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17955:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "17952:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 46689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17958:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "17952:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 46691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17961:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "17952:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 46693,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17951:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 46683,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45474,
                        "src": "17909:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17921:18:81",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41829,
                      "src": "17909:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) external returns (bytes32)"
                      }
                    },
                    "id": 46694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17909:57:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17891:75:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17989:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46696,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "17976:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17985:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "17976:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17976:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46701,
                  "nodeType": "ExpressionStatement",
                  "src": "17976:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46705,
                        "name": "lockKek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46682,
                        "src": "18029:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46702,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "18009:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18018:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "18009:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18009:28:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46707,
                  "nodeType": "ExpressionStatement",
                  "src": "18009:28:81"
                },
                {
                  "documentation": "TODO TODO TODO\n @dev This is reverting, because it calls the actual convex vault implementation at 0x03fb8543E933624b45abdd31987548c0D9892F07",
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18796:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46708,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "18791:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18791:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46711,
                  "nodeType": "ExpressionStatement",
                  "src": "18791:12:81"
                },
                {
                  "assignments": [
                    46713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46713,
                      "mutability": "mutable",
                      "name": "destKek",
                      "nameLocation": "18822:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46752,
                      "src": "18814:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46712,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18814:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46714,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18814:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5245434845434b20434f4d504c49414e54205641554c54204f574e455220434f4445204c454e475448",
                        "id": 46718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19059:43:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a5cbc8c05cc7dc5ee83d813b30384c0383bea85593af8c2eaa9d0b319227348",
                          "typeString": "literal_string \"RECHECK COMPLIANT VAULT OWNER CODE LENGTH\""
                        },
                        "value": "RECHECK COMPLIANT VAULT OWNER CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "components": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 46719,
                                    "name": "compliantVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45500,
                                    "src": "19105:14:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                      "typeString": "contract StakingProxyConvex"
                                    }
                                  },
                                  "id": 46720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "19120:5:81",
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40929,
                                  "src": "19105:20:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 46721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19105:22:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 46722,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19104:24:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 46723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19129:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "19104:29:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 46724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19134:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "19104:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8a5cbc8c05cc7dc5ee83d813b30384c0383bea85593af8c2eaa9d0b319227348",
                          "typeString": "literal_string \"RECHECK COMPLIANT VAULT OWNER CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46715,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19046:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19055:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "19046:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19046:95:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46726,
                  "nodeType": "ExpressionStatement",
                  "src": "19046:95:81"
                },
                {
                  "documentation": "Test transfering to a compliant vault owner /////",
                  "expression": {
                    "id": 46739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 46727,
                          "name": "destKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46713,
                          "src": "19216:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46728,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19213:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46733,
                              "name": "compliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45500,
                              "src": "19262:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19254:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46731,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19254:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19254:23:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46735,
                          "name": "lockKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46682,
                          "src": "19279:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19288:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "",
                          "id": 46737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19298:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 46729,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45474,
                          "src": "19227:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19239:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "19227:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19227:74:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "19213:88:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46740,
                  "nodeType": "ExpressionStatement",
                  "src": "19213:88:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46741,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "19312:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19315:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "19312:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19312:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46745,
                  "nodeType": "ExpressionStatement",
                  "src": "19312:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d20636f6d706c69616e74207661756c7420504153534553206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 46749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19350:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        },
                        "value": "PASS = compliant vault PASSES on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 46746,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19337:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19346:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "19337:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19337:69:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46751,
                  "nodeType": "ExpressionStatement",
                  "src": "19337:69:81"
                }
              ]
            },
            "functionSelector": "f6823097",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMeetsOnLockReceivedCompliance",
            "nameLocation": "17035:33:81",
            "parameters": {
              "id": 46577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17068:2:81"
            },
            "returnParameters": {
              "id": 46578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17078:0:81"
            },
            "scope": 46831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46830,
            "nodeType": "FunctionDefinition",
            "src": "19419:606:81",
            "nodes": [],
            "body": {
              "id": 46829,
              "nodeType": "Block",
              "src": "19457:568:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6d706c69616e745661756c742026204f776e6572",
                        "id": 46759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19480:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc2e63185f31a023495c360102c39e86313888eee4d12296b24a90e1742a94c8",
                          "typeString": "literal_string \"CompliantVault & Owner\""
                        },
                        "value": "CompliantVault & Owner"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46762,
                            "name": "compliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45500,
                            "src": "19514:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19506:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19506:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19506:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46766,
                                "name": "compliantVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45500,
                                "src": "19539:14:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              },
                              "id": 46767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19554:5:81",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40929,
                              "src": "19539:20:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 46768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19539:22:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19531:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19531:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19531:31:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc2e63185f31a023495c360102c39e86313888eee4d12296b24a90e1742a94c8",
                          "typeString": "literal_string \"CompliantVault & Owner\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46756,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19467:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19476:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18484,
                      "src": "19467:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address) view"
                      }
                    },
                    "id": 46770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19467:96:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46771,
                  "nodeType": "ExpressionStatement",
                  "src": "19467:96:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6d706c69616e745661756c744f776e6572",
                        "id": 46775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19586:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8526b10b3018d0cab539a23f0030c086ad8b7c91376e38abb2b0367c8939a044",
                          "typeString": "literal_string \"CompliantVaultOwner\""
                        },
                        "value": "CompliantVaultOwner"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46778,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45406,
                            "src": "19617:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19609:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46776,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19609:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19609:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8526b10b3018d0cab539a23f0030c086ad8b7c91376e38abb2b0367c8939a044",
                          "typeString": "literal_string \"CompliantVaultOwner\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46772,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19573:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19582:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "19573:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19573:56:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46781,
                  "nodeType": "ExpressionStatement",
                  "src": "19573:56:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e436f6d706c69616e745661756c742026204f776e6572",
                        "id": 46785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19652:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4b85dfa12acff86b4dff5957fe9d6ed9fc31fb5a52293f0765cd29d38d573b8",
                          "typeString": "literal_string \"NonCompliantVault & Owner\""
                        },
                        "value": "NonCompliantVault & Owner"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46788,
                            "name": "nonCompliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "19689:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19681:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46786,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19681:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19681:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46792,
                                "name": "nonCompliantVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45497,
                                "src": "19717:17:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              },
                              "id": 46793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19735:5:81",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40929,
                              "src": "19717:23:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 46794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19717:25:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19709:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19709:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19709:34:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e4b85dfa12acff86b4dff5957fe9d6ed9fc31fb5a52293f0765cd29d38d573b8",
                          "typeString": "literal_string \"NonCompliantVault & Owner\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46782,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19639:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19648:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18484,
                      "src": "19639:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address) view"
                      }
                    },
                    "id": 46796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19639:105:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46797,
                  "nodeType": "ExpressionStatement",
                  "src": "19639:105:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e436f6d706c69616e745661756c744f776e6572",
                        "id": 46801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19767:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22d94ad7918758a8de9ca43b18b580a4de0c49d2c9a95418eda56315d975a81c",
                          "typeString": "literal_string \"NonCompliantVaultOwner\""
                        },
                        "value": "NonCompliantVaultOwner"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 46802,
                            "name": "nonCompliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "19793:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 46803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19811:5:81",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40929,
                          "src": "19793:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 46804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19793:25:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_22d94ad7918758a8de9ca43b18b580a4de0c49d2c9a95418eda56315d975a81c",
                          "typeString": "literal_string \"NonCompliantVaultOwner\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46798,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "19754:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19763:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "19754:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19754:65:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46806,
                  "nodeType": "ExpressionStatement",
                  "src": "19754:65:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46810,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45406,
                            "src": "19846:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$46871",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19838:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19838:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19838:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 46812,
                            "name": "compliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45500,
                            "src": "19859:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 46813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19874:5:81",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40929,
                          "src": "19859:20:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 46814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19859:22:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "7661756c74206f776e65722073686f756c64206265207661756c74206f776e6572",
                        "id": 46815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19883:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6792fe8d4429eccec0ddd02e7bb253f6bb1887f3bef56cb5f7398fab0b60b46a",
                          "typeString": "literal_string \"vault owner should be vault owner\""
                        },
                        "value": "vault owner should be vault owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6792fe8d4429eccec0ddd02e7bb253f6bb1887f3bef56cb5f7398fab0b60b46a",
                          "typeString": "literal_string \"vault owner should be vault owner\""
                        }
                      ],
                      "id": 46807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "19829:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 46816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19829:90:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46817,
                  "nodeType": "ExpressionStatement",
                  "src": "19829:90:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46821,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19946:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46831",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 46820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19938:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19938:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19938:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 46823,
                            "name": "nonCompliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45497,
                            "src": "19953:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 46824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19971:5:81",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40929,
                          "src": "19953:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 46825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19953:25:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "7661756c74206f776e65722073686f756c64206265207468697320636f6e7472616374",
                        "id": 46826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19980:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a555ff13c97f93ffaaedc1d3d44418d29ea972cfd60fef06d0fbe26e79e22efe",
                          "typeString": "literal_string \"vault owner should be this contract\""
                        },
                        "value": "vault owner should be this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a555ff13c97f93ffaaedc1d3d44418d29ea972cfd60fef06d0fbe26e79e22efe",
                          "typeString": "literal_string \"vault owner should be this contract\""
                        }
                      ],
                      "id": 46818,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "19929:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 46827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19929:89:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46828,
                  "nodeType": "ExpressionStatement",
                  "src": "19929:89:81"
                }
              ]
            },
            "functionSelector": "14ac57f9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVaultPermanance",
            "nameLocation": "19428:19:81",
            "parameters": {
              "id": 46754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19447:2:81"
            },
            "returnParameters": {
              "id": 46755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19457:0:81"
            },
            "scope": 46831,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45396,
              "name": "Test",
              "nameLocations": [
                "1140:4:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "1140:4:81"
            },
            "id": 45397,
            "nodeType": "InheritanceSpecifier",
            "src": "1140:4:81"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          42648,
          44766,
          46871
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46831,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "1110:26:81",
        "scope": 46832,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 81
}