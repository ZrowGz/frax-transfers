{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDepositAndSendToExsitingVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523462000029575b62000015620000a8565b60405162010981620003c682396201098190f35b62000032600080fd5b6200000b565b906001600160a01b03905b9181191691161790565b620000639062000066906001600160a01b031682565b90565b6001600160a01b031690565b62000063906200004d565b620000639062000072565b906200009c62000063620000a4926200007d565b825462000038565b9055565b620000b262000366565b620000d3735e8422345238f34275888049021821e8e08caa1f601662000088565b620000f473f43211935c781d5ca1a41d2041f397b8a7366c7a601762000088565b6200011573c07e540dbfeccf7431ea2478eb28a03918c1c30e601862000088565b62000136734659d5ff63a1e1edd6d5dd9cc315e063c95947d0601962000088565b620001616200015973a537d64881b84faffb9ae43c951eebf368b71cda6200007d565b601a62000088565b6200018273a1f8a6807c402e4a15ef4eba36528a3fed24e577601b62000088565b620001a3733465b8211278505ae9c6b5ba08ecd9af951a6896601c62000088565b620001c473bafa44efe7901e04e39dad13167d089c559c1138601d62000088565b620001e573f403c135812408bfbe8713b5a23a04b3d48aae31601e62000088565b6200020673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee601f62000088565b6200022773569f5b842b5006ec17be02b8b94510ba8e79fbca602062000088565b620002487341a5881c17185383e19df6fa4ec158a6f4851a69602162000088565b620002736200026b736f82cd44e8a757c0baa7e841f4be7506b529ce416200007d565b602262000088565b6200029473712cabae569b54222bfb8e02a83ad98cc6d2fb30602362000088565b620002bf620002b7737e39facac567c8b48b0ea88e7a5021391eb848d06200007d565b602462000088565b620002e073af0fdd39e5d92499b0ed9f68693da99c0ec1e92e602562000088565b6200030173853d955acef822db058eb8505911ed77f175b99e602762000088565b62000322733432b6a60d23ca0dfca7761b7ab56459d9c964d0602862000088565b62000343734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b602962000088565b6200036473278dc748eda1d8efef1adfb518542612b49fcd34602a62000088565b565b6200036462000364620003646200036462000364620003646200036462000364620003b7565b9060ff9062000043565b151590565b90620003af62000063620000a49262000396565b82546200038c565b62000364600160006200039b56fe608060405260043610156200001a575b62000018600080fd5b005b60003560e01c806309dacc0414620002b45780630a9254e414620002a95780630d199eaa146200029e5780631895c4a714620002935780632cdacb50146200028857806331f4f95c146200027d5780633fb847b3146200027257806355c287521462000267578063663eeb3d146200025c57806366843cba14620002515780636fa8936414620002465780637495ce11146200023b5780638c1eda2b14620002305780638c7c9e0c14620002255780638e8f4a9d146200021a57806394112dba146200020f5780639bb2eb2b14620002045780639f5f052014620001f9578063a45b686a14620001ee578063a8848cda14620001e3578063ba414fa614620001d8578063bfe1092814620001cd578063c09cec7714620001c2578063c291904014620001b7578063c7b1927114620001ac578063d558358d14620001a1578063ddf42c0d1462000196578063fa7626d4146200018b5763fb47e3a2036200000f576200018562000ab5565b6200000f565b506200018562000a75565b506200018562000a19565b5062000185620009d9565b50620001856200099d565b50620001856200096b565b50620001856200092b565b5062000185620008eb565b506200018562000899565b506200018562000867565b506200018562000827565b5062000185620007e7565b5062000185620007a7565b506200018562000767565b506200018562000727565b5062000185620006e7565b5062000185620006a7565b506200018562000667565b50620001856200061a565b506200018562000581565b506200018562000541565b506200018562000501565b5062000185620004c1565b506200018562000481565b506200018562000441565b506200018562000401565b5062000185620003c1565b506200018562000380565b50620001856200033d565b600080fd5b6000910312620002d057565b620002d9600080fd5b565b620002fe916008021c5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b90620002fe9154620002db565b620002fe6000602862000301565b6200032790620002e5565b9052565b602081019291620002d991906200031c565b503462000371575b62000352366004620002c4565b6200036d620003606200030e565b604051918291826200032b565b0390f35b6200037a600080fd5b62000345565b5034620003a4575b62000395366004620002c4565b6200039f62001586565b604051005b620003ad600080fd5b62000388565b620002fe6000601d62000301565b5034620003e4575b620003d6366004620002c4565b6200036d62000360620003b3565b620003ed600080fd5b620003c9565b620002fe6000601e62000301565b503462000424575b62000416366004620002c4565b6200036d62000360620003f3565b6200042d600080fd5b62000409565b620002fe6000602062000301565b503462000464575b62000456366004620002c4565b6200036d6200036062000433565b6200046d600080fd5b62000449565b620002fe6000601962000301565b5034620004a4575b62000496366004620002c4565b6200036d6200036062000473565b620004ad600080fd5b62000489565b620002fe6000601762000301565b5034620004e4575b620004d6366004620002c4565b6200036d62000360620004b3565b620004ed600080fd5b620004c9565b620002fe6000602162000301565b503462000524575b62000516366004620002c4565b6200036d62000360620004f3565b6200052d600080fd5b62000509565b620002fe6000601862000301565b503462000564575b62000556366004620002c4565b6200036d6200036062000533565b6200056d600080fd5b62000549565b620002fe6000601c62000301565b5034620005a4575b62000596366004620002c4565b6200036d6200036062000573565b620005ad600080fd5b62000589565b620002fe6000601a62000301565b620002e5620002fe620002fe9273ffffffffffffffffffffffffffffffffffffffff1690565b620002fe90620005c1565b620002fe90620005e7565b6200032790620005f2565b602081019291620002d99190620005fd565b50346200064a575b6200062f366004620002c4565b6200036d6200063d620005b3565b6040519182918262000608565b62000653600080fd5b62000622565b620002fe6000601b62000301565b50346200068a575b6200067c366004620002c4565b6200036d6200036062000659565b62000693600080fd5b6200066f565b620002fe6000601262000301565b5034620006ca575b620006bc366004620002c4565b6200036d6200063d62000699565b620006d3600080fd5b620006af565b620002fe6000601f62000301565b50346200070a575b620006fc366004620002c4565b6200036d62000360620006d9565b62000713600080fd5b620006ef565b620002fe6000601362000301565b50346200074a575b6200073c366004620002c4565b6200036d6200063d62000719565b62000753600080fd5b6200072f565b620002fe6000602962000301565b50346200078a575b6200077c366004620002c4565b6200036d6200036062000759565b62000793600080fd5b6200076f565b620002fe6000601662000301565b5034620007ca575b620007bc366004620002c4565b6200036d6200036062000799565b620007d3600080fd5b620007af565b620002fe6000602662000301565b50346200080a575b620007fc366004620002c4565b6200036d6200063d620007d9565b62000813600080fd5b620007ef565b620002fe6000602762000301565b50346200084a575b6200083c366004620002c4565b6200036d6200036062000819565b62000853600080fd5b6200082f565b620002fe6000602462000301565b50346200088a575b6200087c366004620002c4565b6200036d6200063d62000859565b62000893600080fd5b6200086f565b5034620008ce575b620008ae366004620002c4565b6200036d620008bc62000dd8565b60405191829182901515815260200190565b620008d7600080fd5b620008a1565b620002fe6000602a62000301565b50346200090e575b62000900366004620002c4565b6200036d62000360620008dd565b62000917600080fd5b620008f3565b620002fe6000601562000301565b50346200094e575b62000940366004620002c4565b6200036d620003606200091d565b62000957600080fd5b62000933565b620002fe6000602262000301565b50346200098e575b62000980366004620002c4565b6200036d6200063d6200095d565b62000997600080fd5b62000973565b5034620009bc575b620009b2366004620002c4565b6200039f620029bd565b620009c5600080fd5b620009a5565b620002fe6000602362000301565b5034620009fc575b620009ee366004620002c4565b6200036d62000360620009cb565b62000a05600080fd5b620009e1565b620002fe6000602562000301565b503462000a3c575b62000a2e366004620002c4565b6200036d6200036062000a0b565b62000a45600080fd5b62000a21565b620002fe916008021c5b60ff1690565b90620002fe915462000a4b565b620002fe60008062000a5b565b503462000a98575b62000a8a366004620002c4565b6200036d620008bc62000a68565b62000aa1600080fd5b62000a7d565b620002fe6000601462000301565b503462000ad8575b62000aca366004620002c4565b6200036d6200036062000aa7565b62000ae1600080fd5b62000abd565b620002fe9060081c62000a55565b620002fe905462000ae7565b620002fe620002fe620002fe9290565b620002fe9062000b01565b620002e5620002fe620002fe9290565b62000b5862000b52620002fe9273ffffffffffffffffffffffffffffffffffffffff1690565b60601b90565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690565b620002fe9060601c620005c1565b620002fe9062000b7d565b620002fe62000bd962000bd362000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b62000b1c565b62000b2c565b62000b8b565b916020620002d992949362000bfd604082019660008301906200031c565b0152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111762000c9a57604052565b62000ca462000c29565b604052565b60005b83811062000cbd5750506000910152565b818101518382015260200162000cac565b62000cf362000ce99260209262000ce3815190565b94859290565b9384910162000ca9565b0190565b019062000cce565b90620002d962000d0e60405190565b928362000c59565b62000cf360209167ffffffffffffffff811162000d5557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b62000c0162000c29565b9062000d7562000d6f8362000d16565b62000cff565b918252565b3d1562000d975762000d8c3d62000d5f565b903d6000602084013e565b606090565b8015155b03620002bf57565b90505190620002d98262000d9c565b90620002fe916020818303121562000da85762000dd2600080fd5b62000da8565b62000de4600062000af5565b1562000df657620002fe600062000af5565b60008062000e0362000f09565b62000e0c575090565b80915062000e1962000b96565b7f667f9d70000000000000000000000000000000000000000000000000000000008262000ed262000edf7f6661696c6564000000000000000000000000000000000000000000000000000062000e9262000e7260405190565b809262000e8560208301918a8362000bdf565b9081038252038262000c59565b6040519283916020830196878062000cf7600492620002fe95947fffffffff00000000000000000000000000000000000000000000000000000000169052565b8581038252038262000c59565b51925af150620002fe62000ef262000d7a565b602062000efd825190565b81830101910162000db7565b600062000f168162000b01565b5062000f4062000f3c737109709ecfa91a80626ff3989d68f67f5b1dd12d3b9262000b01565b9190565b1190565b620002fe62000f7762000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b620005e7565b620002fe62000f8b62000f44565b620005f2565b62000da081620002e5565b90505190620002d98262000f91565b90620002fe916020818303121562000f9c5762000fc6600080fd5b62000f9c565b620003279062000b01565b602081019291620002d9919062000fcc565b506040513d6000823e3d90fd5b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b906200102c620002fe6200103492620005f2565b825462000ff6565b9055565b620002fe90620002e5565b620002fe905462001038565b916020620002d99294936200106d604082019660008301906200031c565b019062000fcc565b620002fe916040820191906200108d9082906200031c565b6020818303910152600581527f416c696365000000000000000000000000000000000000000000000000000000602082015260400190565b620002fe91604082019190620010dd9082906200031c565b6020818303910152600381527f426f620000000000000000000000000000000000000000000000000000000000602082015260400190565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6200116860019162001155815490565b8410156200117157600052602060002090565b91020190600090565b6200117b62001115565b600052602060002090565b919060086200100e910291620011af73ffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190620011c9620002fe6200103493620005f2565b90835462001186565b90620011fe620002d9928054906801000000000000000082101562001205575b60018201815562001145565b90620011b4565b6200120f62000c29565b620011f2565b919060086200100e910291620011af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b91906200125f620002fe620010349362000b01565b90835462001215565b9062001293620002d99280549068010000000000000000821015620012055760018201815562001145565b906200124a565b9062000cf3816020936200031c565b90620012d1620012c5620012bb845490565b8084529260200190565b92600052602060002090565b9060005b818110620012e35750505090565b9091926200130962001302600192620012fc8762001043565b6200129a565b9460010190565b929101620012d5565b620002fe9081565b620002fe905462001312565b9062001338620012c5620012bb845490565b9060005b8181106200134a5750505090565b9091926200136b6200130260019262001363876200131a565b815260200190565b9291016200133c565b979694620013d760c095620013c8620013f596620013b9620013e696620002d99c988f620013ab60e082019360008301906200031c565b6020818403910152620012a9565b8d810360408f015290620012a9565b908b820360608d015262001326565b9089820360808b0152620012a9565b9087820360a0890152620012a9565b9401906200031c565b90813b60006200140e8262000d5f565b9360208501903c565b6200143c62000c0160209362000cf39362001430815190565b80835293849260200190565b9586910162000ca9565b91620002fe9262001460604082019360008301906200031c565b602081840391015262001417565b620014ab620002d994620014a060609498979562001495608086019a60008701906200031c565b60208501906200031c565b60408301906200031c565b01906200031c565b62000a55620002fe620002fe9290565b6200032790620014b3565b602081019291620002d99190620014c3565b15620014e857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6372656174655661756c74206661696c656400000000000000000000000000006044820152606490fd5b62001553600762000d5f565b7f4d795661756c7400000000000000000000000000000000000000000000000000602082015290565b620002fe62001547565b620017ed60006200159a62000f8b62000f7d565b6200199163ffa1864962001612620015f360207fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef620015d860405190565b80938192620015e78860e01b90565b83526004830162000fd7565b0381885afa90811562001fd9575b869162001fb6575b50601462001018565b6200185f6200197d63c88a5e6d926200162c601462001043565b906200166a886b204fce5e3e2502611000000080948a3b1562001ef1575b6040515b93849283926200165e8c60e01b90565b8452600484016200104f565b0381838c5af1801562001fa6575b62001f85575b506200173863c657c718918980620016c58b6200169c601462001043565b813b1562001f76575b604051948580948193620016b98c60e01b90565b83526004830162001075565b03925af1801562001f66575b62001f45575b506020620015e77feeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef92620017196200170e60405190565b948593849360e01b90565b03818c5afa90811562001f35575b8a9162001f00575b50601562001018565b6200175b88836200174a601562001043565b8a3b1562001ef1576040516200164e565b0381838c5af1801562001ee1575b62001ec0575b50876200179962001781601562001043565b92893b1562001eb1575b620017a56200170e60405190565b835260048301620010c5565b0381838b5af1801562001ea1575b62001e80575b5085602c94886200165e620017cb8890565b92620017d730620005f2565b9c8d85620017e7828098620011d2565b620011d2565b62001922602d966200182c620018008990565b620018186200181161303962000b01565b8262001268565b6200182561607262000b01565b9062001268565b620018fd8582602f9962001854620018418c90565b6200184d602a62001043565b90620011d2565b62001882602b9e8f90565b620018766200186f602862001043565b82620011d2565b6200184d602962001043565b6200188e602362001043565b813b1562001e71575b836200165e89620018b786620018ac60405190565b958694859460e01b90565b038183865af1801562001e61575b62001e40575b50620018d8602562001043565b813b1562001e31575b83620018ec60405190565b8096819582946200165e8d60e01b90565b03925af1801562001e21575b62001e00575b508c3b1562001df1575b604051620018ac565b0381838c5af1801562001de1575b62001dc0575b50602e62001945601962001043565b926200195060405190565b9687968c617d77890189811067ffffffffffffffff82111762001db0575b617d7762008bd58b3962001374565b039084f0801562001da0575b601262001018565b63b4d6c78292620019ef83620019ac62000f8b601a62001043565b620019c6620019c062000f8b601262001043565b620013fe565b90853b1562001d91575b6040519384928392620019e38b60e01b90565b84526004840162001446565b038183875af1801562001d81575b62001d60575b5062001a1462001989601a62001043565b62001a6162001a2260405190565b8062001a4d614910820182811067ffffffffffffffff82111762001d50575b614910620042c5843990565b039085f0801562001d40575b601362001018565b8262001a7262000f8b601362001043565b9163f8c8765e9262001ac58362001a8e62000f8b601a62001043565b9562001ad162001a9f601962001043565b62001aab601c62001043565b90863b1562001d31575b604051998a988997889660e01b90565b8652600486016200146e565b03925af1801562001d21575b62001d00575b5062001b2a8262001af962000f8b602262001043565b62001b0d620019c062000f8b601362001043565b90843b1562001cf1575b6040519384928392620019e38a60e01b90565b038183865af1801562001ce1575b62001cc0575b5062001b4f62000f8b602462001043565b90620019e38362001b69620019c062000f8b601362001043565b95833b1562001cb1575b62001b8e62001b8160405190565b9788968795869460e01b90565b03925af1801562001ca1575b62001c75575b5062001c5162001c4962000f8b60008062001bbc602062001043565b62001c0362001c13602462001bd060405190565b9283916004602084017f9abbdf4b00000000000000000000000000000000000000000000000000000000815201620014ce565b6020820181038252038262000c59565b82602082019151925af162001c3262001c2b62000d7a565b91620014e0565b602062001c3d825190565b81830101910162000fab565b602662001018565b620002d962001c6562000f8b602662001043565b62001c6f6200157c565b62002009565b62001c929060005b62001c89818362000c59565b810190620002c4565b3862001ba0565b503d62001c7d565b62001cab62000fe9565b62001b9a565b62001cba600080fd5b62001b73565b62001cda90833d811162001c995762001c89818362000c59565b3862001b3e565b62001ceb62000fe9565b62001b38565b62001cfa600080fd5b62001b17565b62001d1a90833d811162001c995762001c89818362000c59565b3862001ae3565b62001d2b62000fe9565b62001add565b62001d3a600080fd5b62001ab5565b62001d4a62000fe9565b62001a59565b62001d5a62000c29565b62001a41565b62001d7a90843d811162001c995762001c89818362000c59565b3862001a03565b62001d8b62000fe9565b620019fd565b62001d9a600080fd5b620019d0565b62001daa62000fe9565b62001989565b62001dba62000c29565b6200196e565b62001dda90893d811162001c995762001c89818362000c59565b3862001936565b62001deb62000fe9565b62001930565b62001dfa600080fd5b62001919565b62001e1a90863d811162001c995762001c89818362000c59565b386200190f565b62001e2b62000fe9565b62001909565b62001e3a600080fd5b620018e1565b62001e5a90843d811162001c995762001c89818362000c59565b38620018cb565b62001e6b62000fe9565b620018c5565b62001e7a600080fd5b62001897565b62001e9a90883d811162001c995762001c89818362000c59565b38620017b9565b62001eab62000fe9565b620017b3565b62001eba600080fd5b6200178b565b62001eda90893d811162001c995762001c89818362000c59565b386200176f565b62001eeb62000fe9565b62001769565b62001efa600080fd5b6200164a565b62001f26915060203d811162001f2d575b62001f1d818362000c59565b81019062000fab565b386200172f565b503d62001f11565b62001f3f62000fe9565b62001727565b62001f5f908b3d811162001c995762001c89818362000c59565b38620016d7565b62001f7062000fe9565b620016d1565b62001f7f600080fd5b620016a5565b62001f9f90893d811162001c995762001c89818362000c59565b386200167e565b62001fb062000fe9565b62001678565b62001fd2915060203d811162001f2d5762001f1d818362000c59565b3862001609565b62001fe362000fe9565b62001601565b92916020620013f5620002d9936040870190878203600089015262001417565b9062002054620002d99262001c036200202160405190565b9384926004602085017f319af3330000000000000000000000000000000000000000000000000000000081520162001fe9565b6000809162002061815190565b906020016a636f6e736f6c652e6c6f675afa50565b620002fe61018062000cff565b6200208d62002076565b9060608252602080808080808080808080808d0160008152016000815201600081520160008152016000815201600081520160008152016000815201600081520160008152016000905250565b620002fe62002083565b620020f0601762000d5f565b7f696e76616c6964207374616b696e672061646472657373000000000000000000602082015290565b620002fe620020e4565b8062000da0565b90505190620002d98262002123565b90620002fe91602081830312156200212a5762002154600080fd5b6200212a565b62002166601a62000d5f565b7f696e76616c6964206d696e7420616d6f756e7420667278455448000000000000602082015290565b620002fe6200215a565b620021a5600e62000d5f565b7f6672784574682062616c616e6365000000000000000000000000000000000000602082015290565b620002fe62002199565b60209067ffffffffffffffff8111620021ef570290565b620021f962000c29565b0290565b62000d6f620002fe91620021d8565b6200221a62000f3c60029390565b6000915b8383106200222c5750505050565b62002248620022416001928451815260200190565b9260200190565b920191906200221e565b916040620002d99294936200106d606082019660008301906200220c565b6200227c601162000d5f565b7f6672784554484352562062616c616e6365000000000000000000000000000000602082015290565b620002fe62002270565b620022bb602562000d5f565b7f696e76616c6964206d696e696d756d206d696e7420616d6f756e74206672784560208201527f5448435256000000000000000000000000000000000000000000000000000000604082015290565b620002fe620022af565b62002320600f62000d5f565b7f7072652d6164642023206c6f636b730000000000000000000000000000000000602082015290565b620002fe62002314565b916020620002d99294936200106d6040820196600083019062000fcc565b6200237d600762000d5f565b7f6c6f636b4b656b00000000000000000000000000000000000000000000000000602082015290565b620002fe62002371565b620023bc601062000d5f565b7f706f73742d6164642023206c6f636b7300000000000000000000000000000000602082015290565b620002fe620023b0565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116200242d57565b620002d9620023ef565b62002443602262000d5f565b7f73656e6465722073686f756c642068617665206e6577204c6f636b656453746160208201527f6b65000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe62002437565b620024a8602b62000d5f565b7f5265636569766572206265666f726520726563656976696e67207472616e736660208201527f6572312023206c6f636b73000000000000000000000000000000000000000000604082015290565b620002fe6200249c565b9190620002fe906040848203126200252a575b6200252081856200212a565b936020016200212a565b62002533600080fd5b62002514565b62000bfd620002d9946200256760609498979562002560608086019a60008701906200031c565b6020850152565b604083019062000fcc565b6200257e602662000d5f565b7f53656e6465722061667465722073656e64696e67207472616e7366657231202360208201527f206c6f636b730000000000000000000000000000000000000000000000000000604082015290565b620002fe62002572565b620025e3602a62000d5f565b7f526563656976657220416674657220726563656976696e67207472616e73666560208201527f72312023206c6f636b7300000000000000000000000000000000000000000000604082015290565b620002fe620025d7565b62002648601f62000d5f565b7f73656e6465722073686f756c6420686176652073616d652023206c6f636b7300602082015290565b620002fe6200263c565b62002687602062000d5f565b7f72656365697665722073686f756c6420686176652031206d6f7265206c6f636b602082015290565b620002fe6200267b565b6200106d620002d9946200256760609498979562002560608086019a60008701906200031c565b620026ed602c62000d5f565b7f72656365697665722073686f756c64207374696c6c20686176652073616d652060208201527f6e756d626572206c6f636b730000000000000000000000000000000000000000604082015290565b620002fe620026e1565b62002752602a62000d5f565b7f73656e6465722073686f756c64207374696c6c20686176652073616d65206e7560208201527f6d626572206c6f636b7300000000000000000000000000000000000000000000604082015290565b620002fe62002746565b620027b7600b62000d5f565b7f426f7468206b656b496473000000000000000000000000000000000000000000602082015290565b620002fe620027ab565b620027f6601c62000d5f565b7f6661696c656420746f2073656e6420746f2073616d65206b656b496400000000602082015290565b620002fe620027ea565b62002835602662000d5f565b7f53656e6465722061667465722073656e64696e67207472616e7366657232202360208201527f206c6f636b730000000000000000000000000000000000000000000000000000604082015290565b620002fe62002829565b6200289a602162000d5f565b7f526563656976657220706f7374207472616e7366657220322c2023206c6f636b60208201527f7300000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe6200288e565b620028ff602162000d5f565b7f53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b60208201527f7300000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe620028f3565b62002964602362000d5f565b7f52656365697665722073686f756c6420686176652073616d65206e756d206c6f60208201527f636b730000000000000000000000000000000000000000000000000000000000604082015290565b620002fe62002958565b620034c86000620029cd620020da565b62002a3c62002a006020620029e762000f8b602262001043565b63d7b4be2490620029f760405190565b93849260e01b90565b825260049082905afa9081156200392c575b849162003909575b5062002a2b62000f8b601a62001043565b62002a3562002119565b9162003984565b620034b062002a4e62000f8b62000f7d565b916306447d568462002a7d62002a65602362001043565b92863b15620038fa575b62002a896200170e60405190565b8352600483016200032b565b038183885af18015620038ea575b620038c9575b5062002f8a62002df48562002d9962002d7d62002abb601d62001043565b838062002ad1683635c9adc5dea0000062000b01565b9262002adc60405190565b7f5bcb2fc600000000000000000000000000000000000000000000000000000000602082015262002b11816024810162001c03565b84602082019151925af15062002b2662000d7a565b50838062002b35601662001043565b62001c0362002b7f62002b49602362001043565b6040519283916004602084017f70a08231000000000000000000000000000000000000000000000000000000008152016200032b565b82602082019151925af15062002baf62002b9862000d7a565b888601819052805160209081830101910162002139565b9062002bbd60208901928352565b62002bdc62002bca835190565b8262002bd56200218f565b9162003e4f565b62002bf962002be9835190565b62002bf3620021ce565b62004279565b62002c0d62000f8b62000f8b601662001043565b602063095ea7b39162002c21601b62001043565b9062002c57897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9562002c6362001b8160405190565b84526004840162000bdf565b03925af18015620038b9575b62003886575b50602062002c8c62000f8b62000f8b601b62001043565b91630b4c7e4d9262002cbf62002ca36002620021fd565b9262002cb962002cb38b62000b01565b8b860152565b84840152565b62002cde6835ab028ac154b8000098899562002cea62001b8160405190565b84526004840162002252565b03925af1801562003876575b62003855575b5062002d6262002d49602062002d1b62000f8b62000f8b601762001043565b6370a082319062002a7d62002d31602362001043565b9262002d3c60405190565b9586948593849360e01b90565b03915afa90811562003845575b8c916200382557508252565b62002d7962002d6f825190565b62002bf3620022a5565b5190565b62002d888362000b01565b62002d926200230a565b9162003f5f565b602062002dab62000f8b601a62001043565b62002dbb62000f8b602262001043565b9062002dc660405190565b948592839182917fca6df29d0000000000000000000000000000000000000000000000000000000062002a7d565b03915afa91821562003815575b8792620037eb575b5062002e8f9062002e1c60408601938452565b62002e3362002e29845190565b62002bf362002349565b602062002e4562000f8b602262001043565b9163a41ce7e99262002e658b63018b82009562002e7162001b8160405190565b84526004840162002353565b03925af1908115620037db575b8891620037b8575b50610120850152565b62002ea362002e9d620023a6565b6200420f565b62002eba62002eb461012085015190565b620041af565b62002f3a62002f1d602062002ed462000f8b601a62001043565b62002ee462000f8b602262001043565b9062002eef60405190565b938492839182917fca6df29d0000000000000000000000000000000000000000000000000000000062002a7d565b03915afa908115620037a8575b889162003785575b506060850152565b62002f5462002f4a606085015190565b62002bf3620023e5565b62002f8062002f6d62002f68606086015190565b925190565b62002f79600162000b01565b906200241f565b62002bd562002492565b6200327e62002f9c6201518062000b01565b62002fa7816200414d565b62002fee62002fd1602062002fc162000f8b601a62001043565b62002ee462000f8b602462001043565b03915afa90811562003775575b889162003752575b5060c0850152565b6200300862002ffe60c085015190565b62002bf3620024f7565b620030b26200301c62000f8b602262001043565b6040678ac7230489e800006200303762000f8b602462001043565b926200304561012089015190565b8b620030518162000b01565b95620030946200306060405190565b978896879586947f3c62c44f0000000000000000000000000000000000000000000000000000000086526004860162002539565b03925af190811562003742575b88916200371f575b50610140850152565b620030e9620030cc602062002ed462000f8b601a62001043565b03915afa9081156200370f575b8891620036ec575b506080850152565b6200312062003103602062002fc162000f8b601a62001043565b03915afa908115620036dc575b8891620036b9575b5060e0850152565b6200313a62003130608085015190565b62002bf3620025cd565b620031546200314a60e085015190565b62002bf362002632565b6200317362003164608085015190565b606085015162002bd562002671565b6200319d6200318360e085015190565b6200319362002f6d60c087015190565b62002bd5620026b0565b843b15620036aa575b6040517ff48448140000000000000000000000000000000000000000000000000000000081528681600481838a5af180156200369a575b62003679575b50620031f462000f8b602262001043565b6040678ac7230489e800006200320f62000f8b602462001043565b926200321d61012088015190565b8a62010f2c95620032656200323160405190565b978896879586947f3c62c44f00000000000000000000000000000000000000000000000000000000865260048601620026ba565b03925af1801562003669575b62003647575b506200414d565b620032bd62003298602062002fc162000f8b601a62001043565b03915afa90811562003637575b869162003614575b5060e083015162002bd56200273c565b620032fc620032d7602062002ed462000f8b601a62001043565b03915afa90811562003604575b8691620035e1575b50608083015162002bd5620027a1565b620033cd6200331062000f8b602262001043565b6040678ac7230489e800006200332b62000f8b602462001043565b926200333961012087015190565b896200334761014089015190565b95620033566200306060405190565b03925af1908115620035d1575b86916200359c575b506200337a6101608401918252565b6200338862002e9d620027e0565b6200339962002eb461014085015190565b620033a662002eb4825190565b620033bc620033b761014085015190565b915190565b620033c66200281f565b9162003c94565b620034a660e0620034a062003436620033f1602062002ed462000f8b601a62001043565b03915afa9081156200358c575b899162003569575b506200341460a08701918252565b60206200342662000f8b601a62001043565b62002dbb62000f8b602462001043565b03915afa91821562003559575b899262003518575b506200349162002d7991620034636101008901948552565b6200347a62003470825190565b62002bf362002884565b62002d7962003487855190565b62002bf3620028e9565b608087015162002bd56200294e565b92015190565b62002bd5620029b3565b6390c5013b90803b1562003509575b604051620029f7565b8252818381600481015b03925af18015620034f9575b620034e65750565b620002d990600062001c89818362000c59565b6200350362000fe9565b620034de565b62003512600080fd5b620034bf565b62002d7991925062003548620034919160203d811162003551575b6200353f818362000c59565b81019062002139565b9291506200344b565b503d62003533565b6200356362000fe9565b62003443565b62003585915060203d811162003551576200353f818362000c59565b3862003406565b6200359662000fe9565b620033fe565b620035c2915060403d8111620035c9575b620035b9818362000c59565b81019062002501565b906200336b565b503d620035ad565b620035db62000fe9565b62003363565b620035fd915060203d811162003551576200353f818362000c59565b38620032ec565b6200360e62000fe9565b620032e4565b62003630915060203d811162003551576200353f818362000c59565b38620032ad565b6200364162000fe9565b620032a5565b620036629060403d8111620035c957620035b9818362000c59565b5062003277565b6200367362000fe9565b62003271565b6200369390873d811162001c995762001c89818362000c59565b38620031e3565b620036a462000fe9565b620031dd565b620036b3600080fd5b620031a6565b620036d5915060203d811162003551576200353f818362000c59565b3862003118565b620036e662000fe9565b62003110565b62003708915060203d811162003551576200353f818362000c59565b38620030e1565b6200371962000fe9565b620030d9565b6200373b915060403d8111620035c957620035b9818362000c59565b90620030a9565b6200374c62000fe9565b620030a1565b6200376e915060203d811162003551576200353f818362000c59565b3862002fe6565b6200377f62000fe9565b62002fde565b620037a1915060203d811162003551576200353f818362000c59565b3862002f32565b620037b262000fe9565b62002f2a565b620037d4915060203d811162003551576200353f818362000c59565b3862002e86565b620037e562000fe9565b62002e7e565b62002e8f9192506200380d9060203d811162003551576200353f818362000c59565b919062002e09565b6200381f62000fe9565b62002e01565b62003841915060203d811162003551576200353f818362000c59565b8252565b6200384f62000fe9565b62002d56565b620038709060203d811162003551576200353f818362000c59565b62002cfc565b6200388062000fe9565b62002cf6565b620038ab9060203d8111620038b1575b620038a2818362000c59565b81019062000db7565b62002c75565b503d62003896565b620038c362000fe9565b62002c6f565b620038e390853d811162001c995762001c89818362000c59565b3862002a9d565b620038f462000fe9565b62002a97565b62003903600080fd5b62002a6f565b62003925915060203d811162001f2d5762001f1d818362000c59565b3862002a1a565b6200393662000fe9565b62002a12565b60408082526005908201527f4572726f720000000000000000000000000000000000000000000000000000006060820152608060208201819052620002fe9291019062001417565b6200398f82620002e5565b6200399a82620002e5565b03620039a557505050565b620002d992620039e47f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b918291826200393c565b0390a162003a75565b6040808252600a908201527f202045787065637465640000000000000000000000000000000000000000000060608201529190620002d990602060808501620013f5565b6040808252600a908201527f2020202041637475616c0000000000000000000000000000000000000000000060608201529190620002d990602060808501620013f5565b9062003a8181620002e5565b62003a8c83620002e5565b0362003a96575050565b62003b5e9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003acb60405190565b60208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d0000000000000000000000000000000000000000000000000000006060820152608090a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f93849162003b5460405190565b91829182620039ed565b0390a16040519182918262003a31565b0390a1620002d962003bcf565b60409062000bfd620002d9949695939662003b9f606084019860008501906200031c565b6020830152565b9061ff009060081b6200100e565b9062003bc7620002fe6200103492151590565b825462003ba6565b62003bd962000f09565b62003bed575b620002d96001600062003bb4565b60008062003bfa62000b96565b7f70ca10bb000000000000000000000000000000000000000000000000000000008262000ed262003c7e62000e8562000e927f6661696c6564000000000000000000000000000000000000000000000000000062003c6362003c5d600162000b01565b62000b01565b9062003c6e60405190565b93849260208401928b8462003b7b565b51925af15062003c8d62000d7a565b5062003bdf565b81810362003ca157505050565b620002d99262003cd67f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a162003d6a565b6040808252600a908201527f202045787065637465640000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b940152565b6040808252600a908201527f2020202041637475616c0000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b9080820362003d77575050565b62003e3f9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003dac60405190565b60208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d0000000000000000000000000000000000000000000000000000006060820152608090a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9993849162003e3560405190565b9182918262003cdf565b0390a16040519182918262003d27565b81810362003e5c57505050565b620002d99262003e917f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a19080820362003ea1575050565b62003e3f9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003ed660405190565b60208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d0000000000000000000000000000000000000000000000000000000000006060820152608090a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a893849162003e3560405190565b8181111562003f6d57505050565b620002d99262003fa27f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a162004031565b60408082526009908201527f202056616c75652061000000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b60408082526009908201527f202056616c75652062000000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b818111156200403e575050565b620041069162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506200407360405190565b60208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e7460408201527f5d000000000000000000000000000000000000000000000000000000000000006060820152608090a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8938491620040fc60405190565b9182918262003fab565b0390a16040519182918262003fee565b620002fe62000f8b62000f7762000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b6000620034d2916200416262000f8b62004116565b62004192836200417863e5d6bf0294426200241f565b93833b15620041a0575b6040519687958694859360e01b90565b835260048301526024820190565b620041a9600080fd5b62004182565b62001c0362002054620002d992620041c660405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b6020808252620002fe9291019062001417565b62001c0362002054620002d9926200422660405190565b9283916004602084017f41304fac00000000000000000000000000000000000000000000000000000000815201620041fc565b9291602062003d22620002d9936040870190878203600089015262001417565b9062002054620002d99262001c036200429160405190565b9384926004602085017fb60e72cc000000000000000000000000000000000000000000000000000000008152016200425956fe60806040523462000027575b6200001562000036565b60405161487c62000094823961487c90f35b62000030600080fd5b6200000b565b6200004062000079565b565b6200005262000052620000529290565b90565b62000052600162000042565b906200005262000052620000759262000042565b9055565b6200008362000055565b6200009081600562000061565b5056fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80630687c4bd1461034c57806317b18c8914610343578063193ba6d11461033a5780632439242a146103315780632a554842146103285780633c62c44f1461031f5780633d18b912146103165780633e0dc34e1461030d5780634ab794a3146103045780634ac032be146102fb5780634e7adf2c146102f25780634f5aefcf146102e95780634fb07105146102e057806351e3fc17146102d75780635eb143ce146102ce578063641a6cd0146102c5578063646780df146102bc5780636a4874a1146102b357806372f702f3146102aa5780637d423446146102a15780638da5cb5b14610298578063923c1d611461028f5780639ce0ff9d146102865780639ec5a8941461027d578063a10d3b3314610274578063a22cb4651461026b578063a41ce7e914610262578063a4698feb14610259578063afcff50f14610250578063b3a408b814610247578063b61aa08c1461023e578063b85efd0614610235578063c42d8b951461022c578063cc64175114610223578063d2fbdc0d1461021a578063d6f1926214610211578063d73792a914610208578063d7b4be24146101ff578063d7c04a46146101f6578063e869565e146101ed5763f8c8765e0361000e576101e86111a7565b61000e565b506101e8611136565b506101e861110c565b506101e86110d6565b506101e86110a0565b506101e8611050565b506101e8610f59565b506101e8610f31565b506101e8610f03565b506101e8610edb565b506101e8610eb3565b506101e8610e4f565b506101e8610e13565b506101e8610dec565b506101e8610da4565b506101e8610d7c565b506101e8610d23565b506101e8610cbb565b506101e8610c73565b506101e8610c37565b506101e8610c0d565b506101e8610bc6565b506101e8610b9c565b506101e8610b54565b506101e8610b2a565b506101e8610af7565b506101e8610ab0565b506101e8610a51565b506101e86109f0565b506101e86107ef565b506101e861070e565b506101e86106e0565b506101e861064b565b506101e8610604565b506101e86105be565b506101e861057d565b506101e86104cc565b506101e86104a1565b506101e8610442565b506101e86103db565b506101e86103a6565b600080fd5b805b0361035557565b905035906103708261035a565b565b919061039690604084820312610399575b61038d8185610363565b93602001610363565b90565b6103a1600080fd5b610383565b50346103ca575b6103c16103bb366004610372565b90612cf2565b604051005b0390f35b6103d2600080fd5b6103ad565b9052565b5034610409575b6103c66103f96103f3366004610372565b90612b3a565b6040519182918290815260200190565b610411600080fd5b6103e2565b600091031261042157565b610370600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b5034610494575b610454366004610416565b6103c67359cfcd384746ec3035299d90782be065e466800b5b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b61049c600080fd5b610449565b50346104bf575b6103c66103f96104b9366004610372565b90612ab5565b6104c7600080fd5b6104a8565b50346104e6575b6104de366004610416565b6103c1611660565b6104ee600080fd5b6104d3565b73ffffffffffffffffffffffffffffffffffffffff811661035c565b90503590610370826104f3565b608081830312610559575b610531828261050f565b926103966105428460208501610363565b936105508160408601610363565b93606001610363565b610561600080fd5b610527565b9081526040810192916103709160200152565b0152565b50346105b1575b61059b61059236600461051c565b929190916133e2565b906103c66105a860405190565b92839283610566565b6105b9600080fd5b610584565b50346105d8575b6105d0366004610416565b6103c1613ca5565b6105e0600080fd5b6105c5565b6103966103966103969290565b61039660246105e5565b6103966105f2565b5034610621575b610616366004610416565b6103c66103f96105fc565b610629600080fd5b61060b565b90610396916020818303121561036357610646600080fd5b610363565b5034610665575b6103c161066036600461062e565b613124565b61066d600080fd5b610652565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600411156106ac57565b610370610672565b90610370826106a2565b610396906106b4565b6103d7906106be565b60208101929161037091906106c7565b5034610701575b6106f2366004610416565b604051806103c66002826106d0565b610709600080fd5b6106e7565b503461072b575b610720366004610416565b6103c66103f9611b03565b610733600080fd5b610715565b80151561035c565b9050359061037082610738565b909182601f8301121561078c575b602082359267ffffffffffffffff841161077f575b01926020830284011161042157565b610787600080fd5b610770565b610794600080fd5b61075b565b91906107d1906040848203126107e2575b6107b48185610740565b9360208101359067ffffffffffffffff82116107d5575b0161074d565b9091565b6107dd600080fd5b6107cb565b6107ea600080fd5b6107aa565b503461080a575b6103c1610804366004610799565b91614717565b610812600080fd5b6107f6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176108af57604052565b6108b761083f565b604052565b906103706108c960405190565b928361086f565b61090d60209167ffffffffffffffff811161091157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b61081761083f565b90826000939282370152565b9291906103709161093d610938836108d0565b6108bc565b948286526020860191838201111561091957610957600080fd5b610919565b906103969181601f82011215610978575b602081359101610925565b610980600080fd5b61096d565b6080818303126109e3575b61099a828261050f565b926103966109ab846020850161050f565b936109b98160408601610363565b9360608101359067ffffffffffffffff82116109d6575b0161095c565b6109de600080fd5b6109d0565b6109eb600080fd5b610990565b5034610a44575b6103c6610a11610a08366004610985565b92919091611ba2565b604051918291827fffffffff00000000000000000000000000000000000000000000000000000000909116815260200190565b610a4c600080fd5b6109f7565b5034610a6b575b6103c1610a6636600461062e565b612ea6565b610a73600080fd5b610a58565b610396916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b906103969154610a78565b61039660006007610a99565b5034610acd575b610ac2366004610416565b6103c661046d610aa4565b610ad5600080fd5b610ab7565b90610396916020818303121561050f57610af2600080fd5b61050f565b5034610b11575b6103c1610b0c366004610ada565b6117f2565b610b19600080fd5b610afe565b61039660006006610a99565b5034610b47575b610b3c366004610416565b6103c661046d610b1e565b610b4f600080fd5b610b31565b5034610b83575b610b66366004610416565b6103c673d533a949740bb3306d119cc777fa900ba034cd5261046d565b610b8b600080fd5b610b5b565b61039660006002610a99565b5034610bb9575b610bae366004610416565b6103c661046d610b90565b610bc1600080fd5b610ba3565b5034610bf5575b610bd8366004610416565b6103c6733432b6a60d23ca0dfca7761b7ab56459d9c964d061046d565b610bfd600080fd5b610bcd565b610396600080610a99565b5034610c2a575b610c1f366004610416565b6103c661046d610c02565b610c32600080fd5b610c14565b5034610c66575b610c49366004610416565b6103c6734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b61046d565b610c6e600080fd5b610c3e565b5034610ca2575b610c85366004610416565b6103c673f403c135812408bfbe8713b5a23a04b3d48aae3161046d565b610caa600080fd5b610c7a565b61039660006003610a99565b5034610cd8575b610ccd366004610416565b6103c661046d610caf565b610ce0600080fd5b610cc2565b9091606082840312610d16575b610396610cff848461050f565b93610d0d8160208601610363565b93604001610363565b610d1e600080fd5b610cf2565b5034610d3e575b6103c1610d38366004610ce5565b916131cb565b610d46600080fd5b610d2a565b919061039690604084820312610d6f575b610d66818561050f565b93602001610740565b610d77600080fd5b610d5c565b5034610d97575b6103c1610d91366004610d4b565b9061328d565b610d9f600080fd5b610d83565b5034610dc2575b6103c66103f9610dbc366004610372565b90612546565b610dca600080fd5b610dab565b90610396916020818303121561074057610de7600080fd5b610740565b5034610e06575b6103c1610e01366004610dcf565b613cdb565b610e0e600080fd5b610df3565b5034610e42575b610e25366004610416565b6103c67341a5881c17185383e19df6fa4ec158a6f4851a6961046d565b610e4a600080fd5b610e1a565b5034610e7e575b610e61366004610416565b6103c673c9acb83ada68413a6aa57007bc720ee2e2b3c46d61046d565b610e86600080fd5b610e56565b919061039690604084820312610ea6575b61038d818561050f565b610eae600080fd5b610e9c565b5034610ece575b6103c1610ec8366004610e8b565b90613217565b610ed6600080fd5b610eba565b5034610ef6575b6103c1610ef0366004610372565b90612c1d565b610efe600080fd5b610ee2565b5034610f24575b6103c6610a11610f1b366004610985565b92919091611e11565b610f2c600080fd5b610f0a565b5034610f4c575b6103c1610f46366004610372565b90612d71565b610f54600080fd5b610f38565b5034610f74575b6103c1610f6e366004610372565b90612e12565b610f7c600080fd5b610f60565b90610fa1610f9a610f90845190565b8084529260200190565b9260200190565b9060005b818110610fb25750505090565b909192610fe5610fde600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460200190565b929101610fa5565b90610ffc610f9a610f90845190565b9060005b81811061100d5750505090565b909192611023610fde6001928651815260200190565b929101611000565b604080825261039693919261104291840190610f81565b916020818403910152610fed565b5034611080575b611062366004610416565b61106a613781565b906103c661107760405190565b9283928361102b565b611088600080fd5b611057565b6103966127106105e5565b61039661108d565b50346110bd575b6110b2366004610416565b6103c66103f9611098565b6110c5600080fd5b6110a7565b61039660006001610a99565b50346110f3575b6110e8366004610416565b6103c661046d6110ca565b6110fb600080fd5b6110dd565b61039660006004610a99565b5034611129575b61111e366004610416565b6103c661046d611100565b611131600080fd5b611113565b5034611150575b6103c161114b366004610ada565b61162f565b611158600080fd5b61113d565b60808183031261119a575b611172828261050f565b92610396611183846020850161050f565b93611191816040860161050f565b9360600161050f565b6111a2600080fd5b611168565b50346111c5575b6103c16111bc36600461115d565b92919091612084565b6111cd600080fd5b6111ae565b156111d957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f21617574685f61646d696e0000000000000000000000000000000000000000006044820152606490fd5b0390fd5b6103709061127e7359cfcd384746ec3035299d90782be065e466800b5b611278335b9173ffffffffffffffffffffffffffffffffffffffff1690565b146111d2565b611393565b61039690610429565b6103969054611283565b6104296103966103969273ffffffffffffffffffffffffffffffffffffffff1690565b61039690611296565b610396906112b9565b9050519061037082610738565b9061039691602081830312156112cb576112f0600080fd5b6112cb565b506040513d6000823e3d90fd5b905051906103708261035a565b90610396916020818303121561130257611327600080fd5b611302565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916103709160200152565b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b9061138861039661138f926112c2565b8254611356565b9055565b6113c560206113ad6113a86113a8600361128c565b6112c2565b6302fb0c5e906113bc60405190565b93849260e01b90565b825260049082905afa908115611622575b6000916115f4575b506113f8575b6113ef816003611378565b506103706118da565b61145a602061140d6113a86113a8600361128c565b6370a082319061143661141f306112c2565b9261142960405190565b9586948593849360e01b90565b835273ffffffffffffffffffffffffffffffffffffffff1660048301526024820190565b03915afa9081156115e7575b6000916115b9575b5060009061147b826105e5565b8111611522575b506114c4816114976113a86113a8600361128c565b63c00007b090611436836114aa8161128c565b93833b15611515575b6040515b9687958694859360e01b90565b03925af18015611508575b6114db575b50506113e4565b816114fa92903d10611501575b6114f2818361086f565b810190610416565b38806114d4565b503d6114e8565b6115106112f5565b6114cf565b61151d600080fd5b6114b3565b816115336113a86113a8600361128c565b63f3fef3a390611568836115468161128c565b93833b156115ac575b61157361155b60405190565b9788968795869460e01b90565b84526004840161132c565b03925af1801561159f575b156114825761159990823d8411611501576114f2818361086f565b38611482565b6115a76112f5565b61157e565b6115b4600080fd5b61154f565b6115da915060203d81116115e0575b6115d2818361086f565b81019061130f565b3861146e565b503d6115c8565b6115ef6112f5565b611466565b611615915060203d811161161b575b61160d818361086f565b8101906112d8565b386113de565b503d611603565b61162a6112f5565b6113d6565b6103709061123c565b6116557359cfcd384746ec3035299d90782be065e466800b611259565b610370610370611754565b610370611638565b6020809167ffffffffffffffff811161168057020190565b61168861083f565b020190565b9092919261169d61093882611668565b93818552602080860192028301928184116116db575b915b8383106116c25750505050565b602080916116d08486611302565b8152019201916116b5565b6116e3600080fd5b6116b3565b906103969181601f82011215611704575b60208151910161168d565b61170c600080fd5b6116f9565b9061039691602081830312611747575b80519067ffffffffffffffff821161173a575b016116e8565b611742600080fd5b611734565b61174f600080fd5b611721565b61178660006117696113a86113a8600161128c565b63c00007b0906114368361177c306112c2565b936114b760405190565b03925af19081156117bb575b60009161179d575050565b6117b8913d8091833e6117b0818361086f565b810190611711565b50565b6117c36112f5565b611792565b610370906117e97359cfcd384746ec3035299d90782be065e466800b611259565b610370906117fb565b610370906117c8565b61182660006118106113a86113a8600161128c565b63d7400d5690803b15611888575b6040516113bc565b825273ffffffffffffffffffffffffffffffffffffffff85166004830152602490829084905af1801561187b575b611865575b506117b8816004611378565b6118759060006114f2818361086f565b38611859565b6118836112f5565b611854565b611890600080fd5b61181e565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082039182116118d257565b610370611895565b6118ef60206113ad6113a86113a8600361128c565b825260049082905afa908115611af6575b600091611ad8575b5061190f57565b6119b86119226113a86113a8600161128c565b61194b63d9f96e8d9160203093611938856112c2565b9261194260405190565b94859260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8416600483015260249082905afa918215611acb575b600092611aab575b5081926020925061143661199a6113a86113a8600361128c565b916370a0823190506119ab60405190565b9687948593849360e01b90565b03915afa918215611a9e575b600092611a7e575b50818110611a54576000906119e76113a86113a8600361128c565b61156883611a036347e7ef24966119fd8361128c565b956118c5565b95833b15611a47575b611a1861155b60405190565b03925af18015611a3a575b611a2a5750565b6103709060006114f2818361086f565b611a426112f5565b611a23565b611a4f600080fd5b611a0c565b90600090611a686113a86113a8600361128c565b61156883611a0363f3fef3a3966119fd8361128c565b611a9791925060203d81116115e0576115d2818361086f565b90386119cc565b611aa66112f5565b6119c4565b60209250611ac590833d81116115e0576115d2818361086f565b91611980565b611ad36112f5565b611978565b611af0915060203d811161161b5761160d818361086f565b38611908565b611afe6112f5565b611900565b61039660046105e5565b90505190610370826104f3565b906103969160208183031215611b0d57611b32600080fd5b611b0d565b908152604081019291610370916020905b019073ffffffffffffffffffffffffffffffffffffffff169052565b611b7d611b776103969263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b50915050611bae600090565b50611c7661125e611bd36113a87341a5881c17185383e19df6fa4ec158a6f4851a6981565b611c0b63bfff576f91611be46105f2565b906020611bf36113a8896112c2565b638da5cb5b90611c0260405190565b95869260e01b90565b825260049082906000905af1928315611d1f575b600093611cf8575b50611c3d600060209495611c4861155b60405190565b845260048401611b37565b03925af1908115611ceb575b600091611cbd575b5073ffffffffffffffffffffffffffffffffffffffff1690565b03611c9257611c84306112c2565b50610396634fb07105611b64565b6040517fae59d4f4000000000000000000000000000000000000000000000000000000008152600490fd5b611cde915060203d8111611ce4575b611cd6818361086f565b810190611b1a565b38611c5c565b503d611ccc565b611cf36112f5565b611c54565b602093506000611d17611c3d92863d8111611ce457611cd6818361086f565b945050611c27565b611d276112f5565b611c1f565b7fffffffff00000000000000000000000000000000000000000000000000000000811661035c565b9050519061037082611d2c565b906103969160208183031215611d5457611d79600080fd5b611d54565b60005b838110611d915750506000910152565b8181015183820152602001611d81565b611dc261081760209361090d93611db6815190565b80835293849260200190565b95869101611d7e565b73ffffffffffffffffffffffffffffffffffffffff918216815291166020820152610396926080820192909190611e04905b6040830152565b6060818403910152611da1565b9092611e1c846112c2565b92611e26846112c2565b638da5cb5b91611e3560405190565b611e3f8460e01b90565b81526020816004816000875af1908115611f93575b600091611f75575b503b91600092611e72611e6e856105e5565b9190565b1115611f5657611eb86113a8611e976020611ed597611ee095829c506113bc60405190565b825260049082908a905af1908115611f49575b600091611f2c575b506112c2565b9463c42d8b9592611ec860405190565b998a988997889660e01b90565b865260048601611dcb565b03925af1908115611f1f575b600091611ef7575090565b610396915060203d8111611f18575b611f10818361086f565b810190611d61565b503d611f06565b611f276112f5565b611eec565b611f4391508a3d8111611ce457611cd6818361086f565b38611eb2565b611f516112f5565b611eaa565b5050505050505050611f67306112c2565b5061039663c42d8b95611b64565b611f8d915060203d8111611ce457611cd6818361086f565b38611e5c565b611f9b6112f5565b611e54565b6104296103966103969290565b61039690611fa0565b15611fbd57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f616c726561647920696e697400000000000000000000000000000000000000006044820152606490fd5b909160c082840312612077575b6120338383611b0d565b926120418160208501611b0d565b9261204f8260408301611b0d565b926103966120608460608501611b0d565b9361206e8160808601611b0d565b9360a0016112cb565b61207f600080fd5b612029565b61217090839294612095600061128c565b916120b16000936120ab61125e61042987611fad565b14611fb6565b6120bb8184611378565b506120c7866001611378565b6120d2846002611378565b6120dd816003611378565b5060c061212d6121016113a873f403c135812408bfbe8713b5a23a04b3d48aae3181565b83631526fe2760206121156113a88a6112c2565b63e529ee959061212460405190565b96879260e01b90565b825260049082905afa93841561234f575b600094612329575b50906121629161215560405190565b9788958694859360e01b90565b835260048301526024820190565b03925af190811561231c575b60009283926122e6575b50612192826006611378565b61219d836007611378565b6121a6846112c2565b6121af906112c2565b9563095ea7b3937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff976121e160405190565b8080946121ee8960e01b90565b82528b60048301916121ff9261132c565b0381865a94602095f1908882156020996122326113a861156899612258986113a8988f966122d9575b6122c357506112c2565b611568888b61224361155b60405190565b03925af180156122b6575b61229b57506112c2565b9261226561155b60405190565b03925af1801561228e575b6122775750565b6117b89060203d811161161b5761160d818361086f565b6122966112f5565b612270565b6122b190893d811161161b5761160d818361086f565b611eb2565b6122be6112f5565b61224e565b6122b190863d811161161b5761160d818361086f565b6122e16112f5565b612228565b90925061230a915060c03d8111612315575b612302818361086f565b81019061201c565b505050929092612186565b503d6122f8565b6123246112f5565b61217c565b612162929194506123479060203d81116115e0576115d2818361086f565b939091612146565b6123576112f5565b61213e565b1561236357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f21617574680000000000000000000000000000000000000000000000000000006044820152606490fd5b9061039692916123e46123d5600061128c565b6123de3361125e565b1461235c565b906123f792916123f2612612565b612400565b90610370612645565b929190600061240e816105e5565b8211612420575b5050506103706118da565b6020929450612485816124366113a8600661128c565b339061244f863092612447846112c2565b94859161267e565b612479836124636113a86113a8600261128c565b9250636e553f65833b15611515576040516114b7565b83528a60048401611b37565b03925af18015612539575b61251d575b506124c86124a96113a86113a8600161128c565b916317b18c896124d36124bb60405190565b9889968795869460e01b90565b845260048401610566565b03925af1918215612510575b6000926124f0575b50813880612415565b61250991925060203d81116115e0576115d2818361086f565b90386124e7565b6125186112f5565b6124df565b61253390823d8411611501576114f2818361086f565b38612495565b6125416112f5565b612490565b610396919060006123c2565b6103969081565b6103969054612552565b61039660026105e5565b1561257457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061136e565b9061260b61039661138f926105e5565b82546125d3565b61261c6005612559565b612630612627612563565b9182141561256d565b6117b88160056125fb565b61039660016105e5565b61263061263b565b73ffffffffffffffffffffffffffffffffffffffff9182168152911660208201526060810192916103709160400152565b906126cd906126be61037095600495612696866112c2565b506126a46323b872dd611b64565b936126ae60405190565b978895602087019081520161264d565b6020820181038252038361086f565b6127ab565b906126df610938836108d0565b918252565b6126ee60206126d2565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b6103966126e4565b1561272657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b906127b86127c7926112c2565b906127c1612717565b916127fb565b80516127d6611e6e60006105e5565b116127de5750565b8051610370916127f6916020908183010191016112d8565b61271f565b610396929161280a60006105e5565b916128bb565b1561281757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608490fd5b3d156128b6576128ab3d6126d2565b903d6000602084013e565b606090565b906000610396949381926128cd606090565b506128e46128da306112c2565b8390311015612810565b60208101905191855af16128f661289c565b91612962565b1561290357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919260609115612998575050815161297d611e6e60006105e5565b14612986575090565b61039690612993906129a5565b6128fc565b90939261037092506129c8565b3b6129b3611e6e60006105e5565b1190565b602080825261039692910190611da1565b91506129d2825190565b6129df611e6e60006105e5565b11156129ee5750805190602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815290819061123890600483016129b7565b906103969291612a376123d5600061128c565b906123f79291612a45612612565b9291906000612a53816105e5565b8211612a64575050506103706118da565b602092945061248581612a7a6113a8600761128c565b3390612a8b863092612447846112c2565b61247983612a9f6113a86113a8600261128c565b9250637acb7757833b15611515576040516114b7565b61039691906000612a24565b906103969291612ad46123d5600061128c565b906123f79291612ae2612612565b9291906000612af0816105e5565b8211612b01575050506103706118da565b6020929450612b2782612b176113a8600261128c565b33612b21306112c2565b9161267e565b6124c86124a96113a86113a8600161128c565b61039691906000612ac1565b9061037091612b586123d5600061128c565b90612b6a91612b65612612565b612b72565b610370612645565b90600091612b7f836105e5565b8211612b90575050506103706118da565b8290612ba383612b176113a8600261128c565b612bb36113a86113a8600161128c565b6124c88363b85efd06833b15612c10575b612bd061155b60405190565b03925af18015612c03575b612be6575b80612415565b81612bfc92903d10611501576114f2818361086f565b3880612be0565b612c0b6112f5565b612bdb565b612c18600080fd5b612bc4565b9061037091612b46565b9061037091612c396123d5600061128c565b90612b6a91612c46612612565b90600091612c53836105e5565b8211612c64575050506103706118da565b8290612ca882612c776113a8600661128c565b3390612c88873092612447846112c2565b612c9c836124636113a86113a8600261128c565b83528b60048401611b37565b03925af18015612ce5575b612cc9575b50612bb36113a86113a8600161128c565b612cdf90833d8511611501576114f2818361086f565b38612cb8565b612ced6112f5565b612cb3565b9061037091612c27565b9061037091612d0e6123d5600061128c565b90612b6a91612d1b612612565b90600091612d28836105e5565b8211612d39575050506103706118da565b8290612ca882612d4c6113a8600761128c565b3390612d5d873092612447846112c2565b612c9c83612a9f6113a86113a8600261128c565b9061037091612cfc565b9061037091612d8d6123d5600061128c565b90612b6a91612d9a612612565b600090612dad6113a86113a8600161128c565b6124c88363d2fbdc0d833b15612e05575b612dca61155b60405190565b03925af18015612df8575b612de257506103706118da565b612df29060006114f2818361086f565b386113ef565b612e006112f5565b612dd5565b612e0d600080fd5b612dbe565b9061037091612d7b565b61037090612e2d6123d5600061128c565b612b6a90612e39612612565b6020612e4b6113a86113a8600161128c565b9163e44b9fa592611c3d60003395612e6561155b60405190565b03925af18015612e99575b612e7d57506103706118da565b612e949060203d81116115e0576115d2818361086f565b6113ef565b612ea16112f5565b612e70565b61037090612e1c565b61037090612ec06123d5600061128c565b612b6a90612ecc612612565b61300b6000612ee16113a86113a8600161128c565b92602063e44b9fa5913095611c3d612ef8886112c2565b958695612f0761155b60405190565b03925af18015613117575b6130fb575b50612f286113a86113a8600261128c565b90612fab6000633969dfb493612f446113a86113a8600261128c565b906370a08231956020612f5660405190565b8094612f628a60e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8916600483015260249082905afa9283156130ee575b84936130c8575b508361216291833b15611515576040516114b7565b03925af180156130bb575b6130a5575b506020612fce6113a86113a8600661128c565b9163a9059cbb95611436612fe2600061128c565b95612ff36113a86113a8600661128c565b9250612ffe60405190565b9788948593849360e01b90565b03915afa928315613098575b600093613071575b5061156860006020949561303561155b60405190565b03925af18015613064575b61304d57506103706118da565b612e949060203d811161161b5761160d818361086f565b61306c6112f5565b613040565b60209350600061309061156892863d81116115e0576115d2818361086f565b94505061301f565b6130a06112f5565b613017565b6130b59060006114f2818361086f565b38612fbb565b6130c36112f5565b612fb6565b6121629193506130e6859160203d81116115e0576115d2818361086f565b939150612f96565b6130f66112f5565b612f8f565b6131129060203d81116115e0576115d2818361086f565b612f17565b61311f6112f5565b612f12565b61037090612eaf565b9061037092916131406123d5600061128c565b613179565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610370929091604091610579906020830152565b600091926131b3836131916113a86113a8600161128c565b92611a1863a10d3b3391853b156131be575b6040519889978896879560e01b90565b855260048501613145565b6131c6600080fd5b6131a3565b90610370929161312d565b90610370916131e86123d5600061128c565b6000906131fb6113a86113a8600161128c565b6115688363b61aa08c833b15611a4757611a1861155b60405190565b90610370916131d6565b90610370916132336123d5600061128c565b6000906132466113a86113a8600161128c565b6132628363a22cb465833b15611a4757611a1861155b60405190565b845273ffffffffffffffffffffffffffffffffffffffff166004840152151560248301526044820190565b9061037091613221565b906107d195949392916132ad6123d5600061128c565b906132c395949392916132be612612565b61333c565b9091610370612645565b9190610396906040848203126132f1575b6132e88185611302565b93602001611302565b6132f9600080fd5b6132de565b61057961037094611dfd606094989795613335608086019a600087019073ffffffffffffffffffffffffffffffffffffffff169052565b6020850152565b60409461338692600092989794959850506133916133696113a86113a8600161336481613cdb565b61128c565b94633c62c44f9261337960405190565b9a8b988997889660e01b90565b8652600486016132fe565b03925af180156133d5575b60009283916133aa57509190565b90506107d191925060403d81116133ce575b6133c6818361086f565b8101906132cd565b503d6133bc565b6133dd6112f5565b61339c565b6107d193929190600080613297565b9092919261340161093882611668565b938185526020808601920283019281841161343f575b915b8383106134265750505050565b602080916134348486611b0d565b815201920191613419565b613447600080fd5b613417565b906103969181601f82011215613468575b6020815191016133f1565b613470600080fd5b61345d565b90610396916020818303126134ab575b80519067ffffffffffffffff821161349e575b0161344c565b6134a6600080fd5b613498565b6134b3600080fd5b613485565b9190916040818403126134f4575b6134ee6134d360406108bc565b9360006134e08285611b0d565b908601526020809301611302565b90830152565b6134fc600080fd5b6134c6565b9092919261351161093882611668565b938185526040602086019202830192818411613551575b915b8383106135375750505050565b602060409161354684866134b8565b81520192019161352a565b613559600080fd5b613528565b906103969181601f8201121561357a575b602081519101613501565b613582600080fd5b61356f565b90610396916020818303126135bd575b80519067ffffffffffffffff82116135b0575b0161355e565b6135b8600080fd5b6135aa565b6135c5600080fd5b613597565b919082018092116118d257565b906126df61093883611668565b369037565b906103706135ff6135f9846135d7565b93611668565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001602084016135e4565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114613658570190565b61090d611895565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906020809161369d845190565b8110156136ab575b02010190565b6136b3613660565b6136a5565b909291926136c861093882611668565b938185526040602086019202830192818411613708575b915b8383106136ee5750505050565b60206040916136fd84866134b8565b8152019201916136e1565b613710600080fd5b6136df565b906103969181601f82011215613731575b6020815191016136b8565b613739600080fd5b613726565b9061039691602081830312613774575b80519067ffffffffffffffff8211613767575b01613715565b61376f600080fd5b613761565b61377c600080fd5b61374e565b6137a69060006137976113a86113a8600161128c565b6312edb24c9061194260405190565b825260049082905afa918215613c98575b600092613c71575b50613853906137d46113a86113a8600161128c565b3093906137f36000628cc2626137e9886112c2565b936113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa908115613c64575b600091613c4b575b50600061383b6113a86113a8600261128c565b63b277e8f09061384a60405190565b97889260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa948515613c3e575b600095613c1b575b506138ad602061389e6113a86113a8600361128c565b63857cb94a906113bc60405190565b825260049082905afa908115613c0e575b600091613bf0575b506138ec6138e76138de836138d9885190565b6135ca565b88515b906135ca565b6135e9565b9081966139086138e7613901846138d98a5190565b83516138e1565b968792600092613917846105e5565b9a5b6139246103968b5190565b8c1015613a1c578b6139de8c8f61398e6139c18f8f8f908f9561143661199a6113a86113a86139748e6139bb6139b7826139db9f9b816139b18f9e60209f61398e61397485836139969450613690565b5173ffffffffffffffffffffffffffffffffffffffff1690565b938492613690565b9073ffffffffffffffffffffffffffffffffffffffff169052565b50613690565b5190565b99613690565b03915afa918215613a0f575b6000926139ef575b506135ca565b52565b506139e88c61362a565b9b50613919565b613a0891925060203d81116115e0576115d2818361086f565b90386139d5565b613a176112f5565b6139cd565b92959790939650613a5e989a508691949b611436613a406113a86113a8600361128c565b9163dc01f60d9050613a5160405190565b9b8c948593849360e01b90565b03915afa968715613be3575b600097613bc0575b50613a7c856105e5565b995b613a89610396895190565b8b1015613b1e5789613b0d8a6139db613b078f6138e1613aff8f8f8f82613aed6139b18d613996613af996613af3613ae68d9860209b50613aca8a8a613690565b51015173ffffffffffffffffffffffffffffffffffffffff1690565b9586945190565b886135ca565b90613690565b51015190565b968795505190565b8d613690565b50613b178b61362a565b9a50613a7e565b919594939950919550613b30836105e5565b985b613b3d610396875190565b8a1015613bb45788613ba3896139db613b9d8b8f806138e1613b958f8f8f9582613b8f6139b18f613996613af996613af38e6138d96138d99f613b889060209d50613aca8c8c613690565b9788965190565b8a6135ca565b988997505190565b8c613690565b50613bad8a61362a565b9950613b32565b96509650965050505050565b613bdc91973d8091833e613bd4818361086f565b81019061373e565b9538613a72565b613beb6112f5565b613a6a565b613c08915060203d81116115e0576115d2818361086f565b386138c6565b613c166112f5565b6138be565b613c3791953d8091833e613c2f818361086f565b810190613587565b9338613888565b613c466112f5565b613880565b613c5e913d8091833e6117b0818361086f565b38613828565b613c6c6112f5565b613820565b613c919061385392933d8091833e613c89818361086f565b810190613475565b91906137bf565b613ca06112f5565b6137b7565b6103706001613cdb565b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161037091602090611b48565b613d5c575b613ce8614069565b613d2e613d0f6000613d006113a86113a8600161128c565b6312edb24c906113bc60405190565b825260049082905afa908115613d4f575b600091613d36575b506145bb565b610370614361565b613d49913d8091833e613c89818361086f565b38613d28565b613d576112f5565b613d20565b613d6c6113a86113a8600161128c565b613ed130613d8d600063c00007b0613d83846112c2565b956113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff87166004830152602490829084905af1908115613fc5575b600091613fac575b5050613dfa6000613ddb6113a86113a8600261128c565b636b09169590613dee836114aa8161128c565b83528b60048401613caf565b03925af18015613f9f575b613f89575b5073d533a949740bb3306d119cc777fa900ba034cd52906020613e2c836112c2565b94613e36866112c2565b936370a082319483613e4760405190565b8092613e538960e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa908115613f7c575b600091613f5f575b50600097613e95896105e5565b8211613f49575b505050613eba734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b90565b92611436613ec7856112c2565b95612ff3876112c2565b03915afa928315613f3c575b600093613f1c575b50613eef846105e5565b8311613eff575b50505050613ce0565b613f1393613f0d915061128c565b90613fd2565b38808080613ef6565b613f3591935060203d81116115e0576115d2818361086f565b9138613ee5565b613f446112f5565b613edd565b613f579250613f0d8961128c565b388080613e9c565b613f769150843d81116115e0576115d2818361086f565b38613e88565b613f846112f5565b613e80565b613f999060006114f2818361086f565b38613e0a565b613fa76112f5565b613e05565b613fbf913d8091833e6117b0818361086f565b38613dc4565b613fcd6112f5565b613dbc565b6126cd6004926126be61037095613fe8856112c2565b50613ff663a9059cbb611b64565b9261400060405190565b968794602086019081520161132c565b818102929181159184041417156118d257565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b811561405d570490565b614065614023565b0490565b602073c9acb83ada68413a6aa57007bc720ee2e2b3c46d614089816112c2565b614092816112c2565b6313114a9d6140aa6140a360405190565b9160e01b90565b81528481600481855afa908115614354575b600091614337575b5084611436733432b6a60d23ca0dfca7761b7ab56459d9c964d0956140e8876112c2565b936140f2856112c2565b956370a0823192614145614137309461411d61410d876112c2565b9e8f8d6114368b61142960405190565b03915afa90811561432a575b60009161430d575b50614010565b61413f61108d565b90614053565b6000996141518b6105e5565b8211614234575b505050505061417461416960405190565b988993849360e01b90565b0381855afa948515614227575b600095614207575b50614193836105e5565b85116141a1575b5050505050565b602093505061156863a9059cbb926141b88161128c565b936141c561155b60405190565b03925af180156141fa575b6141de575b8080808061419a565b6141f59060203d811161161b5761160d818361086f565b6141d5565b6142026112f5565b6141d0565b61422091955060203d81116115e0576115d2818361086f565b9338614189565b61422f6112f5565b614181565b61425f93889163a9059cbb94505063998cbb4390611436614255600461128c565b92612ffe60405190565b03915afa928315614300575b6000936142d5575b50869161429382611568935061428860405190565b958694859460e01b90565b03818b8b5af180156142c8575b6142ad575b808080614158565b6142c390853d811161161b5761160d818361086f565b6142a5565b6142d06112f5565b6142a0565b611568919350916142936142f68994853d8111611ce457611cd6818361086f565b9492505091614273565b6143086112f5565b61426b565b61432491508a3d81116115e0576115d2818361086f565b38614131565b6143326112f5565b614129565b61434e9150853d81116115e0576115d2818361086f565b386140c4565b61435c6112f5565b6140bc565b61437660206113ad6113a86113a8600361128c565b825260049082905afa9081156145ae575b600091614590575b5061439657565b6143c46143a96113a86113a8600361128c565b3060206370a082316143ba836112c2565b93611c0260405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa928315614583575b60009361455b575b50614425916020916114366144146113a86113a8600161128c565b9163d9f96e8d905061142960405190565b03915afa90811561454e575b600091614530575b50600091614449611e6e846105e5565b148061451f575b6144a0575b5061446a816114976113a86113a8600361128c565b03925af18015614493575b61447d575050565b8161037092903d10611501576114f2818361086f565b61449b6112f5565b614475565b816144b16113a86113a8600361128c565b6347e7ef2490611568836144c48161128c565b93833b15614512575b6144d961155b60405190565b03925af18015614505575b15614455576144ff90823d8411611501576114f2818361086f565b38614455565b61450d6112f5565b6144e4565b61451a600080fd5b6144cd565b50614529826105e5565b8111614450565b614548915060203d81116115e0576115d2818361086f565b38614439565b6145566112f5565b614431565b60209193509161457a61442593833d81116115e0576115d2818361086f565b939150916143f9565b61458b6112f5565b6143f1565b6145a8915060203d811161161b5761160d818361086f565b3861438f565b6145b66112f5565b614387565b60006145c6816105e5565b925b6145d3610396845190565b8410156146ab576145e76139748585613690565b614604733432b6a60d23ca0dfca7761b7ab56459d9c964d061125e565b0361461a575b6146138461362a565b93506145c8565b614632602061140d6113a86113a86139748989613690565b03915afa90811561469e575b600091614680575b50614650836105e5565b811161465d575b5061460a565b61467a906146716113a86139748888613690565b613f0d8561128c565b38614657565b614698915060203d81116115e0576115d2818361086f565b38614646565b6146a66112f5565b61463e565b92505050565b909291926146c161093882611668565b93818552602080860192028301928184116146ff575b915b8383106146e65750505050565b602080916146f4848661050f565b8152019201916146d9565b614707600080fd5b6146d7565b6103969136916146b1565b9161473291613d2e93614737575b61472d614069565b61470c565b6145bb565b6147476113a86113a8600161128c565b600063c00007b09161475e8230946137e9866112c2565b825273ffffffffffffffffffffffffffffffffffffffff85166004830152602490829084905af1908115614839575b8391614820575b50506147a66113a86113a8600261128c565b636b09169593506147cf836147ba8161128c565b95833b15614813575b6147da61155b60405190565b845260048401613caf565b03925af18015614806575b6147f0575b50614725565b6148009060006114f2818361086f565b386147ea565b61480e6112f5565b6147e5565b61481b600080fd5b6147c3565b614833913d8091833e6117b0818361086f565b38614794565b6148416112f5565b61478d56fea2646970667358221220af541b3c14dd6b5ddc5ec2534ae905d970eb028282aefe7aacdd1f55b805c25464736f6c6343000811003360c0604052346200005c575b620000266200001962000386565b9594909493919362000445565b60405161714c62000c2b82396080518181816125c501528181612761015281816127fc015261296e015260a05181505061714c90f35b62000065600080fd5b6200000b565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000a957604052565b620000b362000070565b604052565b90620000cf620000c760405190565b928362000087565b565b6001600160a01b031690565b90565b6001600160a01b0381165b036200006b57565b90505190620000cf82620000e0565b60209081906001600160401b0381116200011b57020190565b6200012562000070565b020190565b90929192620001436200013d8262000102565b620000b8565b938185526020808601920283019281841162000186575b915b8383106200016a5750505050565b602080916200017a8486620000f3565b8152019201916200015c565b6200018f600080fd5b6200015a565b90620000dd9181601f82011215620001b4575b6020815191016200012a565b620001bd600080fd5b620001a8565b80620000eb565b90505190620000cf82620001c3565b90929192620001ec6200013d8262000102565b93818552602080860192028301928184116200022f575b915b838310620002135750505050565b60208091620002238486620001ca565b81520192019162000205565b62000238600080fd5b62000203565b90620000dd9181601f820112156200025d575b602081519101620001d9565b62000266600080fd5b62000251565b60e08183031262000377575b620002848282620000f3565b92620002a683602084015160018060401b03811162000368575b840162000195565b92620002c881604085015160018060401b0381116200034a575b850162000195565b92620002ea82606083015160018060401b03811162000359575b83016200023e565b92620000dd6200030f84608085015160018060401b0381116200034a57850162000195565b93620003318160a086015160018060401b0381116200033b575b860162000195565b9360c001620000f3565b62000344600080fd5b62000329565b62000353600080fd5b620002c0565b62000362600080fd5b620002e2565b62000371600080fd5b6200029e565b62000380600080fd5b62000278565b620003a962007d77803803806200039d81620000b8565b9283398101906200026c565b90919293949596565b620000dd90620000d1906001600160a01b031682565b620000dd90620003b2565b620000dd90620003c8565b90600160281b600160c81b039060281b5b9181191691161790565b906200040d620000dd6200041592620003d3565b8254620003de565b9055565b906001600160a01b0390620003ef565b906200043d620000dd6200041592620003d3565b825462000419565b620004519650620008ee565b6200047c62000474734659d5ff63a1e1edd6d5dd9cc315e063c95947d0620003d3565b6021620003f9565b620004a76200049f73f43211935c781d5ca1a41d2041f397b8a7366c7a620003d3565b602362000429565b620004d2620004ca73a1f8a6807c402e4a15ef4eba36528a3fed24e577620003d3565b602462000429565b620000cf620004f5735f4ec3df9cbd43714fe2740f5e3616155c5b8419620003d3565b602562000429565b620000dd620000dd620000dd9290565b9060001990620003ef565b906200052c620000dd6200041592620004fd565b82546200050d565b50634e487b7160e01b600052601160045260246000fd5b620000cf62000534565b9160001960089290920291821b911b620003ef565b91906200057f620000dd6200041593620004fd565b90835462000555565b620000cf916000916200056a565b818110620005a2575050565b80620005b2600060019362000588565b0162000596565b9091828110620005c857505050565b620000cf9290620005e0905b92600052602060002090565b908101910162000596565b90620000cf916801000000000000000082116200060f575b805490828155620005b9565b6200061962000070565b62000603565b600162000653620005d462000632855190565b94838060401b03861162000690575b6200064d8686620005eb565b60200190565b92049160005b838110620006675750505050565b600190602062000682620000dd86516001600160a01b031690565b940193818401550162000659565b6200069a62000070565b62000641565b90620000cf916200061f565b818110620006b8575050565b80620006c8600060019362000588565b01620006ac565b9091828110620006de57505050565b620000cf9290620006ef90620005d4565b9081019101620006ac565b90620000cf916801000000000000000082116200071e575b805490828155620006cf565b6200072862000070565b62000712565b60016200075c620005d462000741855190565b94838060401b03861162000790575b6200064d8686620006fa565b92049160005b838110620007705750505050565b600190602062000782620000dd865190565b940193818401550162000762565b6200079a62000070565b62000750565b90620000cf916200072e565b6001906000198114620007bd570190565b620007c762000534565b0190565b50634e487b7160e01b600052603260045260246000fd5b9060208091620007f0845190565b811015620007ff575b02010190565b62000809620007cb565b620007f9565b906200081b90620003d3565b600052602052604060002090565b6200084c60019162000839815490565b8410156200085557600052602060002090565b91020190600090565b6200085f620007cb565b600052602060002090565b9062000896620000cf92805490680100000000000000008210156200089d575b60018201815562000829565b906200056a565b620008a762000070565b6200088a565b9060ff90620003ef565b90620008ca620000dd6200041592151590565b8254620008ad565b620000dd62093a80620004fd565b919082018092116200054b57565b94620009d9620009e99493956200090b620009e194999862000b0b565b6200092a73c8418af6358ffdda74e09ca9cc3fe03ca6adc5b0620003d3565b60805273853d955acef822db058eb8505911ed77f175b99e60a052620009c4671bc16d674ec800006200095d81620004fd565b6200096a81600662000518565b6200097b6301e13380600762000518565b6200098b62091050600862000518565b620009bb673782dace9d90000091620009a483620004fd565b93620009b285600962000518565b50600a62000518565b50600b62000518565b620009d1896010620006a0565b6011620006a0565b6012620006a0565b6013620007a0565b6000620009f681620004fd565b925b62000a05620000dd865190565b84101562000ab95762000a428462000a3c601462000a3562000a28848b620007e2565b516001600160a01b031690565b906200080f565b62000518565b62000aa6601562000a5f62000a5785620004fd565b80926200086a565b62000a6f62000a288787620007e2565b62000a908162000a8a600f62000a3562000a288c8e620007e2565b62000429565b5062000a9e8160196200086a565b601a6200086a565b62000ab184620007ac565b9350620009f8565b935091505062000acb816021620008b7565b5062000aef4262000ade81600562000518565b62000ae8620008d2565b90620008e0565b62000afc81600462000518565b50565b620000dd6001620004fd565b62000b169062000baf565b62000b2062000aff565b62000afc81600262000518565b620000d1620000dd620000dd9290565b620000dd9062000b2d565b1562000b5057565b60405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b6001600160a01b0391821681529116602082015260400190565b60009062000bbd8262000b3d565b9162000bde6001600160a01b0384166001600160a01b038416141562000b48565b62000bea828262000429565b507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9162000c2562000c1b60405190565b9283928362000b95565b0390a156fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80628cc2621461062f578063061a7bf5146106265780630d7bac4f1461061d57806312edb24c1461061457806315a202a11461060b5780631627540c1461060257806317b18c89146105f95780631bcb7d90146105f05780631c1f78eb146105e75780631e090f01146105de5780631face856146105d5578063218751b2146105cc578063231b68dc146105c357806328408bab146105ba5780632c0c2a0a146105b157806336f89af2146105a8578063386a95251461059f578063387edc86146105965780633c62c44f1461058d57806341a16f3f146105845780634f39059c1461057b5780634fd2b5361461057257806353a47bb71461056957806355189773146105605780635bfd92581461055757806364f2c0601461054e578063663b135c14610545578063693392451461053c5780636c430dbb146105335780636e27cef91461052a57806370641a361461052157806372f702f314610518578063741d3c181461050f578063774d4ae7146105065780637910d17b146104fd5780637970833e146104f457806379ba5097146104eb5780637ab44e40146104e25780637d6ef08e146104d95780637f472e54146104d05780638980f11f146104c75780638bad86a7146104be5780638da5cb5b146104b557806391cf600a146104ac5780639637927f146104a3578063a0f234761461049a578063a10d3b3314610491578063a22cb46514610488578063aa1d4fce1461047f578063b61aa08c14610476578063b85efd061461046d578063b94c4dcb14610464578063bdb123e31461045b578063c00007b014610452578063c354382614610449578063c8f33c9114610440578063ca6df29d14610437578063cc2abd641461042e578063cdc82e8014610425578063d2010fb41461041c578063d2fbdc0d14610413578063d42fc9b41461040a578063d5e1a9c614610401578063d7400d56146103f8578063d9f96e8d146103ef578063de1a6551146103e6578063de57a5b5146103dd578063e01f62bf146103d4578063e1ba95d2146103cb578063e44b9fa5146103c2578063e7f30582146103b9578063ebe2b12b146103b0578063f288baf6146103a7578063f2a8d3491461039e578063f2caeb1e14610395578063f77e34d11461038c578063facefb64146103835763fff6cae90361000e5761037e611d66565b61000e565b5061037e611d3f565b5061037e611b9f565b5061037e611b58565b5061037e611b2e565b5061037e611af8565b5061037e611ac2565b5061037e611a8f565b5061037e611a64565b5061037e611a15565b5061037e6119eb565b5061037e6119c0565b5061037e611998565b5061037e61196e565b5061037e611947565b5061037e61191c565b5061037e6118a8565b5061037e611880565b5061037e611856565b5061037e611820565b5061037e6117ec565b5061037e611784565b5061037e61175a565b5061037e611724565b5061037e6116fa565b5061037e6116d0565b5061037e6116a6565b5061037e611672565b5061037e61164a565b5061037e611620565b5061037e6115ec565b5061037e6115c4565b5061037e61159a565b5061037e611570565b5061037e61153d565b5061037e611513565b5061037e6114ce565b5061037e611488565b5061037e61145e565b5061037e611434565b5061037e6113f7565b5061037e61136d565b5061037e61132c565b5061037e6111e6565b5061037e6111bb565b5061037e61116c565b5061037e611142565b5061037e61110c565b5061037e6110e2565b5061037e6110ac565b5061037e611070565b5061037e611018565b5061037e610f94565b5061037e610f6a565b5061037e610f42565b5061037e610ed2565b5061037e610e9c565b5061037e610e72565b5061037e610e3c565b5061037e610de9565b5061037e610d61565b5061037e610d37565b5061037e610cec565b5061037e610cc2565b5061037e610c70565b5061037e610c2e565b5061037e610c04565b5061037e610bce565b5061037e610b98565b5061037e610ad3565b5061037e610aa8565b5061037e6109fb565b5061037e61099e565b5061037e610968565b5061037e6108ac565b5061037e6107f9565b5061037e61079e565b5061037e610713565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361063857565b9050359061068582610659565b565b9061065691602081830312156106785761069f600080fd5b610678565b9052565b0190565b906106cc6106c56106bb845190565b8084529260200190565b9260200190565b9060005b8181106106dd5750505090565b9091926106fa6106f36001928651815260200190565b9460200190565b9291016106d0565b6020808252610656929101906106ac565b5034610740575b61073c61073061072b366004610687565b612379565b60405191829182610702565b0390f35b610748600080fd5b61071a565b80610671565b905035906106858261074d565b9091606082840312610791575b61065661077a8484610678565b936107888160208601610753565b93604001610753565b610799600080fd5b61076d565b50346107cf575b61073c6107bc6107b6366004610760565b91615c8c565b6040515b91829182901515815260200190565b6107d7600080fd5b6107a5565b906106569160208183031215610753576107f4600080fd5b610753565b5034610827575b61073c6108166108113660046107dc565b612519565b6040515b9182918290815260200190565b61082f600080fd5b610800565b600091031261083f57565b610685600080fd5b906108566106c56106bb845190565b9060005b8181106108675750505090565b9091926108936106f3600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b92910161085a565b602080825261065692910190610847565b50346108d5575b6108be366004610834565b61073c6108c9611ecf565b6040519182918261089b565b6108dd600080fd5b6108b3565b610656916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b9061065691546108e2565b61065660006025610903565b61063d6106566106569273ffffffffffffffffffffffffffffffffffffffff1690565b6106569061091a565b6106569061093d565b6106a490610946565b602081019291610685919061094f565b5034610991575b61097a366004610834565b61073c61098561090e565b60405191829182610958565b610999600080fd5b61096f565b50346109bd575b6109b86109b3366004610687565b614123565b604051005b6109c5600080fd5b6109a5565b9190610656906040848203126109ee575b6109e58185610753565b93602001610753565b6109f6600080fd5b6109db565b5034610a19575b61073c610816610a133660046109ca565b906156ba565b610a21600080fd5b610a02565b919061065690604084820312610a4a575b610a418185610678565b93602001610678565b610a52600080fd5b610a37565b90610a6190610946565b600052602052604060002090565b610656916008021c5b60ff1690565b906106569154610a6f565b610aa361065692610a9e602793600094610a57565b610a57565b610a7e565b5034610ac6575b61073c6107bc610ac0366004610a26565b90610a89565b610ace600080fd5b610aaf565b5034610af0575b610ae5366004610834565b61073c610730612471565b610af8600080fd5b610ada565b8051825261068591906080908190610b1a60208201516020860152565b610b2960408201516040860152565b610b3860608201516060860152565b0151910152565b906106a88160a093610afd565b90610b5b6106c56106bb845190565b9060005b818110610b6c5750505090565b909192610b7f6106f36001928651610b3f565b929101610b5f565b602080825261065692910190610b4c565b5034610bc1575b61073c610bb5610bb0366004610687565b614b73565b60405191829182610b87565b610bc9600080fd5b610b9f565b5034610beb575b61073c610816610be6366004610687565b612583565b610bf3600080fd5b610bd5565b61065660006024610903565b5034610c21575b610c16366004610834565b61073c610985610bf8565b610c29600080fd5b610c0b565b5034610c4c575b61073c6107bc610c46366004610a26565b90611da0565b610c54600080fd5b610c35565b61065690610c6b602091600092610a57565b610903565b5034610cb5575b61073c610c8d610c88366004610687565b610c59565b6040515b9182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b610cbd600080fd5b610c77565b5034610cdf575b61073c610816610cda366004610687565b61270f565b610ce7600080fd5b610cc9565b5034610d09575b61073c610816610d04366004610687565b612502565b610d11600080fd5b610cf3565b6106566106566106569290565b61065662093a80610d16565b610656610d23565b5034610d54575b610d49366004610834565b61073c610816610d2f565b610d5c600080fd5b610d3e565b5034610d7b575b6109b8610d76366004610687565b612fd9565b610d83600080fd5b610d68565b608081830312610dc5575b610d9d8282610678565b92610656610dae8460208501610753565b93610dbc8160408601610753565b93606001610753565b610dcd600080fd5b610d93565b9081526040810192916106859160200152565b0152565b5034610e1d575b610e07610dfe366004610d88565b92919091615e58565b9061073c610e1460405190565b92839283610dd2565b610e25600080fd5b610df0565b61065690610c6b600f91600092610a57565b5034610e59575b61073c610c8d610e54366004610687565b610e2a565b610e61600080fd5b610e43565b61065660006023610903565b5034610e8f575b610e84366004610834565b61073c610985610e66565b610e97600080fd5b610e79565b5034610eb9575b61073c610816610eb4366004610687565b612699565b610ec1600080fd5b610ea3565b61065660006001610903565b5034610eef575b610ee4366004610834565b61073c610c8d610ec6565b610ef7600080fd5b610ed9565b801515610671565b9050359061068582610efc565b919061065690604084820312610f35575b610f2c8185610678565b93602001610f04565b610f3d600080fd5b610f22565b5034610f5d575b6109b8610f57366004610f11565b90612ce4565b610f65600080fd5b610f49565b5034610f87575b610f7c366004610834565b61073c61081661445a565b610f8f600080fd5b610f71565b5034610fb1575b610fa6366004610834565b61073c6108166124f8565b610fb9600080fd5b610f9b565b919060a08382031261100b575b610fd58184610678565b92610fe38260208301610678565b92610656610ff48460408501610753565b936110028160608601610753565b93608001610753565b611013600080fd5b610fcb565b5034611036575b610e0761102d366004610fbe565b93929092615d79565b61103e600080fd5b61101f565b610656916008021c81565b906106569154611043565b6106569061106b601491600092610a57565b61104e565b503461108d575b61073c610816611088366004610687565b611059565b611095600080fd5b611077565b6106569061106b601891600092610a57565b50346110c9575b61073c6108166110c4366004610687565b61109a565b6110d1600080fd5b6110b3565b6106566000600861104e565b50346110ff575b6110f4366004610834565b61073c6108166110d6565b611107600080fd5b6110e9565b5034611129575b61111e366004610834565b61073c610730612253565b611131600080fd5b611113565b61065660056021610903565b503461115f575b611154366004610834565b61073c610985611136565b611167600080fd5b611149565b5034611186575b6109b8611181366004610687565b614806565b61118e600080fd5b611173565b9190610656906040848203126111ae575b6109e58185610678565b6111b6600080fd5b6111a4565b50346111d9575b61073c6108166111d3366004611193565b90614893565b6111e1600080fd5b6111c2565b5034611204575b61073c6107306111fe366004610f11565b9061303d565b61120c600080fd5b6111ed565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61126160059161124f815490565b84101561126a57600052602060002090565b91020190600090565b611272611211565b600052602060002090565b6106569081565b610656905461127d565b919061129e602293600094610a57565b80548210156112ef576112b2929350611241565b506112bc81611284565b916112c960018301611284565b916112d660028201611284565b9161065660046112e860038501611284565b9301611284565b8380fd5b9095949261068594611325610de59261131e60809661131760a088019c6000890152565b6020870152565b6040850152565b6060830152565b5034611360575b61073c61134a611344366004611193565b9061128e565b9161135795939560405190565b958695866112f3565b611368600080fd5b611333565b5034611387575b61137f366004610834565b6109b86141e4565b61138f600080fd5b611374565b90916060828403126113c5575b6106566113ae8484610678565b936113bc8160208601610753565b93604001610678565b6113cd600080fd5b6113a1565b90610a61565b9061065692610a9e61106b926113f2602695600096610a57565b6113d2565b5034611415575b61073c61081661140f366004611394565b916113d8565b61141d600080fd5b6113fe565b6106569061106b601f91600092610a57565b5034611451575b61073c61081661144c366004610687565b611422565b611459600080fd5b61143b565b503461147b575b61073c610816611476366004610687565b6126bb565b611483600080fd5b611465565b50346114a3575b6109b861149d366004611193565b90613c2b565b6114ab600080fd5b61148f565b908152606081019392610685929091604091610de5905b6020830152565b50346114fb575b61073c6114eb6114e6366004610687565b6149e2565b6040519193915b938493846114b0565b611503600080fd5b6114d5565b610656600080610903565b5034611530575b611525366004610834565b61073c610c8d611508565b611538600080fd5b61151a565b5034611557575b6109b8611552366004610687565b613a2b565b61155f600080fd5b611544565b61065660006021610a7e565b503461158d575b611582366004610834565b61073c6107bc611564565b611595600080fd5b611577565b50346115b7575b61073c6108166115b2366004610687565b6125ab565b6115bf600080fd5b6115a1565b50346115df575b6109b86115d9366004610760565b91615b4a565b6115e7600080fd5b6115cb565b5034611607575b6109b8611601366004610f11565b90615c33565b61160f600080fd5b6115f3565b6106566000600961104e565b503461163d575b611632366004610834565b61073c610816611614565b611645600080fd5b611627565b5034611665575b6109b861165f366004611193565b90615bc7565b61166d600080fd5b611651565b503461168d575b6109b86116873660046109ca565b90615301565b611695600080fd5b611679565b6106566000600761104e565b50346116c3575b6116b8366004610834565b61073c61081661169a565b6116cb600080fd5b6116ad565b50346116ed575b6116e2366004610834565b61073c610816614668565b6116f5600080fd5b6116d7565b5034611717575b61073c610730611712366004610687565b613013565b61171f600080fd5b611701565b5034611741575b61073c610c8d61173c366004610687565b6126e6565b611749600080fd5b61172b565b6106566000600561104e565b5034611777575b61176c366004610834565b61073c61081661174e565b61177f600080fd5b611761565b50346117a1575b61073c61081661179c366004610687565b614b8f565b6117a9600080fd5b61178b565b90916060828403126117df575b6106566117c88484610f04565b936117d68160208601610f04565b93604001610f04565b6117e7600080fd5b6117bb565b5034611807575b6109b86118013660046117ae565b916139be565b61180f600080fd5b6117f3565b6106566000600661104e565b503461183d575b611832366004610834565b61073c610816611814565b611845600080fd5b611827565b6106566000600361104e565b5034611873575b611868366004610834565b61073c61081661184a565b61187b600080fd5b61185d565b503461189b575b6109b86118953660046109ca565b9061568f565b6118a3600080fd5b611887565b50346118c5575b61073c6108166118c0366004610687565b612553565b6118cd600080fd5b6118af565b60808183031261190f575b6118e78282610678565b926106566118f88460208501610753565b936119068160408601610678565b93606001610678565b611917600080fd5b6118dd565b503461193a575b6109b86119313660046118d2565b92919091613fff565b611942600080fd5b611923565b5034611961575b6109b861195c366004610687565b612c2e565b611969600080fd5b61194e565b503461198b575b61073c610816611986366004610687565b6124e1565b611993600080fd5b611975565b50346119b3575b6109b86119ad366004610a26565b90614031565b6119bb600080fd5b61199f565b50346119de575b61073c6108166119d8366004611193565b90614b9e565b6119e6600080fd5b6119c7565b5034611a08575b6119fd366004610834565b61073c6108166124d7565b611a10600080fd5b6119f2565b5034611a2f575b611a27366004610834565b6109b86139f4565b611a37600080fd5b611a1c565b919061065690604084820312611a57575b610a418185610753565b611a5f600080fd5b611a4d565b5034611a82575b61073c610816611a7c366004611a3c565b90615907565b611a8a600080fd5b611a6b565b5034611aa9575b6109b8611aa4366004610687565b612aff565b611ab1600080fd5b611a96565b6106566000600461104e565b5034611adf575b611ad4366004610834565b61073c610816611ab6565b611ae7600080fd5b611ac9565b6106566000600a61104e565b5034611b15575b611b0a366004610834565b61073c610816611aec565b611b1d600080fd5b611aff565b6106566000600b61104e565b5034611b4b575b611b40366004610834565b61073c610816611b22565b611b53600080fd5b611b35565b5034611b75575b61073c610816611b703660046107dc565b611fdb565b611b7d600080fd5b611b5f565b906106569160208183031215610f0457611b9a600080fd5b610f04565b5034611bb9575b6109b8611bb4366004611b82565b61328e565b611bc1600080fd5b611ba6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff821117611c5e57604052565b611c66611bee565b604052565b90610685611c7860405190565b9283611c1e565b60209067ffffffffffffffff8111611c95570290565b611c9d611bee565b0290565b90929192611cb6611cb182611c7f565b611c6b565b936020859202830192818411611cef575b915b838310611cd65750505050565b60208091611ce48486610753565b815201920191611cc9565b611cf7600080fd5b611cc7565b906106569181601f82011215611d15575b600690611ca1565b611d1d600080fd5b611d0d565b906106569160c08183031215611cfc57611d3a600080fd5b611cfc565b5034611d59575b6109b8611d54366004611d22565b613f46565b611d61600080fd5b611d46565b5034611d80575b611d78366004610834565b6109b8613426565b611d88600080fd5b611d6d565b6106569061063d565b6106569054611d8d565b90611dae61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831603611dd1575050600190565b611e04611dea611de5611e1e93600f610a57565b611d96565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b14611e2857600090565b600190565b90611e48611e3c6106bb845490565b92600052602060002090565b9060005b818110611e595750505090565b909192611e93611e8c600192611e6e87611d96565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460010190565b929101611e4c565b9061065691611e2d565b90610685611ebf92611eb660405190565b93848092611e9b565b0383611c1e565b61065690611ea5565b6106566010611ec6565b61126160019161124f815490565b61063d6106566106569290565b61065690611ee7565b905051906106858261074d565b906106569160208183031215611efd57611f22600080fd5b611efd565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190611f6f565b9290565b91808302928184041490151715611f8257565b610685611f34565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611fc4565b9190565b908115611fcf570490565b611fd7611f8a565b0490565b611fef611fe9826011611ed9565b90610903565b611ffc61063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216146120dd5761204d61065692602061203561203061208195610946565b610946565b630a3be7579061204460405190565b94859260e01b90565b825260049082905afa9182156120d0575b600092612098575b5061207561207b916019611ed9565b9061104e565b90611f64565b612092670de0b6b3a7640000610d16565b90611fba565b61207b9192506120c16120759160203d81116120c9575b6120b98183611c1e565b810190611f0a565b929150612066565b503d6120af565b6120d8611f27565b61205e565b50612075610656916013611ed9565b6020809167ffffffffffffffff811161210457020190565b61210c611bee565b020190565b9061211e611cb1836120ec565b918252565b369037565b9061068561213e61213884612111565b936120ec565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401612123565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612197570190565b6106a8611f34565b91908203918211611f8257565b91908201809211611f8257565b90602080916121c6845190565b8110156121d4575b02010190565b6121dc611211565b6121ce565b906121f0611e3c6106bb845490565b9060005b8181106122015750505090565b90919261221e611e8c60019261221687611284565b815260200190565b9291016121f4565b90610656916121e1565b90610685611ebf9261224160405190565b93848092612226565b61065690612230565b61225d601b611284565b60009061226c611fc083610d16565b148015612333575b156122845750610656601561224a565b61229e61229861229360105490565b612128565b91610d16565b6015906122ac610656835490565b81101561232e576123246123176122c96120758461232996611ed9565b6123116123076122f66122ed6122dd612350565b6122e76005611284565b9061219f565b61207b88611fdb565b61207b670de0b6b3a7640000610d16565b612092601c611284565b906121ac565b61232183866121b9565b52565b612169565b61229e565b505090565b5061233e601c611284565b61234a611fc083610d16565b14612274565b6106564261235e6004611284565b8082101561236a575090565b905090565b90610a6190610d16565b90612382612253565b916010612390612293825490565b918294601e6123a76123a28483610a57565b611284565b6000906123b6611fc083610d16565b116123c4575b505050505050565b6123d5909792949691939597610d16565b6123e0610656885490565b81101561245e57610656612456826123248b612321836124508d6123116123a28f9b8f6124486120816123e09f61207b61243161242d876124276123a28d6124439a610a57565b946121b9565b5190565b6122e76123a2886124438d6016610a57565b61236f565b946017610a57565b926121b9565b9150506123d5565b50945094505050503880808080806123bc565b601361247e612293825490565b91829061248b6000610d16565b612496610656855490565b8110156124d0576106566124c8826123246124be6124b661249696611fdb565b61207b610d23565b612321838b6121b9565b91505061248b565b5091509150565b610656601b611284565b6123a2610656916124f0600090565b50601d610a57565b610656601c611284565b6123a261065691612511600090565b50601e610a57565b6106569061235e61253861252d6006611284565b9261207b6006611284565b6120926007611284565b610656670de0b6b3a7640000610d16565b61257b61065691612562600090565b5061207b6123a26125736003611284565b92601d610a57565b612092612542565b61257b61065691612592600090565b5061207b6123a26125a36003611284565b92601f610a57565b61265761262b6020610656936125bf600090565b506125e97f0000000000000000000000000000000000000000000000000000000000000000610946565b6126076370a082316125fa60405190565b9586948593849360e01b90565b835273ffffffffffffffffffffffffffffffffffffffff1660048301526024820190565b03915afa90811561268c575b60009161266e575b5061265261264b612542565b8092611f64565b611f64565b612092612664600b611284565b61207b6003611284565b612686915060203d81116120c9576120b98183611c1e565b3861263f565b612694611f27565b612637565b61257b6126b1610656926126ab600090565b50612553565b61207b600b611284565b61257b6126b1610656926126cd600090565b50612583565b61065690610a78565b61065690546126d3565b6126f96126f482600d610a57565b6126dc565b156127015790565b611de5610656916020610a57565b60009061283860009161272183610d16565b5061272b816126e6565b9061273861063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff8316149182156129645761279d60206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b6370a082319061279460405190565b93849260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa908115612957575b600091612939575b50925b6127f56127eb6127e5600a611284565b86611f64565b61207b6009611284565b60206128207f0000000000000000000000000000000000000000000000000000000000000000610946565b6318160ddd9061282f60405190565b98899260e01b90565b825260049082905afa95861561292c575b600096612908575b5061286890612092612861612542565b8098611f64565b9650156128f8575061287990612699565b925b61288481610d16565b8411156128e657506128a56128af936128a0846128a094611f64565b611fba565b61207b600a611284565b808211156128de5750905b816128cb611fc0610656600a611284565b116128d257565b9050610656600a611284565b9050906128ba565b9150506128f39150610d16565b6128af565b61290291506126bb565b9261287b565b6128689196506129259060203d81116120c9576120b98183611c1e565b9590612851565b612934611f27565b612849565b612951915060203d81116120c9576120b98183611c1e565b386127d2565b61295f611f27565b6127ca565b61299260206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa9081156129ec575b6000916129ce575b50926127d5565b6129e6915060203d81116120c9576120b98183611c1e565b386129c7565b6129f4611f27565b6129bf565b15612a0057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642070726f7879000000000000000000000000000000000000006044820152606490fd5b0390fd5b9060ff905b9181191691161790565b90612a82610656612a8992151590565b8254612a63565b9055565b9073ffffffffffffffffffffffffffffffffffffffff90612a68565b90612ab9610656612a8992610946565b8254612a8d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90612a68565b90612af8610656612a8992610d16565b8254612ac0565b33612b16612b116126f483600d610a57565b6129f9565b612b46600e612b4184610a9e85612b3b612b376126f485610a9e858a610a57565b1590565b94610a57565b612a72565b602091612b56611de58285610a57565b612b7573ffffffffffffffffffffffffffffffffffffffff8416611e04565b14612b7f57505050565b612bb36125a36123a283612bac61068597612ba7612bc297612ba16000611ef4565b92610a57565b612aa9565b601d610a57565b91612bbd83611284565b61219f565b90612ae8565b15612bcf57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f787920686173206e6f7420616c6c6f77656420796f75207965740000006044820152606490fd5b61068590612c43612b116126f483600d610a57565b612bc2612cb76125a36123a2612c5a85600e610a57565b612c70612c6b6126f4338094610a57565b612bc8565b612bac86612ba7836020612c87611de58383610a57565b612c9461063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612cc6575b50610a57565b91612cc183611284565b6121ac565b612cde90612bc2612bb36125a36123a287601d610a57565b38612cb1565b90612da1575b612cf761063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612d165750565b80612d23612d3f926149e2565b919390612d2f84612dae565b612d3a84600c610a57565b612ae8565b828110612d7b57612d7383612d5a61068595612d3a9461219f565b90612cc1612d6c83612cc1601c611284565b601c612ae8565b91601e610a57565b612d7383612d8f612d3a936106859661219f565b90612bbd612d6c83612bbd601c611284565b612da9613426565b612cea565b6000612dbc61063d82611ef4565b73ffffffffffffffffffffffffffffffffffffffff831603612ddc575050565b9091612de783612379565b90612df183610d16565b612dfc610656845190565b811015612e2b5780612324612e1761242d612e2694876121b9565b612d3a836124438a6017610a57565b612df1565b509091612e3790610d16565b612e42610656845190565b811015612e7b57610656612e7382612324612e64612075612e42966015611ed9565b612d3a836124438b6016610a57565b915050612e37565b50915050565b6106566002610d16565b15612e9257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6106566001610d16565b612f2c90612f27612f0c6002611284565b612f20612f17612e81565b91821415612e8b565b6002612ae8565b612fb3565b610685612f20612ef1565b6106569060101c610a78565b6106569054612f37565b15612f5457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5265776172647320636f6c6c656374696f6e20706175736564000000000000006044820152606490fd5b61068590612fd6612fc46021612f43565b612fd060005b91151590565b14612f4d565b50565b61068590612efb565b90612ff991612ff4612f0c6002611284565b613005565b90610685612f20612ef1565b506106569060019033613206565b610656906060612fe2565b90612ff99291613031612f0c6002611284565b50610656919033613206565b6106569190606061301e565b9061065693929161305b600183612ce4565b6130b0565b908152606081019392610685929091604091613094905b73ffffffffffffffffffffffffffffffffffffffff166020830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b506130c042612d3a836018610a57565b6130ca6021612f43565b6000906130da90612fd083612fca565b6010906130e8612293835490565b9586906130f483610d16565b6130ff610656865490565b8110156131ec5761316290858a89838a6131436017612d3a8461244361313b8f6131368b612321866124506123a282898f8e610a57565b610d16565b958694610a57565b61315361065661242d84876121b9565b11613167575b50505050612169565b6130f4565b61242d81612427611fe961317e9461318498611ed9565b916143ad565b61319161242d828c6121b9565b61319e611fe98389611ed9565b7f1d2f2ca53af5d2f333bd32fdd45f9c52ad8ebe31414f7792912077fcb3876dff906131c98a610946565b926131e08c6131d760405190565b93849384613060565b0390a2858a8983613159565b509592509550509190916131fe575050565b610685915050565b6106569291906060613049565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916106859160200152565b91906008612a689102916132707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190613286610656612a8993610d16565b90835461323d565b60009061329a82610d16565b6011906132a8610656835490565b811015613420576132bf611fe9826132ee94611ed9565b6132cb61063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036132f3575b50612169565b61329a565b838415613404575b156132e85761338460206133146120306133a994610946565b613375636472eee18361334261332930610946565b9261334d4261333760405190565b958694859460e01b90565b845260048401613213565b03818d875af19081156133f7575b6000916133da575b5061336f876019611ed9565b90613275565b63513872bd9061279460405190565b825260049082905afa9081156133cd575b6000916133af575b5061336f83601a611ed9565b386132e8565b6133c7915060203d81116120c9576120b98183611c1e565b3861339d565b6133d5611f27565b613395565b6133f19150843d81116120c9576120b98183611c1e565b38613363565b6133ff611f27565b61335b565b504261341a611fc061065661207586601a611ed9565b116132fb565b50505050565b613430600061328e565b61344261343b61445a565b6003612ae8565b42613453611fc06106566004611284565b10613460576106856135bb565b610685613801565b91906106569060408482031261348c575b6134838185611efd565b93602001611efd565b613494600080fd5b613479565b6106a49073ffffffffffffffffffffffffffffffffffffffff1660601b90565b906106a86135126014937f4e6f7420656e6f7567682072657761726420746f6b656e7320617661696c616281527f6c653a2000000000000000000000000000000000000000000000000000000000602082015260240190565b8092613499565b60005b83811061352c5750506000910152565b818101518382015260200161351c565b61355d611bc66020936106a893613551815190565b80835293849260200190565b95869101613519565b60208082526106569291019061353c565b1561357f5750565b612a5f9061358c60405190565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301613566565b60006135c681610d16565b6012906135d4610656835490565b8110156136a3576135eb611fe98261361994611ed9565b6135f761063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361361e5750612169565b6135c6565b604061362f61203061365993610946565b63092193ab906126078761364230610946565b9361364c60405190565b9687958694859360e01b90565b03925af18015613696575b156132e8576136899060403d811161368f575b6136818183611c1e565b810190613468565b506132e8565b503d613677565b61369e611f27565b613664565b50506136b3426122e76004611284565b906136c96122986136c2610d23565b8094611fba565b60106136d6610656825490565b8210156137c257906123248261379261376a611fe98561379897613762611fc061374b602061372f8f8f611fe9896137296120309361207b61371e6120309761265286611fdb565b916123116001610d16565b99611ed9565b6370a082319061260761374130610946565b926125fa60405190565b03915afa9081156137b5575b60009161379d575090565b111594611ed9565b61065661377660405190565b80926137866020830191826134b9565b90810382520382611c1e565b90613577565b6136c9565b610656915060203d81116120c9576120b98183611c1e565b6137bd611f27565b613757565b50506137e7906123116137ee936126526137dc6004611284565b936123116001610d16565b6004612ae8565b6137f6613801565b61068561343b61445a565b613809612253565b6138136000610d16565b601590613821610656835490565b81101561384b576123246138469261336f8361384061242d82896121b9565b92611ed9565b613813565b505050610685613859612350565b6005612ae8565b1561386757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f74206f776e6572206f722074696d656c6f636b00000000000000000000006044820152606490fd5b906106859291613903336138dd61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff821614908115613908575b50613860565b61399d565b9050613927738412ebf45bac1b340bbe8f318b928c466c4e39ca611e04565b14386138fd565b9063ff0000009060181b612a68565b9061394d610656612a8992151590565b825461392e565b9061ff009060081b612a68565b90613971610656612a8992151590565b8254613954565b9062ff00009060101b612a68565b90613996610656612a8992151590565b8254613978565b61068592916139b06139b792602161393d565b6021613961565b6021613986565b9061068592916138c6565b6139da336138dd61063d6000611d96565b6106856106856139ed612b3760216126dc565b6021612a72565b6106856139c9565b61068590613a11336138dd61063d6000611d96565b61068590612b41600d91612ba1612b376126f48386610a57565b610685906139fc565b15613a3b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f74206f776e6572206f7220746b6e206d67720000000000000000000000006044820152606490fd5b9061068591613ad83382613ab161063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831614918215613add575b5050613a34565b613aee565b613ae79250611da0565b8238613ad1565b60009182613afb81610d16565b6010613b08610656825490565b821015613c2057611fe982613b1c92611ed9565b613b3b73ffffffffffffffffffffffffffffffffffffffff8616611e04565b14613b4e57613b4990612169565b613afb565b50909192506001905b8180613c00575b8215613bd6575b505015613b77576106859133906143ad565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f2076616c696420746f6b656e7320746f207265636f7665720000000000006044820152606490fd5b15915081613be7575b503880613b65565b9050613bf9611e0461063d3393611d96565b1438613bdf565b9150613c10611de585600f610a57565b613c1933611e04565b1491613b5e565b505092909192613b57565b9061068591613a9a565b61068590613c4a336138dd61063d6000611d96565b613d9b565b906020906006811015613c6157020190565b61210c611211565b15613c7057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d757374206265203e3d204d554c2050524543000000000000000000000000006044820152606490fd5b15613cd657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203000000000000000000000000000000000000000006044820152606490fd5b15613d3c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203100000000000000000000000000000000000000006044820152606490fd5b613ec361242d61068592613eb9613eb261242d613eac613e0f613e78613e7161242d613e6b6000613df0613ddb61242d8d613dd585610d16565b90613c4f565b613de9611fc0610656612542565b1015613c69565b613136613e6461242d8d613dd5600195613e1561242d613e0f89610d16565b85613c4f565b613e21611fc083610d16565b101580613f22575b80613ef9575b613e3890613ccf565b613e4761242d60049d8e610d16565b613e53611fc089610d16565b101580613eca575b61313690613d35565b6006612ae8565b89613c4f565b600a612ae8565b613e92613e8b61242d613e6b6002610d16565b600b612ae8565b613136613ea561242d613e6b6003610d16565b6009612ae8565b84613c4f565b6007612ae8565b613dd56005610d16565b6008612ae8565b50613136613ee461242d613ede6005610d16565b86613c4f565b613ef0611fc08a610d16565b10159050613e5b565b50613e38613f0d61242d613ede6003610d16565b613f19611fc084610d16565b10159050613e2f565b50613f3361242d613e0f6002610d16565b613f3f611fc083610d16565b1015613e29565b61068590613c35565b90610685939291613f683382613ab161063d6000611d96565b613fad565b91906008612a6891029161327073ffffffffffffffffffffffffffffffffffffffff841b90565b9190613fa5610656612a8993610946565b908354613f6d565b90613fd96123a2613ff193613ff76106859796613fdf60139661336f601498613fd96123a2888c610a57565b90611ed9565b613ff16011613fd96123a2868a610a57565b90613f94565b601293610a57565b90610685939291613f4f565b90610685916140223382613ab161063d6000611d96565b90612ba761068592600f610a57565b906106859161400b565b1561404257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201527f6f726d207468697320616374696f6e00000000000000000000000000000000006064820152608490fd5b610685906140e5336140df611e0461063d6000611d96565b1461403b565b6140f0816001612aa9565b61411e7f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2291610c9160405190565b0390a1565b610685906140c7565b1561413357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527f2063616e20616363657074206f776e65727368697000000000000000000000006064820152608490fd5b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161068591602090613094565b6141fe336141f8611e0461063d6001611d96565b1461412c565b6142086000611d96565b6142126001611d96565b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9161424961424060405190565b928392836141b8565b0390a16142606142596001611d96565b6000612aa9565b61068561426d6000611ef4565b6001612aa9565b6142876142816106569290565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6106a860209167ffffffffffffffff81116142e957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b611bc6611bee565b9061211e611cb1836142ac565b3d156143185761430d3d6142f1565b903d6000602084013e565b606090565b9050519061068582610efc565b90610656916020818303121561431d57614342600080fd5b61431d565b1561434e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606490fd5b6000919060046143f584936143e6610685976143cc63a9059cbb614274565b926143d660405190565b9586946020860190815201613213565b60208201810382520382611c1e565b82602082019151925af16144076142fe565b81614413575b50614347565b905061441d815190565b61442a611fc06000610d16565b1490811561443a575b503861440d565b61445491506020614449825190565b81830101910161432a565b38614433565b6106566145236145046144d36144b3602061448b612030735e8422345238f34275888049021821e8e08caa1f610946565b6370a082319061260773a1f8a6807c402e4a15ef4eba36528a3fed24e577926125fa60405190565b03915afa90811561457c575b60009161455e575b5061207b613136614668565b60206144f561203073f43211935c781d5ca1a41d2041f397b8a7366c7a610946565b6318160ddd9061204460405190565b825260049082905afa918215614551575b600092614531575b50611fba565b61207b6402540be400610d16565b61454a91925060203d81116120c9576120b98183611c1e565b903861451d565b614559611f27565b614515565b614576915060203d81116120c9576120b98183611c1e565b386144c7565b614584611f27565b6144bf565b69ffffffffffffffffffff8116610671565b9050519061068582614589565b919060a0838203126145f5575b6145bf818461459b565b926145cd8260208301611efd565b926106566145de8460408501611efd565b936145ec8160608601611efd565b9360800161459b565b6145fd600080fd5b6145b5565b1561460957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636861696e6c696e6b2070726963650000000000000000006044820152606490fd5b61468960a061467a6120306025611d96565b63feaf968c9061279460405190565b825260049082905afa801561473d575b600090819081908190614706575b6106569394506000926146b984610d16565b86121593846146ec575b5050826146d2575b5050614602565b69ffffffffffffffffffff908116925016101538806146cb565b6146fc91929450611fc090610d16565b14159138806146c3565b5050505061472d6106569160a03d8111614736575b6147258183611c1e565b8101906145a8565b915091926146a7565b503d61471b565b614745611f27565b614699565b6106859061475f336138dd61063d6000611d96565b6147ca565b1561476b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5a65726f206164647265737320646574656374656400000000000000000000006044820152606490fd5b6147ff610685916120306147e161063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff83161415614764565b6025612aa9565b6106859061474a565b61065660a0611c6b565b90610685614883600461482a61480f565b9461483b61483782611284565b8752565b61485161484a60018301611284565b6020880152565b61486761486060028301611284565b6040880152565b61487d61487660038301611284565b6060880152565b01611284565b6080840152565b61065690614819565b91906148b46148ae6000926148a9866022610a57565b611241565b5061488a565b9260186148c46123a28383610a57565b60208601906148d7611fc0610656845190565b10156149ce5751915b60608601916148ed835190565b429590861061499a5750614904916123a291610a57565b614912611fc0610656845190565b1015614985576120926149386080946122e761493361496996612bbd875190565b945190565b6149636149558461265261081161494f6002610d16565b83611fba565b612311836126526000610d16565b926121ac565b925b01614977610656825190565b83116149805750565b519150565b50505060806149946000610d16565b9261496b565b6149c49250610811939150608095612bbd6149bf614994976123119450612bbd865190565b935190565b6120926002610d16565b506149dc6123a28383610a57565b916148e0565b601e916000916149f56123a28286610a57565b91614a40614a028361270f565b809550614a136123a285601d610a57565b9684600098614a24611fc08b610d16565b149182614af2575b50508015614ad8575b15614abd5795610d16565b92835b6022614a59610656614a558784610a57565b5490565b861015614ab457614aae916123118661231161257b614aa28d614a9c6040614a968f614a906148ae826148a9614aa89f8d90610a57565b98614893565b96015190565b946121ac565b83611f64565b94612169565b93614a43565b50935094509050565b6149c4614ad2916123116123a287600c610a57565b95610d16565b50614aea6106566123a286600c610a57565b811015614a35565b614b019250906123a291610a57565b614b0d611fc089610d16565b148438614a2c565b90614b1e825490565b614b2781612111565b92614b3b6020850191600052602060002090565b6000915b838310614b4c5750505050565b60056020600192614b5c8561488a565b815201920192019190614b3f565b61065690614b15565b614b8a61065691614b82606090565b506022610a57565b614b6a565b614a5561065691614b82600090565b61236a9190614da3565b614bb061480f565b906000825260208080808086016000815201600081520160008152016000905250565b610656614ba8565b614be5600d6142f1565b7f67657474696e67207374616b6500000000000000000000000000000000000000602082015290565b610656614bdb565b614c2060076142f1565b7f6c6f6f70696e6700000000000000000000000000000000000000000000000000602082015290565b610656614c16565b614c5b600c6142f1565b7f666f756e64206b656b5f69640000000000000000000000000000000000000000602082015290565b610656614c51565b614c9660176142f1565b7f5468652077696e6e696e67206e756d626572206973213a000000000000000000602082015290565b610656614c8c565b614cd1600e6142f1565b7f6265666f72652052657175697265000000000000000000000000000000000000602082015290565b610656614cc7565b15614d0957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5374616b65724e6f74466f756e643a28000000000000000000000000000000006044820152606490fd5b614d72600e6142f1565b7f7265717569726520706173736564000000000000000000000000000000000000602082015290565b610656614d68565b9091614dad614bd3565b91600080614dc283614dbd614c0e565b615018565b614dcb86614ec7565b6022614ddd610656614a558684610a57565b821015614eb957614df582614df0614c49565b614f98565b614e126106566000614e0b856148a98987610a57565b5001611284565b8714614e275750614e2290612169565b614dcb565b819550614e6b9250906148a9614eae946148ae93614e4784614df0614c84565b614e62614e5d6000614e0b876148a98787610a57565b614ec7565b610a9e8a614ec7565b93614e8384614e7b614e5d885190565b614df0614cbf565b614e93614e8e614cfa565b614f31565b614ea8611fc0611f6b8761242d614e5d825190565b14614d02565b610685614e8e614d9b565b50509293614eae9150614e83565b6143e6614f1061068592614eda60405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b60008091614f1c815190565b906020016a636f6e736f6c652e6c6f675afa50565b6143e6614f1061068592614f4460405190565b9283916004602084017f41304fac00000000000000000000000000000000000000000000000000000000815201613566565b92916020614f93610685936040870190878203600089015261353c565b940152565b90614f10610685926143e6614fac60405190565b9384926004602085017fb60e72cc00000000000000000000000000000000000000000000000000000000815201614f76565b92916020614ffb610685936040870190878203600089015261353c565b94019073ffffffffffffffffffffffffffffffffffffffff169052565b90614f10610685926143e661502c60405190565b9384926004602085017f319af33300000000000000000000000000000000000000000000000000000000815201614fde565b90612f2c91615070612f0c6002611284565b6106859190615080600133612ce4565b61514e565b6106569060281c61063d565b6106569054615085565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b90612af8610656612a899290565b6106859190612bc2906080906004906150fa816150f4875190565b906150cb565b61510c60018201612bc2602088015190565b61511e60028201612bc2604088015190565b61513060038201612bc2606088015190565b0192015190565b6106859291156150d95761514961509b565b6150d9565b90339061515b8383614da3565b61516a83612cc1604085015190565b9060009161517783610d16565b8511156152d65761521461521a9261520989615202615286986151fb89976151b78d8f6151a76120306021615091565b906151b130610946565b916153c8565b6151f46151c5602085015190565b6151ed6151de60806151d8606089015190565b97015190565b976151e761480f565b9c8d0152565b60208b0152565b6040890152565b6060870152565b6080850152565b6148a9886022610a57565b90615137565b61523261522b84612cc1601b611284565b601b612ae8565b61524d61524085601d610a57565b612bc285612cc183611284565b615256846126e6565b61526261063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036152c2575b5083612ce4565b6152b07f2640b32e7e5d0fa2a21ea06b22fbd75fda0fda384a895a5fdeef43646de47a0c92610946565b926152bd610e1460405190565b0390a2565b6152406152d091601f610a57565b3861527f565b6040517f063921df000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161505e565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610685929091604091610de590613077565b1561534457565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160448201527f494c4544000000000000000000000000000000000000000000000000000000006064820152608490fd5b6004615401600094936143e66106859787966153e76323b872dd614274565b936153f160405190565b968795602087019081520161530b565b82602082019151925af16154136142fe565b8161541f575b5061533d565b9050615429815190565b615436611fc06000610d16565b14908115615446575b5038615419565b61545591506020614449825190565b3861543f565b90612f2c9161546d612f0c6002611284565b610685919061547d600133612ce4565b6154af565b610de5610685946154a86060949897956154a1608086019a6000870152565b6020850152565b6040830152565b33906154bb8183614da3565b4294919291858111156156645760608401866154d5825190565b6000908210156156525750612bbd6154eb925190565b935b6154fe6154fa888461219f565b9590565b851115615627576155126106566008611284565b85106155fc576155256106566007611284565b85116155d157866152146152bd9461557e615544604061558996015190565b6155736155508b612519565b9161556c61555c61480f565b976155658d8a52565b6020890152565b6040870152565b615202876060870152565b6148a9896022610a57565b615594600086612ce4565b6155be7fc2cf1aae6decacbc52f96b4e4fec96d4ebab5236e4ed987165537bc463014a4395610946565b956155c860405190565b94859485615482565b6040517f42d144ad000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fda0f0f2a000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fbdddfeec000000000000000000000000000000000000000000000000000000008152600490fd5b905061565e9150610d16565b936154ed565b6040517fa51620a7000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161545b565b90612ff992916156ac612f0c6002611284565b50610656914291338061587b565b61065691906000615699565b9061065695949392916156da600183612ce4565b615714565b6106569060181c610a78565b61065690546156df565b613094610685946154a86060949897956154a1608086019a6000870152565b50919390929061572460216156eb565b615850576157356106566008611284565b82106155fc576157486106566007611284565b82116155d1576157899061576d866157636120306021615091565b876151b130610946565b61577683612519565b908661578285836121ac565b9186616d55565b9361579b61522b82612cc1601b611284565b6157b66157a984601d610a57565b612bc283612cc183611284565b6157f56157c2846126e6565b6000906157d161063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361583c575b5084612ce4565b6158366158227ff400e72e69ef4402819dfc57eeddc66f5eb69bf405e0e8098b1946ec1ac14a2294610946565b948661582d60405190565b948594856156f5565b0390a290565b61524061584a91601f610a57565b386157ee565b6040517f26d1807b000000000000000000000000000000000000000000000000000000008152600490fd5b610656949392919060006156c6565b90612ff9929161589d612f0c6002611284565b6158b8565b6106569060081c610a78565b61065690546158a2565b506158c360216158ae565b6158cd6001612fca565b146158dc5761065691336159ac565b6040517f6022a9e7000000000000000000000000000000000000000000000000000000008152600490fd5b6106569190600061588a565b9190613286610656612a899390565b61068591600091615913565b61068591600091613275565b600060046106859261594e83808301615922565b61595b836001830161592e565b615968836002830161592e565b615975836003830161592e565b0161592e565b610685911561593a5761598c61509b565b61593a565b908152606081019392610685929091604091613094906114c7565b600192916159bb848284613206565b506159c68383614da3565b94426159d9611fc0610656606086015190565b1015908115615b2b575b50615b0057604001519360006159f881610d16565b8611615a07575b505050505090565b615a98615a92615a9e93615a288987615a236120306021615091565b6143ad565b615a3961522b8a612bbd601b611284565b615a54615a4788601d610a57565b612bc28b612bbd83611284565b615a5d876126e6565b615a6961063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603615aec575b506148a9876022610a57565b9061597b565b83612ce4565b615ac87f1d9308f6b22a2754a1c622bb30889e8f8f956c83e524d039e9d65d5f052eb90892610946565b92615adf615ad560405190565b9283928784615991565b0390a238808080806159ff565b615a47615afa91601f610a57565b38615a86565b6040517f372a7fe5000000000000000000000000000000000000000000000000000000008152600490fd5b9050615b43612fca615b3d60216126dc565b92151590565b14386159e3565b33615b6284612d3a84610a9e876113f2876026610a57565b615ba9615b9f615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94610946565b9490565b9461081a60405190565b0390a4565b6106a490610d16565b6020810192916106859190615bae565b90600091615bd483610d16565b615bed602691612d3a84610a9e876113f2338098610a57565b615ba9615c20615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94615c2a60405190565b91829182615bb7565b33615c4783612b4184610a9e856027610a57565b615c87615c7d615c777f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610946565b93610946565b936107c060405190565b0390a3565b615c97816027610a57565b90615ca66126f4338094610a57565b15615cb45750505050600190565b6123a2611fc092610a9e615cd0956113f2611f6b956026610a57565b10615cda57600190565b600090565b90615cfb969594939291615cf6612f0c6002611284565b615d08565b9091610685612f20612ef1565b969594939291965050615d1f612b37848489615c8c565b615d3c5785615d338484615d389899615d89565b616b26565b9091565b5033612a5f615d4a60405190565b9283927f01aca06d00000000000000000000000000000000000000000000000000000000845260048401613213565b615d389493929190600080615cdf565b90602691615d9b826113f28386610a57565b93615daa6123a2338097610a57565b819003615dd1575092610a9e612d3a926113f261068596615dcb6000610d16565b96610a57565b929093615de96123a282610a9e866113f28a88610a57565b841015615e0757610a9e612bc2936113f261068597612bb395610a57565b6040517f13be252b000000000000000000000000000000000000000000000000000000008152600490fd5b90615cfb9594939291615e48612f0c6002611284565b50615d3894939291905033616b26565b615d3893929190600080615e32565b90615d38969594939291615e7c600184612ce4565b90615d38969594939291615e91600185612ce4565b6164b5565b7fffffffff000000000000000000000000000000000000000000000000000000008116610671565b9050519061068582615e96565b906106569160208183031215615ebe57615ee3600080fd5b615ebe565b73ffffffffffffffffffffffffffffffffffffffff9091168152610656926080820192615f3291906154a8905b73ffffffffffffffffffffffffffffffffffffffff166020850152565b60608183039101526000815260200190565b6142876142816106569263ffffffff1690565b1561063857565b615f68601a6142f1565b7f5374616b657220616464726573732070726f787920434845434b000000000000602082015290565b610656615f5e565b615fa360116142f1565b7f4265666f7265206163636f756e74696e67000000000000000000000000000000602082015290565b610656615f99565b615fde60066142f1565b7f4445445543540000000000000000000000000000000000000000000000000000602082015290565b610656615fd4565b61601960106142f1565b7f4166746572206163636f756e74696e6700000000000000000000000000000000602082015290565b61065661600f565b61605460066142f1565b7f44454c4554450000000000000000000000000000000000000000000000000000602082015290565b61065661604a565b61608f600f6142f1565b7f555044415445204558495354494e470000000000000000000000000000000000602082015290565b610656616085565b6160ca601c6142f1565b7f41667465725570646174654578697374696e67446573745374616b6500000000602082015290565b6106566160c0565b61610560226142f1565b7f4265666f726555706461746552656365697665725374616b654c69717569646960208201527f7479000000000000000000000000000000000000000000000000000000000000604082015290565b6106566160fb565b61616660216142f1565b7f416674657255706461746552656365697665725374616b654c6971756964697460208201527f7900000000000000000000000000000000000000000000000000000000000000604082015290565b61065661615c565b6161c760226142f1565b7f4265666f726555706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b6106566161bd565b61622860106142f1565b7f455854454e442054494d455354414d5000000000000000000000000000000000602082015290565b61065661621e565b61626360226142f1565b7f57697468696e55706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b610656616259565b6162c460216142f1565b7f416674657255706461746552656365697665725374616b6554696d657374616d60208201527f7000000000000000000000000000000000000000000000000000000000000000604082015290565b6106566162ba565b616325600a6142f1565b7f435245415445204e455700000000000000000000000000000000000000000000602082015290565b61065661631b565b61636060156142f1565b7f6265666f726520637265617465206e6577206b656b0000000000000000000000602082015290565b610656616356565b61639b60146142f1565b7f616674657220637265617465206e6577206b656b000000000000000000000000602082015290565b610656616391565b6163d6601b6142f1565b7f555044415445205245574152445320414e442042414c414e4345530000000000602082015290565b6106566163cc565b61641160136142f1565b7f43414c4c204f4e4c4f434b524543454956454400000000000000000000000000602082015290565b610656616407565b61065660006142f1565b610656616442565b61645e60236142f1565b7f56657279206e6963652c2049206c696b652c206772656174207375636365737360208201527f2121210000000000000000000000000000000000000000000000000000000000604082015290565b610656616454565b5090959492939260009150863b6164ce611fc084610d16565b11616a45575b6164de8588614da3565b6164e9849294611ef4565b9173ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff8716148015616a10575b6169e457616532610656606087015190565b42101580156169c9575b615b00576040850191616550610656845190565b881180156169b7575b61698c57876106569361661b9561658b6152408f8c90610a9e61657e601d9283610a57565b612bc289612bbd83611284565b8d616595816126e6565b6165b473ffffffffffffffffffffffffffffffffffffffff8416611e04565b03616953575b506165ca611e04611dea8c6126e6565b0361692a575b6165e9826165dc835190565b6165e4615fcc565b616bcc565b8c6165f5610656835190565b83036168f457505050615a9261313691616610614e8e61607d565b6148a98d6022610a57565b810361670857926166f89261666f61667f989361664b6166fd97616640614e8e61634e565b614e5d614e8e616389565b602081015190846166686080616662606085015190565b93015190565b9285616d55565b9182988993614e5d614e8e6163c4565b61668a614e8e6163ff565b6166996001615a988187612ce4565b7fd8413caab9b66d88aed167bb4f6b308542a6953a6a54e22f67c5271d34ef97be6166c385610946565b90886166ce85610946565b936166dc876114f260405190565b0390a36166ea614e8e61643a565b6166f261644c565b92616f65565b615f57565b611fc0614e8e6164ad565b828461685c8399946168536060616762816166fd9b6167b36167c26167ba60026166f89f614e0b908f6167496148a991616743614e8e6160b8565b83614da3565b9781996167768a846167688f6167626040859b99015190565b92015190565b906167716160f3565b616c40565b61679461678c88614e0b886148a9886022610a57565b614df0616154565b612bc2876167a7876148a9876022610a57565b500191612cc183611284565b6022610a57565b614df06161b5565b6167ed6167cf8484015190565b6167df611fc0610656878c015190565b106167e8616216565b616b5c565b6168076167fa8484015190565b88850151906165e4616216565b8982886168148683015190565b616824611fc06106568985015190565b10616861575b5084015161684e92509050616845611fc0610656868b015190565b106167e8616313565b015190565b906165e4616313565b61667f565b6168eb936148a96168d56108116168e48a6168dd966168be6168b18360049b61688b614e8e616251565b61684e6168988383015190565b6168a8611fc0610656868a015190565b106167e86162b2565b82840151906165e46162b2565b61684e8a60036168dd8a6148a96168d58888015190565b946022610a57565b5001612ae8565b429061219f565b3889828861682a565b9061242d6002616913613136966148a9616922966167b3614e8e616007565b5001612bc285612bbd83611284565b6165e4616042565b61694e616941601f61693b8c6126e6565b90610a57565b612bc284612cc183611284565b6165d0565b6169798161696e616966616986946126e6565b614dbd615f91565b61693b601f916126e6565b612bc285612bbd83611284565b8d6165ba565b6040517f2c5211c6000000000000000000000000000000000000000000000000000000008152600490fd5b506169c182610d16565b881115616559565b506169d460216126dc565b6169de6001612fca565b1461653c565b6040515b7f1e4ec46b000000000000000000000000000000000000000000000000000000008152600490fd5b5073ffffffffffffffffffffffffffffffffffffffff8a1673ffffffffffffffffffffffffffffffffffffffff871614616520565b616ad8616a8888602088616a5b61203084610946565b8888634fb0710595616a6c60405190565b97889586948593616a7d8b60e01b90565b855260048501615ee8565b03925af1918215616b19575b600092616add575b50616aac614287616ad292615f44565b917fffffffff000000000000000000000000000000000000000000000000000000001690565b14615f57565b6164d4565b616ad2919250614287616b09616aac9260203d8111616b12575b616b018183611c1e565b810190615ecb565b93925050616a9c565b503d616af7565b616b21611f27565b616a94565b615d389493929190600080615e67565b92916020616b53610685936040870190878203600089015261353c565b94019015159052565b90614f10610685926143e6616b7060405190565b9384926004602085017fc3b5563500000000000000000000000000000000000000000000000000000000815201616b36565b604090610de5616bc4610685959796946060840190848203600086015261353c565b966020830152565b614f10906143e661068594616be060405190565b9485936004602086017fca47c4eb00000000000000000000000000000000000000000000000000000000815201616ba2565b610de5610685946154a8616c38606095999896996080860190868203600088015261353c565b986020850152565b6143e661068594614f109394616c5560405190565b9586946004602087017fa7a8785300000000000000000000000000000000000000000000000000000000815201616c12565b616c9160106142f1565b7f435245415445204e4557204b454b494400000000000000000000000000000000602082015290565b610656616c87565b92616cdf60206106a894616cdf601488616cdf859b9a8699613499565b01918252565b906152146106859280549068010000000000000000821015616d0d575b600182018155611241565b616d15611bee565b616d02565b616d2460196142f1565b7f435245415445204e4557204b454b4944202d2050555348454400000000000000602082015290565b610656616d1a565b9493616dee90614883616df395616d6a600090565b50616d76614e8e616cba565b616de7613786616da7616d8d6123a28d601d610a57565b8c616d9760405190565b9384928c8c602086019485616cc2565b616db9616db2825190565b9160200190565b2096614860616dcf6106568a9d6167b38c614ec7565b97616de0616ddb61480f565b9a8b52565b60208a0152565b6060860152565b616ce5565b610685614e8e616d4d565b616e0860176142f1565b7f436865636b696e67206f6e4c6f636b5265636569766564000000000000000000602082015290565b610656616dfe565b616e4360146142f1565b7f726563656976657220686173206e6f20636f6465000000000000000000000000602082015290565b610656616e39565b616e7e60116142f1565b7f72656365697665722068617320636f6465000000000000000000000000000000602082015290565b610656616e74565b73ffffffffffffffffffffffffffffffffffffffff90911681526106569360808201939092616ee291906154a890615f15565b606081840391015261353c565b616ef960066142f1565b7f747279696e670000000000000000000000000000000000000000000000000000602082015290565b610656616eef565b616f3460066142f1565b7f6661696c65640000000000000000000000000000000000000000000000000000602082015290565b610656616f2a565b600094939192616f7d8483616f78616e31565b6170d0565b600093803b616f8e611fc087610d16565b111561707d5790602091616fa3614e8e616ea7565b616faf61203082610946565b908663c42d8b9595616fdf616fc360405190565b98899687958694616fd48c60e01b90565b865260048601616eaf565b03925af16000928161705d575b506170395750506001616ffc5750565b6170046142fe565b90617010614e8e616f5d565b617024611fc061701e845190565b92610d16565b03617031576040516169e8565b805190602001fd5b616aac91939450617059925061428790617054614e8e616f22565b615f44565b1490565b61707691935060203d8111616b1257616b018183611c1e565b9138616fec565b50505050509050611e28614e8e616e6c565b6040906130946170b1610685959796946060840190848203600086015261353c565b73ffffffffffffffffffffffffffffffffffffffff9097166020830152565b614f10906143e6610685946170e460405190565b9485936004602086017ffcec75e00000000000000000000000000000000000000000000000000000000081520161708f56fea26469706673582212209b5914c0f92f53a4403ee7e99d347f00b6158e3f287d526825816777b7fa699964736f6c63430008110033a26469706673582212200546f84a7e03531a67629f583180ef8dbfce387edba75d5de5a8c8cd09d27f0264736f6c63430008110033",
    "sourceMap": "936:12055:80:-:0;;;;;;-1:-1:-1;936:12055:80;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;936:12055:80;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;936:12055:80;;;;;;;-1:-1:-1;;;;;936:12055:80;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;1138:42;;;;:::i;:::-;1213;;;;:::i;:::-;1321:51;1329:42;1321:51;;:::i;:::-;1410:42;;;;:::i;:::-;1544:65;;1566:42;1544:65;:::i;:::-;;;:::i;:::-;1664:51;1672:42;1664:51;;:::i;:::-;1758;1766:42;1758:51;;:::i;:::-;1845;1853:42;1845:51;;:::i;:::-;1934;1942:42;1934:51;;:::i;:::-;2012:42;;;;:::i;:::-;2353:51;2361:42;2353:51;;:::i;:::-;2464;2472:42;2464:51;;:::i;:::-;2608:49;;2614:42;2608:49;:::i;:::-;;;:::i;:::-;2692:51;2700:42;2692:51;;:::i;:::-;2778:49;;2784:42;2778:49;:::i;:::-;;;:::i;:::-;2864:51;2872:42;2864:51;;:::i;:::-;2975:42;;;;:::i;:::-;3057:51;3065:42;3057:51;;:::i;:::-;3147;3155:42;3147:51;;:::i;:::-;3234:42;;;;:::i;:::-;936:12055::o;365:92:11:-;;320:43;115:1185:1;91:4525:10;15938:4423:5;147:15741;120:3862:4;117:7236:3;;:::i;936:12055:80:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;715:15435:0:-;1594:4;;;;:::i",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610156200001a575b62000018600080fd5b005b60003560e01c806309dacc0414620002b45780630a9254e414620002a95780630d199eaa146200029e5780631895c4a714620002935780632cdacb50146200028857806331f4f95c146200027d5780633fb847b3146200027257806355c287521462000267578063663eeb3d146200025c57806366843cba14620002515780636fa8936414620002465780637495ce11146200023b5780638c1eda2b14620002305780638c7c9e0c14620002255780638e8f4a9d146200021a57806394112dba146200020f5780639bb2eb2b14620002045780639f5f052014620001f9578063a45b686a14620001ee578063a8848cda14620001e3578063ba414fa614620001d8578063bfe1092814620001cd578063c09cec7714620001c2578063c291904014620001b7578063c7b1927114620001ac578063d558358d14620001a1578063ddf42c0d1462000196578063fa7626d4146200018b5763fb47e3a2036200000f576200018562000ab5565b6200000f565b506200018562000a75565b506200018562000a19565b5062000185620009d9565b50620001856200099d565b50620001856200096b565b50620001856200092b565b5062000185620008eb565b506200018562000899565b506200018562000867565b506200018562000827565b5062000185620007e7565b5062000185620007a7565b506200018562000767565b506200018562000727565b5062000185620006e7565b5062000185620006a7565b506200018562000667565b50620001856200061a565b506200018562000581565b506200018562000541565b506200018562000501565b5062000185620004c1565b506200018562000481565b506200018562000441565b506200018562000401565b5062000185620003c1565b506200018562000380565b50620001856200033d565b600080fd5b6000910312620002d057565b620002d9600080fd5b565b620002fe916008021c5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b90620002fe9154620002db565b620002fe6000602862000301565b6200032790620002e5565b9052565b602081019291620002d991906200031c565b503462000371575b62000352366004620002c4565b6200036d620003606200030e565b604051918291826200032b565b0390f35b6200037a600080fd5b62000345565b5034620003a4575b62000395366004620002c4565b6200039f62001586565b604051005b620003ad600080fd5b62000388565b620002fe6000601d62000301565b5034620003e4575b620003d6366004620002c4565b6200036d62000360620003b3565b620003ed600080fd5b620003c9565b620002fe6000601e62000301565b503462000424575b62000416366004620002c4565b6200036d62000360620003f3565b6200042d600080fd5b62000409565b620002fe6000602062000301565b503462000464575b62000456366004620002c4565b6200036d6200036062000433565b6200046d600080fd5b62000449565b620002fe6000601962000301565b5034620004a4575b62000496366004620002c4565b6200036d6200036062000473565b620004ad600080fd5b62000489565b620002fe6000601762000301565b5034620004e4575b620004d6366004620002c4565b6200036d62000360620004b3565b620004ed600080fd5b620004c9565b620002fe6000602162000301565b503462000524575b62000516366004620002c4565b6200036d62000360620004f3565b6200052d600080fd5b62000509565b620002fe6000601862000301565b503462000564575b62000556366004620002c4565b6200036d6200036062000533565b6200056d600080fd5b62000549565b620002fe6000601c62000301565b5034620005a4575b62000596366004620002c4565b6200036d6200036062000573565b620005ad600080fd5b62000589565b620002fe6000601a62000301565b620002e5620002fe620002fe9273ffffffffffffffffffffffffffffffffffffffff1690565b620002fe90620005c1565b620002fe90620005e7565b6200032790620005f2565b602081019291620002d99190620005fd565b50346200064a575b6200062f366004620002c4565b6200036d6200063d620005b3565b6040519182918262000608565b62000653600080fd5b62000622565b620002fe6000601b62000301565b50346200068a575b6200067c366004620002c4565b6200036d6200036062000659565b62000693600080fd5b6200066f565b620002fe6000601262000301565b5034620006ca575b620006bc366004620002c4565b6200036d6200063d62000699565b620006d3600080fd5b620006af565b620002fe6000601f62000301565b50346200070a575b620006fc366004620002c4565b6200036d62000360620006d9565b62000713600080fd5b620006ef565b620002fe6000601362000301565b50346200074a575b6200073c366004620002c4565b6200036d6200063d62000719565b62000753600080fd5b6200072f565b620002fe6000602962000301565b50346200078a575b6200077c366004620002c4565b6200036d6200036062000759565b62000793600080fd5b6200076f565b620002fe6000601662000301565b5034620007ca575b620007bc366004620002c4565b6200036d6200036062000799565b620007d3600080fd5b620007af565b620002fe6000602662000301565b50346200080a575b620007fc366004620002c4565b6200036d6200063d620007d9565b62000813600080fd5b620007ef565b620002fe6000602762000301565b50346200084a575b6200083c366004620002c4565b6200036d6200036062000819565b62000853600080fd5b6200082f565b620002fe6000602462000301565b50346200088a575b6200087c366004620002c4565b6200036d6200063d62000859565b62000893600080fd5b6200086f565b5034620008ce575b620008ae366004620002c4565b6200036d620008bc62000dd8565b60405191829182901515815260200190565b620008d7600080fd5b620008a1565b620002fe6000602a62000301565b50346200090e575b62000900366004620002c4565b6200036d62000360620008dd565b62000917600080fd5b620008f3565b620002fe6000601562000301565b50346200094e575b62000940366004620002c4565b6200036d620003606200091d565b62000957600080fd5b62000933565b620002fe6000602262000301565b50346200098e575b62000980366004620002c4565b6200036d6200063d6200095d565b62000997600080fd5b62000973565b5034620009bc575b620009b2366004620002c4565b6200039f620029bd565b620009c5600080fd5b620009a5565b620002fe6000602362000301565b5034620009fc575b620009ee366004620002c4565b6200036d62000360620009cb565b62000a05600080fd5b620009e1565b620002fe6000602562000301565b503462000a3c575b62000a2e366004620002c4565b6200036d6200036062000a0b565b62000a45600080fd5b62000a21565b620002fe916008021c5b60ff1690565b90620002fe915462000a4b565b620002fe60008062000a5b565b503462000a98575b62000a8a366004620002c4565b6200036d620008bc62000a68565b62000aa1600080fd5b62000a7d565b620002fe6000601462000301565b503462000ad8575b62000aca366004620002c4565b6200036d6200036062000aa7565b62000ae1600080fd5b62000abd565b620002fe9060081c62000a55565b620002fe905462000ae7565b620002fe620002fe620002fe9290565b620002fe9062000b01565b620002e5620002fe620002fe9290565b62000b5862000b52620002fe9273ffffffffffffffffffffffffffffffffffffffff1690565b60601b90565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690565b620002fe9060601c620005c1565b620002fe9062000b7d565b620002fe62000bd962000bd362000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b62000b1c565b62000b2c565b62000b8b565b916020620002d992949362000bfd604082019660008301906200031c565b0152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111762000c9a57604052565b62000ca462000c29565b604052565b60005b83811062000cbd5750506000910152565b818101518382015260200162000cac565b62000cf362000ce99260209262000ce3815190565b94859290565b9384910162000ca9565b0190565b019062000cce565b90620002d962000d0e60405190565b928362000c59565b62000cf360209167ffffffffffffffff811162000d5557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b62000c0162000c29565b9062000d7562000d6f8362000d16565b62000cff565b918252565b3d1562000d975762000d8c3d62000d5f565b903d6000602084013e565b606090565b8015155b03620002bf57565b90505190620002d98262000d9c565b90620002fe916020818303121562000da85762000dd2600080fd5b62000da8565b62000de4600062000af5565b1562000df657620002fe600062000af5565b60008062000e0362000f09565b62000e0c575090565b80915062000e1962000b96565b7f667f9d70000000000000000000000000000000000000000000000000000000008262000ed262000edf7f6661696c6564000000000000000000000000000000000000000000000000000062000e9262000e7260405190565b809262000e8560208301918a8362000bdf565b9081038252038262000c59565b6040519283916020830196878062000cf7600492620002fe95947fffffffff00000000000000000000000000000000000000000000000000000000169052565b8581038252038262000c59565b51925af150620002fe62000ef262000d7a565b602062000efd825190565b81830101910162000db7565b600062000f168162000b01565b5062000f4062000f3c737109709ecfa91a80626ff3989d68f67f5b1dd12d3b9262000b01565b9190565b1190565b620002fe62000f7762000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b620005e7565b620002fe62000f8b62000f44565b620005f2565b62000da081620002e5565b90505190620002d98262000f91565b90620002fe916020818303121562000f9c5762000fc6600080fd5b62000f9c565b620003279062000b01565b602081019291620002d9919062000fcc565b506040513d6000823e3d90fd5b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b906200102c620002fe6200103492620005f2565b825462000ff6565b9055565b620002fe90620002e5565b620002fe905462001038565b916020620002d99294936200106d604082019660008301906200031c565b019062000fcc565b620002fe916040820191906200108d9082906200031c565b6020818303910152600581527f416c696365000000000000000000000000000000000000000000000000000000602082015260400190565b620002fe91604082019190620010dd9082906200031c565b6020818303910152600381527f426f620000000000000000000000000000000000000000000000000000000000602082015260400190565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6200116860019162001155815490565b8410156200117157600052602060002090565b91020190600090565b6200117b62001115565b600052602060002090565b919060086200100e910291620011af73ffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190620011c9620002fe6200103493620005f2565b90835462001186565b90620011fe620002d9928054906801000000000000000082101562001205575b60018201815562001145565b90620011b4565b6200120f62000c29565b620011f2565b919060086200100e910291620011af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b91906200125f620002fe620010349362000b01565b90835462001215565b9062001293620002d99280549068010000000000000000821015620012055760018201815562001145565b906200124a565b9062000cf3816020936200031c565b90620012d1620012c5620012bb845490565b8084529260200190565b92600052602060002090565b9060005b818110620012e35750505090565b9091926200130962001302600192620012fc8762001043565b6200129a565b9460010190565b929101620012d5565b620002fe9081565b620002fe905462001312565b9062001338620012c5620012bb845490565b9060005b8181106200134a5750505090565b9091926200136b6200130260019262001363876200131a565b815260200190565b9291016200133c565b979694620013d760c095620013c8620013f596620013b9620013e696620002d99c988f620013ab60e082019360008301906200031c565b6020818403910152620012a9565b8d810360408f015290620012a9565b908b820360608d015262001326565b9089820360808b0152620012a9565b9087820360a0890152620012a9565b9401906200031c565b90813b60006200140e8262000d5f565b9360208501903c565b6200143c62000c0160209362000cf39362001430815190565b80835293849260200190565b9586910162000ca9565b91620002fe9262001460604082019360008301906200031c565b602081840391015262001417565b620014ab620002d994620014a060609498979562001495608086019a60008701906200031c565b60208501906200031c565b60408301906200031c565b01906200031c565b62000a55620002fe620002fe9290565b6200032790620014b3565b602081019291620002d99190620014c3565b15620014e857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6372656174655661756c74206661696c656400000000000000000000000000006044820152606490fd5b62001553600762000d5f565b7f4d795661756c7400000000000000000000000000000000000000000000000000602082015290565b620002fe62001547565b620017ed60006200159a62000f8b62000f7d565b6200199163ffa1864962001612620015f360207fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef620015d860405190565b80938192620015e78860e01b90565b83526004830162000fd7565b0381885afa90811562001fd9575b869162001fb6575b50601462001018565b6200185f6200197d63c88a5e6d926200162c601462001043565b906200166a886b204fce5e3e2502611000000080948a3b1562001ef1575b6040515b93849283926200165e8c60e01b90565b8452600484016200104f565b0381838c5af1801562001fa6575b62001f85575b506200173863c657c718918980620016c58b6200169c601462001043565b813b1562001f76575b604051948580948193620016b98c60e01b90565b83526004830162001075565b03925af1801562001f66575b62001f45575b506020620015e77feeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef92620017196200170e60405190565b948593849360e01b90565b03818c5afa90811562001f35575b8a9162001f00575b50601562001018565b6200175b88836200174a601562001043565b8a3b1562001ef1576040516200164e565b0381838c5af1801562001ee1575b62001ec0575b50876200179962001781601562001043565b92893b1562001eb1575b620017a56200170e60405190565b835260048301620010c5565b0381838b5af1801562001ea1575b62001e80575b5085602c94886200165e620017cb8890565b92620017d730620005f2565b9c8d85620017e7828098620011d2565b620011d2565b62001922602d966200182c620018008990565b620018186200181161303962000b01565b8262001268565b6200182561607262000b01565b9062001268565b620018fd8582602f9962001854620018418c90565b6200184d602a62001043565b90620011d2565b62001882602b9e8f90565b620018766200186f602862001043565b82620011d2565b6200184d602962001043565b6200188e602362001043565b813b1562001e71575b836200165e89620018b786620018ac60405190565b958694859460e01b90565b038183865af1801562001e61575b62001e40575b50620018d8602562001043565b813b1562001e31575b83620018ec60405190565b8096819582946200165e8d60e01b90565b03925af1801562001e21575b62001e00575b508c3b1562001df1575b604051620018ac565b0381838c5af1801562001de1575b62001dc0575b50602e62001945601962001043565b926200195060405190565b9687968c617d77890189811067ffffffffffffffff82111762001db0575b617d7762008bd58b3962001374565b039084f0801562001da0575b601262001018565b63b4d6c78292620019ef83620019ac62000f8b601a62001043565b620019c6620019c062000f8b601262001043565b620013fe565b90853b1562001d91575b6040519384928392620019e38b60e01b90565b84526004840162001446565b038183875af1801562001d81575b62001d60575b5062001a1462001989601a62001043565b62001a6162001a2260405190565b8062001a4d614910820182811067ffffffffffffffff82111762001d50575b614910620042c5843990565b039085f0801562001d40575b601362001018565b8262001a7262000f8b601362001043565b9163f8c8765e9262001ac58362001a8e62000f8b601a62001043565b9562001ad162001a9f601962001043565b62001aab601c62001043565b90863b1562001d31575b604051998a988997889660e01b90565b8652600486016200146e565b03925af1801562001d21575b62001d00575b5062001b2a8262001af962000f8b602262001043565b62001b0d620019c062000f8b601362001043565b90843b1562001cf1575b6040519384928392620019e38a60e01b90565b038183865af1801562001ce1575b62001cc0575b5062001b4f62000f8b602462001043565b90620019e38362001b69620019c062000f8b601362001043565b95833b1562001cb1575b62001b8e62001b8160405190565b9788968795869460e01b90565b03925af1801562001ca1575b62001c75575b5062001c5162001c4962000f8b60008062001bbc602062001043565b62001c0362001c13602462001bd060405190565b9283916004602084017f9abbdf4b00000000000000000000000000000000000000000000000000000000815201620014ce565b6020820181038252038262000c59565b82602082019151925af162001c3262001c2b62000d7a565b91620014e0565b602062001c3d825190565b81830101910162000fab565b602662001018565b620002d962001c6562000f8b602662001043565b62001c6f6200157c565b62002009565b62001c929060005b62001c89818362000c59565b810190620002c4565b3862001ba0565b503d62001c7d565b62001cab62000fe9565b62001b9a565b62001cba600080fd5b62001b73565b62001cda90833d811162001c995762001c89818362000c59565b3862001b3e565b62001ceb62000fe9565b62001b38565b62001cfa600080fd5b62001b17565b62001d1a90833d811162001c995762001c89818362000c59565b3862001ae3565b62001d2b62000fe9565b62001add565b62001d3a600080fd5b62001ab5565b62001d4a62000fe9565b62001a59565b62001d5a62000c29565b62001a41565b62001d7a90843d811162001c995762001c89818362000c59565b3862001a03565b62001d8b62000fe9565b620019fd565b62001d9a600080fd5b620019d0565b62001daa62000fe9565b62001989565b62001dba62000c29565b6200196e565b62001dda90893d811162001c995762001c89818362000c59565b3862001936565b62001deb62000fe9565b62001930565b62001dfa600080fd5b62001919565b62001e1a90863d811162001c995762001c89818362000c59565b386200190f565b62001e2b62000fe9565b62001909565b62001e3a600080fd5b620018e1565b62001e5a90843d811162001c995762001c89818362000c59565b38620018cb565b62001e6b62000fe9565b620018c5565b62001e7a600080fd5b62001897565b62001e9a90883d811162001c995762001c89818362000c59565b38620017b9565b62001eab62000fe9565b620017b3565b62001eba600080fd5b6200178b565b62001eda90893d811162001c995762001c89818362000c59565b386200176f565b62001eeb62000fe9565b62001769565b62001efa600080fd5b6200164a565b62001f26915060203d811162001f2d575b62001f1d818362000c59565b81019062000fab565b386200172f565b503d62001f11565b62001f3f62000fe9565b62001727565b62001f5f908b3d811162001c995762001c89818362000c59565b38620016d7565b62001f7062000fe9565b620016d1565b62001f7f600080fd5b620016a5565b62001f9f90893d811162001c995762001c89818362000c59565b386200167e565b62001fb062000fe9565b62001678565b62001fd2915060203d811162001f2d5762001f1d818362000c59565b3862001609565b62001fe362000fe9565b62001601565b92916020620013f5620002d9936040870190878203600089015262001417565b9062002054620002d99262001c036200202160405190565b9384926004602085017f319af3330000000000000000000000000000000000000000000000000000000081520162001fe9565b6000809162002061815190565b906020016a636f6e736f6c652e6c6f675afa50565b620002fe61018062000cff565b6200208d62002076565b9060608252602080808080808080808080808d0160008152016000815201600081520160008152016000815201600081520160008152016000815201600081520160008152016000905250565b620002fe62002083565b620020f0601762000d5f565b7f696e76616c6964207374616b696e672061646472657373000000000000000000602082015290565b620002fe620020e4565b8062000da0565b90505190620002d98262002123565b90620002fe91602081830312156200212a5762002154600080fd5b6200212a565b62002166601a62000d5f565b7f696e76616c6964206d696e7420616d6f756e7420667278455448000000000000602082015290565b620002fe6200215a565b620021a5600e62000d5f565b7f6672784574682062616c616e6365000000000000000000000000000000000000602082015290565b620002fe62002199565b60209067ffffffffffffffff8111620021ef570290565b620021f962000c29565b0290565b62000d6f620002fe91620021d8565b6200221a62000f3c60029390565b6000915b8383106200222c5750505050565b62002248620022416001928451815260200190565b9260200190565b920191906200221e565b916040620002d99294936200106d606082019660008301906200220c565b6200227c601162000d5f565b7f6672784554484352562062616c616e6365000000000000000000000000000000602082015290565b620002fe62002270565b620022bb602562000d5f565b7f696e76616c6964206d696e696d756d206d696e7420616d6f756e74206672784560208201527f5448435256000000000000000000000000000000000000000000000000000000604082015290565b620002fe620022af565b62002320600f62000d5f565b7f7072652d6164642023206c6f636b730000000000000000000000000000000000602082015290565b620002fe62002314565b916020620002d99294936200106d6040820196600083019062000fcc565b6200237d600762000d5f565b7f6c6f636b4b656b00000000000000000000000000000000000000000000000000602082015290565b620002fe62002371565b620023bc601062000d5f565b7f706f73742d6164642023206c6f636b7300000000000000000000000000000000602082015290565b620002fe620023b0565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116200242d57565b620002d9620023ef565b62002443602262000d5f565b7f73656e6465722073686f756c642068617665206e6577204c6f636b656453746160208201527f6b65000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe62002437565b620024a8602b62000d5f565b7f5265636569766572206265666f726520726563656976696e67207472616e736660208201527f6572312023206c6f636b73000000000000000000000000000000000000000000604082015290565b620002fe6200249c565b9190620002fe906040848203126200252a575b6200252081856200212a565b936020016200212a565b62002533600080fd5b62002514565b62000bfd620002d9946200256760609498979562002560608086019a60008701906200031c565b6020850152565b604083019062000fcc565b6200257e602662000d5f565b7f53656e6465722061667465722073656e64696e67207472616e7366657231202360208201527f206c6f636b730000000000000000000000000000000000000000000000000000604082015290565b620002fe62002572565b620025e3602a62000d5f565b7f526563656976657220416674657220726563656976696e67207472616e73666560208201527f72312023206c6f636b7300000000000000000000000000000000000000000000604082015290565b620002fe620025d7565b62002648601f62000d5f565b7f73656e6465722073686f756c6420686176652073616d652023206c6f636b7300602082015290565b620002fe6200263c565b62002687602062000d5f565b7f72656365697665722073686f756c6420686176652031206d6f7265206c6f636b602082015290565b620002fe6200267b565b6200106d620002d9946200256760609498979562002560608086019a60008701906200031c565b620026ed602c62000d5f565b7f72656365697665722073686f756c64207374696c6c20686176652073616d652060208201527f6e756d626572206c6f636b730000000000000000000000000000000000000000604082015290565b620002fe620026e1565b62002752602a62000d5f565b7f73656e6465722073686f756c64207374696c6c20686176652073616d65206e7560208201527f6d626572206c6f636b7300000000000000000000000000000000000000000000604082015290565b620002fe62002746565b620027b7600b62000d5f565b7f426f7468206b656b496473000000000000000000000000000000000000000000602082015290565b620002fe620027ab565b620027f6601c62000d5f565b7f6661696c656420746f2073656e6420746f2073616d65206b656b496400000000602082015290565b620002fe620027ea565b62002835602662000d5f565b7f53656e6465722061667465722073656e64696e67207472616e7366657232202360208201527f206c6f636b730000000000000000000000000000000000000000000000000000604082015290565b620002fe62002829565b6200289a602162000d5f565b7f526563656976657220706f7374207472616e7366657220322c2023206c6f636b60208201527f7300000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe6200288e565b620028ff602162000d5f565b7f53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b60208201527f7300000000000000000000000000000000000000000000000000000000000000604082015290565b620002fe620028f3565b62002964602362000d5f565b7f52656365697665722073686f756c6420686176652073616d65206e756d206c6f60208201527f636b730000000000000000000000000000000000000000000000000000000000604082015290565b620002fe62002958565b620034c86000620029cd620020da565b62002a3c62002a006020620029e762000f8b602262001043565b63d7b4be2490620029f760405190565b93849260e01b90565b825260049082905afa9081156200392c575b849162003909575b5062002a2b62000f8b601a62001043565b62002a3562002119565b9162003984565b620034b062002a4e62000f8b62000f7d565b916306447d568462002a7d62002a65602362001043565b92863b15620038fa575b62002a896200170e60405190565b8352600483016200032b565b038183885af18015620038ea575b620038c9575b5062002f8a62002df48562002d9962002d7d62002abb601d62001043565b838062002ad1683635c9adc5dea0000062000b01565b9262002adc60405190565b7f5bcb2fc600000000000000000000000000000000000000000000000000000000602082015262002b11816024810162001c03565b84602082019151925af15062002b2662000d7a565b50838062002b35601662001043565b62001c0362002b7f62002b49602362001043565b6040519283916004602084017f70a08231000000000000000000000000000000000000000000000000000000008152016200032b565b82602082019151925af15062002baf62002b9862000d7a565b888601819052805160209081830101910162002139565b9062002bbd60208901928352565b62002bdc62002bca835190565b8262002bd56200218f565b9162003e4f565b62002bf962002be9835190565b62002bf3620021ce565b62004279565b62002c0d62000f8b62000f8b601662001043565b602063095ea7b39162002c21601b62001043565b9062002c57897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9562002c6362001b8160405190565b84526004840162000bdf565b03925af18015620038b9575b62003886575b50602062002c8c62000f8b62000f8b601b62001043565b91630b4c7e4d9262002cbf62002ca36002620021fd565b9262002cb962002cb38b62000b01565b8b860152565b84840152565b62002cde6835ab028ac154b8000098899562002cea62001b8160405190565b84526004840162002252565b03925af1801562003876575b62003855575b5062002d6262002d49602062002d1b62000f8b62000f8b601762001043565b6370a082319062002a7d62002d31602362001043565b9262002d3c60405190565b9586948593849360e01b90565b03915afa90811562003845575b8c916200382557508252565b62002d7962002d6f825190565b62002bf3620022a5565b5190565b62002d888362000b01565b62002d926200230a565b9162003f5f565b602062002dab62000f8b601a62001043565b62002dbb62000f8b602262001043565b9062002dc660405190565b948592839182917fca6df29d0000000000000000000000000000000000000000000000000000000062002a7d565b03915afa91821562003815575b8792620037eb575b5062002e8f9062002e1c60408601938452565b62002e3362002e29845190565b62002bf362002349565b602062002e4562000f8b602262001043565b9163a41ce7e99262002e658b63018b82009562002e7162001b8160405190565b84526004840162002353565b03925af1908115620037db575b8891620037b8575b50610120850152565b62002ea362002e9d620023a6565b6200420f565b62002eba62002eb461012085015190565b620041af565b62002f3a62002f1d602062002ed462000f8b601a62001043565b62002ee462000f8b602262001043565b9062002eef60405190565b938492839182917fca6df29d0000000000000000000000000000000000000000000000000000000062002a7d565b03915afa908115620037a8575b889162003785575b506060850152565b62002f5462002f4a606085015190565b62002bf3620023e5565b62002f8062002f6d62002f68606086015190565b925190565b62002f79600162000b01565b906200241f565b62002bd562002492565b6200327e62002f9c6201518062000b01565b62002fa7816200414d565b62002fee62002fd1602062002fc162000f8b601a62001043565b62002ee462000f8b602462001043565b03915afa90811562003775575b889162003752575b5060c0850152565b6200300862002ffe60c085015190565b62002bf3620024f7565b620030b26200301c62000f8b602262001043565b6040678ac7230489e800006200303762000f8b602462001043565b926200304561012089015190565b8b620030518162000b01565b95620030946200306060405190565b978896879586947f3c62c44f0000000000000000000000000000000000000000000000000000000086526004860162002539565b03925af190811562003742575b88916200371f575b50610140850152565b620030e9620030cc602062002ed462000f8b601a62001043565b03915afa9081156200370f575b8891620036ec575b506080850152565b6200312062003103602062002fc162000f8b601a62001043565b03915afa908115620036dc575b8891620036b9575b5060e0850152565b6200313a62003130608085015190565b62002bf3620025cd565b620031546200314a60e085015190565b62002bf362002632565b6200317362003164608085015190565b606085015162002bd562002671565b6200319d6200318360e085015190565b6200319362002f6d60c087015190565b62002bd5620026b0565b843b15620036aa575b6040517ff48448140000000000000000000000000000000000000000000000000000000081528681600481838a5af180156200369a575b62003679575b50620031f462000f8b602262001043565b6040678ac7230489e800006200320f62000f8b602462001043565b926200321d61012088015190565b8a62010f2c95620032656200323160405190565b978896879586947f3c62c44f00000000000000000000000000000000000000000000000000000000865260048601620026ba565b03925af1801562003669575b62003647575b506200414d565b620032bd62003298602062002fc162000f8b601a62001043565b03915afa90811562003637575b869162003614575b5060e083015162002bd56200273c565b620032fc620032d7602062002ed462000f8b601a62001043565b03915afa90811562003604575b8691620035e1575b50608083015162002bd5620027a1565b620033cd6200331062000f8b602262001043565b6040678ac7230489e800006200332b62000f8b602462001043565b926200333961012087015190565b896200334761014089015190565b95620033566200306060405190565b03925af1908115620035d1575b86916200359c575b506200337a6101608401918252565b6200338862002e9d620027e0565b6200339962002eb461014085015190565b620033a662002eb4825190565b620033bc620033b761014085015190565b915190565b620033c66200281f565b9162003c94565b620034a660e0620034a062003436620033f1602062002ed462000f8b601a62001043565b03915afa9081156200358c575b899162003569575b506200341460a08701918252565b60206200342662000f8b601a62001043565b62002dbb62000f8b602462001043565b03915afa91821562003559575b899262003518575b506200349162002d7991620034636101008901948552565b6200347a62003470825190565b62002bf362002884565b62002d7962003487855190565b62002bf3620028e9565b608087015162002bd56200294e565b92015190565b62002bd5620029b3565b6390c5013b90803b1562003509575b604051620029f7565b8252818381600481015b03925af18015620034f9575b620034e65750565b620002d990600062001c89818362000c59565b6200350362000fe9565b620034de565b62003512600080fd5b620034bf565b62002d7991925062003548620034919160203d811162003551575b6200353f818362000c59565b81019062002139565b9291506200344b565b503d62003533565b6200356362000fe9565b62003443565b62003585915060203d811162003551576200353f818362000c59565b3862003406565b6200359662000fe9565b620033fe565b620035c2915060403d8111620035c9575b620035b9818362000c59565b81019062002501565b906200336b565b503d620035ad565b620035db62000fe9565b62003363565b620035fd915060203d811162003551576200353f818362000c59565b38620032ec565b6200360e62000fe9565b620032e4565b62003630915060203d811162003551576200353f818362000c59565b38620032ad565b6200364162000fe9565b620032a5565b620036629060403d8111620035c957620035b9818362000c59565b5062003277565b6200367362000fe9565b62003271565b6200369390873d811162001c995762001c89818362000c59565b38620031e3565b620036a462000fe9565b620031dd565b620036b3600080fd5b620031a6565b620036d5915060203d811162003551576200353f818362000c59565b3862003118565b620036e662000fe9565b62003110565b62003708915060203d811162003551576200353f818362000c59565b38620030e1565b6200371962000fe9565b620030d9565b6200373b915060403d8111620035c957620035b9818362000c59565b90620030a9565b6200374c62000fe9565b620030a1565b6200376e915060203d811162003551576200353f818362000c59565b3862002fe6565b6200377f62000fe9565b62002fde565b620037a1915060203d811162003551576200353f818362000c59565b3862002f32565b620037b262000fe9565b62002f2a565b620037d4915060203d811162003551576200353f818362000c59565b3862002e86565b620037e562000fe9565b62002e7e565b62002e8f9192506200380d9060203d811162003551576200353f818362000c59565b919062002e09565b6200381f62000fe9565b62002e01565b62003841915060203d811162003551576200353f818362000c59565b8252565b6200384f62000fe9565b62002d56565b620038709060203d811162003551576200353f818362000c59565b62002cfc565b6200388062000fe9565b62002cf6565b620038ab9060203d8111620038b1575b620038a2818362000c59565b81019062000db7565b62002c75565b503d62003896565b620038c362000fe9565b62002c6f565b620038e390853d811162001c995762001c89818362000c59565b3862002a9d565b620038f462000fe9565b62002a97565b62003903600080fd5b62002a6f565b62003925915060203d811162001f2d5762001f1d818362000c59565b3862002a1a565b6200393662000fe9565b62002a12565b60408082526005908201527f4572726f720000000000000000000000000000000000000000000000000000006060820152608060208201819052620002fe9291019062001417565b6200398f82620002e5565b6200399a82620002e5565b03620039a557505050565b620002d992620039e47f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b918291826200393c565b0390a162003a75565b6040808252600a908201527f202045787065637465640000000000000000000000000000000000000000000060608201529190620002d990602060808501620013f5565b6040808252600a908201527f2020202041637475616c0000000000000000000000000000000000000000000060608201529190620002d990602060808501620013f5565b9062003a8181620002e5565b62003a8c83620002e5565b0362003a96575050565b62003b5e9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003acb60405190565b60208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d0000000000000000000000000000000000000000000000000000006060820152608090a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f93849162003b5460405190565b91829182620039ed565b0390a16040519182918262003a31565b0390a1620002d962003bcf565b60409062000bfd620002d9949695939662003b9f606084019860008501906200031c565b6020830152565b9061ff009060081b6200100e565b9062003bc7620002fe6200103492151590565b825462003ba6565b62003bd962000f09565b62003bed575b620002d96001600062003bb4565b60008062003bfa62000b96565b7f70ca10bb000000000000000000000000000000000000000000000000000000008262000ed262003c7e62000e8562000e927f6661696c6564000000000000000000000000000000000000000000000000000062003c6362003c5d600162000b01565b62000b01565b9062003c6e60405190565b93849260208401928b8462003b7b565b51925af15062003c8d62000d7a565b5062003bdf565b81810362003ca157505050565b620002d99262003cd67f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a162003d6a565b6040808252600a908201527f202045787065637465640000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b940152565b6040808252600a908201527f2020202041637475616c0000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b9080820362003d77575050565b62003e3f9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003dac60405190565b60208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d0000000000000000000000000000000000000000000000000000006060820152608090a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9993849162003e3560405190565b9182918262003cdf565b0390a16040519182918262003d27565b81810362003e5c57505050565b620002d99262003e917f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a19080820362003ea1575050565b62003e3f9162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5062003ed660405190565b60208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d0000000000000000000000000000000000000000000000000000000000006060820152608090a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a893849162003e3560405190565b8181111562003f6d57505050565b620002d99262003fa27f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358391620039da60405190565b0390a162004031565b60408082526009908201527f202056616c75652061000000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b60408082526009908201527f202056616c75652062000000000000000000000000000000000000000000000060608201529190620002d990602060808501940152565b818111156200403e575050565b620041069162003b6e917f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506200407360405190565b60208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e7460408201527f5d000000000000000000000000000000000000000000000000000000000000006060820152608090a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8938491620040fc60405190565b9182918262003fab565b0390a16040519182918262003fee565b620002fe62000f8b62000f7762000bcd7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d62000b11565b6000620034d2916200416262000f8b62004116565b62004192836200417863e5d6bf0294426200241f565b93833b15620041a0575b6040519687958694859360e01b90565b835260048301526024820190565b620041a9600080fd5b62004182565b62001c0362002054620002d992620041c660405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b6020808252620002fe9291019062001417565b62001c0362002054620002d9926200422660405190565b9283916004602084017f41304fac00000000000000000000000000000000000000000000000000000000815201620041fc565b9291602062003d22620002d9936040870190878203600089015262001417565b9062002054620002d99262001c036200429160405190565b9384926004602085017fb60e72cc000000000000000000000000000000000000000000000000000000008152016200425956fe60806040523462000027575b6200001562000036565b60405161487c62000094823961487c90f35b62000030600080fd5b6200000b565b6200004062000079565b565b6200005262000052620000529290565b90565b62000052600162000042565b906200005262000052620000759262000042565b9055565b6200008362000055565b6200009081600562000061565b5056fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80630687c4bd1461034c57806317b18c8914610343578063193ba6d11461033a5780632439242a146103315780632a554842146103285780633c62c44f1461031f5780633d18b912146103165780633e0dc34e1461030d5780634ab794a3146103045780634ac032be146102fb5780634e7adf2c146102f25780634f5aefcf146102e95780634fb07105146102e057806351e3fc17146102d75780635eb143ce146102ce578063641a6cd0146102c5578063646780df146102bc5780636a4874a1146102b357806372f702f3146102aa5780637d423446146102a15780638da5cb5b14610298578063923c1d611461028f5780639ce0ff9d146102865780639ec5a8941461027d578063a10d3b3314610274578063a22cb4651461026b578063a41ce7e914610262578063a4698feb14610259578063afcff50f14610250578063b3a408b814610247578063b61aa08c1461023e578063b85efd0614610235578063c42d8b951461022c578063cc64175114610223578063d2fbdc0d1461021a578063d6f1926214610211578063d73792a914610208578063d7b4be24146101ff578063d7c04a46146101f6578063e869565e146101ed5763f8c8765e0361000e576101e86111a7565b61000e565b506101e8611136565b506101e861110c565b506101e86110d6565b506101e86110a0565b506101e8611050565b506101e8610f59565b506101e8610f31565b506101e8610f03565b506101e8610edb565b506101e8610eb3565b506101e8610e4f565b506101e8610e13565b506101e8610dec565b506101e8610da4565b506101e8610d7c565b506101e8610d23565b506101e8610cbb565b506101e8610c73565b506101e8610c37565b506101e8610c0d565b506101e8610bc6565b506101e8610b9c565b506101e8610b54565b506101e8610b2a565b506101e8610af7565b506101e8610ab0565b506101e8610a51565b506101e86109f0565b506101e86107ef565b506101e861070e565b506101e86106e0565b506101e861064b565b506101e8610604565b506101e86105be565b506101e861057d565b506101e86104cc565b506101e86104a1565b506101e8610442565b506101e86103db565b506101e86103a6565b600080fd5b805b0361035557565b905035906103708261035a565b565b919061039690604084820312610399575b61038d8185610363565b93602001610363565b90565b6103a1600080fd5b610383565b50346103ca575b6103c16103bb366004610372565b90612cf2565b604051005b0390f35b6103d2600080fd5b6103ad565b9052565b5034610409575b6103c66103f96103f3366004610372565b90612b3a565b6040519182918290815260200190565b610411600080fd5b6103e2565b600091031261042157565b610370600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b5034610494575b610454366004610416565b6103c67359cfcd384746ec3035299d90782be065e466800b5b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b61049c600080fd5b610449565b50346104bf575b6103c66103f96104b9366004610372565b90612ab5565b6104c7600080fd5b6104a8565b50346104e6575b6104de366004610416565b6103c1611660565b6104ee600080fd5b6104d3565b73ffffffffffffffffffffffffffffffffffffffff811661035c565b90503590610370826104f3565b608081830312610559575b610531828261050f565b926103966105428460208501610363565b936105508160408601610363565b93606001610363565b610561600080fd5b610527565b9081526040810192916103709160200152565b0152565b50346105b1575b61059b61059236600461051c565b929190916133e2565b906103c66105a860405190565b92839283610566565b6105b9600080fd5b610584565b50346105d8575b6105d0366004610416565b6103c1613ca5565b6105e0600080fd5b6105c5565b6103966103966103969290565b61039660246105e5565b6103966105f2565b5034610621575b610616366004610416565b6103c66103f96105fc565b610629600080fd5b61060b565b90610396916020818303121561036357610646600080fd5b610363565b5034610665575b6103c161066036600461062e565b613124565b61066d600080fd5b610652565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600411156106ac57565b610370610672565b90610370826106a2565b610396906106b4565b6103d7906106be565b60208101929161037091906106c7565b5034610701575b6106f2366004610416565b604051806103c66002826106d0565b610709600080fd5b6106e7565b503461072b575b610720366004610416565b6103c66103f9611b03565b610733600080fd5b610715565b80151561035c565b9050359061037082610738565b909182601f8301121561078c575b602082359267ffffffffffffffff841161077f575b01926020830284011161042157565b610787600080fd5b610770565b610794600080fd5b61075b565b91906107d1906040848203126107e2575b6107b48185610740565b9360208101359067ffffffffffffffff82116107d5575b0161074d565b9091565b6107dd600080fd5b6107cb565b6107ea600080fd5b6107aa565b503461080a575b6103c1610804366004610799565b91614717565b610812600080fd5b6107f6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176108af57604052565b6108b761083f565b604052565b906103706108c960405190565b928361086f565b61090d60209167ffffffffffffffff811161091157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b61081761083f565b90826000939282370152565b9291906103709161093d610938836108d0565b6108bc565b948286526020860191838201111561091957610957600080fd5b610919565b906103969181601f82011215610978575b602081359101610925565b610980600080fd5b61096d565b6080818303126109e3575b61099a828261050f565b926103966109ab846020850161050f565b936109b98160408601610363565b9360608101359067ffffffffffffffff82116109d6575b0161095c565b6109de600080fd5b6109d0565b6109eb600080fd5b610990565b5034610a44575b6103c6610a11610a08366004610985565b92919091611ba2565b604051918291827fffffffff00000000000000000000000000000000000000000000000000000000909116815260200190565b610a4c600080fd5b6109f7565b5034610a6b575b6103c1610a6636600461062e565b612ea6565b610a73600080fd5b610a58565b610396916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b906103969154610a78565b61039660006007610a99565b5034610acd575b610ac2366004610416565b6103c661046d610aa4565b610ad5600080fd5b610ab7565b90610396916020818303121561050f57610af2600080fd5b61050f565b5034610b11575b6103c1610b0c366004610ada565b6117f2565b610b19600080fd5b610afe565b61039660006006610a99565b5034610b47575b610b3c366004610416565b6103c661046d610b1e565b610b4f600080fd5b610b31565b5034610b83575b610b66366004610416565b6103c673d533a949740bb3306d119cc777fa900ba034cd5261046d565b610b8b600080fd5b610b5b565b61039660006002610a99565b5034610bb9575b610bae366004610416565b6103c661046d610b90565b610bc1600080fd5b610ba3565b5034610bf5575b610bd8366004610416565b6103c6733432b6a60d23ca0dfca7761b7ab56459d9c964d061046d565b610bfd600080fd5b610bcd565b610396600080610a99565b5034610c2a575b610c1f366004610416565b6103c661046d610c02565b610c32600080fd5b610c14565b5034610c66575b610c49366004610416565b6103c6734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b61046d565b610c6e600080fd5b610c3e565b5034610ca2575b610c85366004610416565b6103c673f403c135812408bfbe8713b5a23a04b3d48aae3161046d565b610caa600080fd5b610c7a565b61039660006003610a99565b5034610cd8575b610ccd366004610416565b6103c661046d610caf565b610ce0600080fd5b610cc2565b9091606082840312610d16575b610396610cff848461050f565b93610d0d8160208601610363565b93604001610363565b610d1e600080fd5b610cf2565b5034610d3e575b6103c1610d38366004610ce5565b916131cb565b610d46600080fd5b610d2a565b919061039690604084820312610d6f575b610d66818561050f565b93602001610740565b610d77600080fd5b610d5c565b5034610d97575b6103c1610d91366004610d4b565b9061328d565b610d9f600080fd5b610d83565b5034610dc2575b6103c66103f9610dbc366004610372565b90612546565b610dca600080fd5b610dab565b90610396916020818303121561074057610de7600080fd5b610740565b5034610e06575b6103c1610e01366004610dcf565b613cdb565b610e0e600080fd5b610df3565b5034610e42575b610e25366004610416565b6103c67341a5881c17185383e19df6fa4ec158a6f4851a6961046d565b610e4a600080fd5b610e1a565b5034610e7e575b610e61366004610416565b6103c673c9acb83ada68413a6aa57007bc720ee2e2b3c46d61046d565b610e86600080fd5b610e56565b919061039690604084820312610ea6575b61038d818561050f565b610eae600080fd5b610e9c565b5034610ece575b6103c1610ec8366004610e8b565b90613217565b610ed6600080fd5b610eba565b5034610ef6575b6103c1610ef0366004610372565b90612c1d565b610efe600080fd5b610ee2565b5034610f24575b6103c6610a11610f1b366004610985565b92919091611e11565b610f2c600080fd5b610f0a565b5034610f4c575b6103c1610f46366004610372565b90612d71565b610f54600080fd5b610f38565b5034610f74575b6103c1610f6e366004610372565b90612e12565b610f7c600080fd5b610f60565b90610fa1610f9a610f90845190565b8084529260200190565b9260200190565b9060005b818110610fb25750505090565b909192610fe5610fde600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460200190565b929101610fa5565b90610ffc610f9a610f90845190565b9060005b81811061100d5750505090565b909192611023610fde6001928651815260200190565b929101611000565b604080825261039693919261104291840190610f81565b916020818403910152610fed565b5034611080575b611062366004610416565b61106a613781565b906103c661107760405190565b9283928361102b565b611088600080fd5b611057565b6103966127106105e5565b61039661108d565b50346110bd575b6110b2366004610416565b6103c66103f9611098565b6110c5600080fd5b6110a7565b61039660006001610a99565b50346110f3575b6110e8366004610416565b6103c661046d6110ca565b6110fb600080fd5b6110dd565b61039660006004610a99565b5034611129575b61111e366004610416565b6103c661046d611100565b611131600080fd5b611113565b5034611150575b6103c161114b366004610ada565b61162f565b611158600080fd5b61113d565b60808183031261119a575b611172828261050f565b92610396611183846020850161050f565b93611191816040860161050f565b9360600161050f565b6111a2600080fd5b611168565b50346111c5575b6103c16111bc36600461115d565b92919091612084565b6111cd600080fd5b6111ae565b156111d957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f21617574685f61646d696e0000000000000000000000000000000000000000006044820152606490fd5b0390fd5b6103709061127e7359cfcd384746ec3035299d90782be065e466800b5b611278335b9173ffffffffffffffffffffffffffffffffffffffff1690565b146111d2565b611393565b61039690610429565b6103969054611283565b6104296103966103969273ffffffffffffffffffffffffffffffffffffffff1690565b61039690611296565b610396906112b9565b9050519061037082610738565b9061039691602081830312156112cb576112f0600080fd5b6112cb565b506040513d6000823e3d90fd5b905051906103708261035a565b90610396916020818303121561130257611327600080fd5b611302565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916103709160200152565b9073ffffffffffffffffffffffffffffffffffffffff905b9181191691161790565b9061138861039661138f926112c2565b8254611356565b9055565b6113c560206113ad6113a86113a8600361128c565b6112c2565b6302fb0c5e906113bc60405190565b93849260e01b90565b825260049082905afa908115611622575b6000916115f4575b506113f8575b6113ef816003611378565b506103706118da565b61145a602061140d6113a86113a8600361128c565b6370a082319061143661141f306112c2565b9261142960405190565b9586948593849360e01b90565b835273ffffffffffffffffffffffffffffffffffffffff1660048301526024820190565b03915afa9081156115e7575b6000916115b9575b5060009061147b826105e5565b8111611522575b506114c4816114976113a86113a8600361128c565b63c00007b090611436836114aa8161128c565b93833b15611515575b6040515b9687958694859360e01b90565b03925af18015611508575b6114db575b50506113e4565b816114fa92903d10611501575b6114f2818361086f565b810190610416565b38806114d4565b503d6114e8565b6115106112f5565b6114cf565b61151d600080fd5b6114b3565b816115336113a86113a8600361128c565b63f3fef3a390611568836115468161128c565b93833b156115ac575b61157361155b60405190565b9788968795869460e01b90565b84526004840161132c565b03925af1801561159f575b156114825761159990823d8411611501576114f2818361086f565b38611482565b6115a76112f5565b61157e565b6115b4600080fd5b61154f565b6115da915060203d81116115e0575b6115d2818361086f565b81019061130f565b3861146e565b503d6115c8565b6115ef6112f5565b611466565b611615915060203d811161161b575b61160d818361086f565b8101906112d8565b386113de565b503d611603565b61162a6112f5565b6113d6565b6103709061123c565b6116557359cfcd384746ec3035299d90782be065e466800b611259565b610370610370611754565b610370611638565b6020809167ffffffffffffffff811161168057020190565b61168861083f565b020190565b9092919261169d61093882611668565b93818552602080860192028301928184116116db575b915b8383106116c25750505050565b602080916116d08486611302565b8152019201916116b5565b6116e3600080fd5b6116b3565b906103969181601f82011215611704575b60208151910161168d565b61170c600080fd5b6116f9565b9061039691602081830312611747575b80519067ffffffffffffffff821161173a575b016116e8565b611742600080fd5b611734565b61174f600080fd5b611721565b61178660006117696113a86113a8600161128c565b63c00007b0906114368361177c306112c2565b936114b760405190565b03925af19081156117bb575b60009161179d575050565b6117b8913d8091833e6117b0818361086f565b810190611711565b50565b6117c36112f5565b611792565b610370906117e97359cfcd384746ec3035299d90782be065e466800b611259565b610370906117fb565b610370906117c8565b61182660006118106113a86113a8600161128c565b63d7400d5690803b15611888575b6040516113bc565b825273ffffffffffffffffffffffffffffffffffffffff85166004830152602490829084905af1801561187b575b611865575b506117b8816004611378565b6118759060006114f2818361086f565b38611859565b6118836112f5565b611854565b611890600080fd5b61181e565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082039182116118d257565b610370611895565b6118ef60206113ad6113a86113a8600361128c565b825260049082905afa908115611af6575b600091611ad8575b5061190f57565b6119b86119226113a86113a8600161128c565b61194b63d9f96e8d9160203093611938856112c2565b9261194260405190565b94859260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8416600483015260249082905afa918215611acb575b600092611aab575b5081926020925061143661199a6113a86113a8600361128c565b916370a0823190506119ab60405190565b9687948593849360e01b90565b03915afa918215611a9e575b600092611a7e575b50818110611a54576000906119e76113a86113a8600361128c565b61156883611a036347e7ef24966119fd8361128c565b956118c5565b95833b15611a47575b611a1861155b60405190565b03925af18015611a3a575b611a2a5750565b6103709060006114f2818361086f565b611a426112f5565b611a23565b611a4f600080fd5b611a0c565b90600090611a686113a86113a8600361128c565b61156883611a0363f3fef3a3966119fd8361128c565b611a9791925060203d81116115e0576115d2818361086f565b90386119cc565b611aa66112f5565b6119c4565b60209250611ac590833d81116115e0576115d2818361086f565b91611980565b611ad36112f5565b611978565b611af0915060203d811161161b5761160d818361086f565b38611908565b611afe6112f5565b611900565b61039660046105e5565b90505190610370826104f3565b906103969160208183031215611b0d57611b32600080fd5b611b0d565b908152604081019291610370916020905b019073ffffffffffffffffffffffffffffffffffffffff169052565b611b7d611b776103969263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b50915050611bae600090565b50611c7661125e611bd36113a87341a5881c17185383e19df6fa4ec158a6f4851a6981565b611c0b63bfff576f91611be46105f2565b906020611bf36113a8896112c2565b638da5cb5b90611c0260405190565b95869260e01b90565b825260049082906000905af1928315611d1f575b600093611cf8575b50611c3d600060209495611c4861155b60405190565b845260048401611b37565b03925af1908115611ceb575b600091611cbd575b5073ffffffffffffffffffffffffffffffffffffffff1690565b03611c9257611c84306112c2565b50610396634fb07105611b64565b6040517fae59d4f4000000000000000000000000000000000000000000000000000000008152600490fd5b611cde915060203d8111611ce4575b611cd6818361086f565b810190611b1a565b38611c5c565b503d611ccc565b611cf36112f5565b611c54565b602093506000611d17611c3d92863d8111611ce457611cd6818361086f565b945050611c27565b611d276112f5565b611c1f565b7fffffffff00000000000000000000000000000000000000000000000000000000811661035c565b9050519061037082611d2c565b906103969160208183031215611d5457611d79600080fd5b611d54565b60005b838110611d915750506000910152565b8181015183820152602001611d81565b611dc261081760209361090d93611db6815190565b80835293849260200190565b95869101611d7e565b73ffffffffffffffffffffffffffffffffffffffff918216815291166020820152610396926080820192909190611e04905b6040830152565b6060818403910152611da1565b9092611e1c846112c2565b92611e26846112c2565b638da5cb5b91611e3560405190565b611e3f8460e01b90565b81526020816004816000875af1908115611f93575b600091611f75575b503b91600092611e72611e6e856105e5565b9190565b1115611f5657611eb86113a8611e976020611ed597611ee095829c506113bc60405190565b825260049082908a905af1908115611f49575b600091611f2c575b506112c2565b9463c42d8b9592611ec860405190565b998a988997889660e01b90565b865260048601611dcb565b03925af1908115611f1f575b600091611ef7575090565b610396915060203d8111611f18575b611f10818361086f565b810190611d61565b503d611f06565b611f276112f5565b611eec565b611f4391508a3d8111611ce457611cd6818361086f565b38611eb2565b611f516112f5565b611eaa565b5050505050505050611f67306112c2565b5061039663c42d8b95611b64565b611f8d915060203d8111611ce457611cd6818361086f565b38611e5c565b611f9b6112f5565b611e54565b6104296103966103969290565b61039690611fa0565b15611fbd57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f616c726561647920696e697400000000000000000000000000000000000000006044820152606490fd5b909160c082840312612077575b6120338383611b0d565b926120418160208501611b0d565b9261204f8260408301611b0d565b926103966120608460608501611b0d565b9361206e8160808601611b0d565b9360a0016112cb565b61207f600080fd5b612029565b61217090839294612095600061128c565b916120b16000936120ab61125e61042987611fad565b14611fb6565b6120bb8184611378565b506120c7866001611378565b6120d2846002611378565b6120dd816003611378565b5060c061212d6121016113a873f403c135812408bfbe8713b5a23a04b3d48aae3181565b83631526fe2760206121156113a88a6112c2565b63e529ee959061212460405190565b96879260e01b90565b825260049082905afa93841561234f575b600094612329575b50906121629161215560405190565b9788958694859360e01b90565b835260048301526024820190565b03925af190811561231c575b60009283926122e6575b50612192826006611378565b61219d836007611378565b6121a6846112c2565b6121af906112c2565b9563095ea7b3937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff976121e160405190565b8080946121ee8960e01b90565b82528b60048301916121ff9261132c565b0381865a94602095f1908882156020996122326113a861156899612258986113a8988f966122d9575b6122c357506112c2565b611568888b61224361155b60405190565b03925af180156122b6575b61229b57506112c2565b9261226561155b60405190565b03925af1801561228e575b6122775750565b6117b89060203d811161161b5761160d818361086f565b6122966112f5565b612270565b6122b190893d811161161b5761160d818361086f565b611eb2565b6122be6112f5565b61224e565b6122b190863d811161161b5761160d818361086f565b6122e16112f5565b612228565b90925061230a915060c03d8111612315575b612302818361086f565b81019061201c565b505050929092612186565b503d6122f8565b6123246112f5565b61217c565b612162929194506123479060203d81116115e0576115d2818361086f565b939091612146565b6123576112f5565b61213e565b1561236357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f21617574680000000000000000000000000000000000000000000000000000006044820152606490fd5b9061039692916123e46123d5600061128c565b6123de3361125e565b1461235c565b906123f792916123f2612612565b612400565b90610370612645565b929190600061240e816105e5565b8211612420575b5050506103706118da565b6020929450612485816124366113a8600661128c565b339061244f863092612447846112c2565b94859161267e565b612479836124636113a86113a8600261128c565b9250636e553f65833b15611515576040516114b7565b83528a60048401611b37565b03925af18015612539575b61251d575b506124c86124a96113a86113a8600161128c565b916317b18c896124d36124bb60405190565b9889968795869460e01b90565b845260048401610566565b03925af1918215612510575b6000926124f0575b50813880612415565b61250991925060203d81116115e0576115d2818361086f565b90386124e7565b6125186112f5565b6124df565b61253390823d8411611501576114f2818361086f565b38612495565b6125416112f5565b612490565b610396919060006123c2565b6103969081565b6103969054612552565b61039660026105e5565b1561257457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061136e565b9061260b61039661138f926105e5565b82546125d3565b61261c6005612559565b612630612627612563565b9182141561256d565b6117b88160056125fb565b61039660016105e5565b61263061263b565b73ffffffffffffffffffffffffffffffffffffffff9182168152911660208201526060810192916103709160400152565b906126cd906126be61037095600495612696866112c2565b506126a46323b872dd611b64565b936126ae60405190565b978895602087019081520161264d565b6020820181038252038361086f565b6127ab565b906126df610938836108d0565b918252565b6126ee60206126d2565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b6103966126e4565b1561272657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b906127b86127c7926112c2565b906127c1612717565b916127fb565b80516127d6611e6e60006105e5565b116127de5750565b8051610370916127f6916020908183010191016112d8565b61271f565b610396929161280a60006105e5565b916128bb565b1561281757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608490fd5b3d156128b6576128ab3d6126d2565b903d6000602084013e565b606090565b906000610396949381926128cd606090565b506128e46128da306112c2565b8390311015612810565b60208101905191855af16128f661289c565b91612962565b1561290357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919260609115612998575050815161297d611e6e60006105e5565b14612986575090565b61039690612993906129a5565b6128fc565b90939261037092506129c8565b3b6129b3611e6e60006105e5565b1190565b602080825261039692910190611da1565b91506129d2825190565b6129df611e6e60006105e5565b11156129ee5750805190602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815290819061123890600483016129b7565b906103969291612a376123d5600061128c565b906123f79291612a45612612565b9291906000612a53816105e5565b8211612a64575050506103706118da565b602092945061248581612a7a6113a8600761128c565b3390612a8b863092612447846112c2565b61247983612a9f6113a86113a8600261128c565b9250637acb7757833b15611515576040516114b7565b61039691906000612a24565b906103969291612ad46123d5600061128c565b906123f79291612ae2612612565b9291906000612af0816105e5565b8211612b01575050506103706118da565b6020929450612b2782612b176113a8600261128c565b33612b21306112c2565b9161267e565b6124c86124a96113a86113a8600161128c565b61039691906000612ac1565b9061037091612b586123d5600061128c565b90612b6a91612b65612612565b612b72565b610370612645565b90600091612b7f836105e5565b8211612b90575050506103706118da565b8290612ba383612b176113a8600261128c565b612bb36113a86113a8600161128c565b6124c88363b85efd06833b15612c10575b612bd061155b60405190565b03925af18015612c03575b612be6575b80612415565b81612bfc92903d10611501576114f2818361086f565b3880612be0565b612c0b6112f5565b612bdb565b612c18600080fd5b612bc4565b9061037091612b46565b9061037091612c396123d5600061128c565b90612b6a91612c46612612565b90600091612c53836105e5565b8211612c64575050506103706118da565b8290612ca882612c776113a8600661128c565b3390612c88873092612447846112c2565b612c9c836124636113a86113a8600261128c565b83528b60048401611b37565b03925af18015612ce5575b612cc9575b50612bb36113a86113a8600161128c565b612cdf90833d8511611501576114f2818361086f565b38612cb8565b612ced6112f5565b612cb3565b9061037091612c27565b9061037091612d0e6123d5600061128c565b90612b6a91612d1b612612565b90600091612d28836105e5565b8211612d39575050506103706118da565b8290612ca882612d4c6113a8600761128c565b3390612d5d873092612447846112c2565b612c9c83612a9f6113a86113a8600261128c565b9061037091612cfc565b9061037091612d8d6123d5600061128c565b90612b6a91612d9a612612565b600090612dad6113a86113a8600161128c565b6124c88363d2fbdc0d833b15612e05575b612dca61155b60405190565b03925af18015612df8575b612de257506103706118da565b612df29060006114f2818361086f565b386113ef565b612e006112f5565b612dd5565b612e0d600080fd5b612dbe565b9061037091612d7b565b61037090612e2d6123d5600061128c565b612b6a90612e39612612565b6020612e4b6113a86113a8600161128c565b9163e44b9fa592611c3d60003395612e6561155b60405190565b03925af18015612e99575b612e7d57506103706118da565b612e949060203d81116115e0576115d2818361086f565b6113ef565b612ea16112f5565b612e70565b61037090612e1c565b61037090612ec06123d5600061128c565b612b6a90612ecc612612565b61300b6000612ee16113a86113a8600161128c565b92602063e44b9fa5913095611c3d612ef8886112c2565b958695612f0761155b60405190565b03925af18015613117575b6130fb575b50612f286113a86113a8600261128c565b90612fab6000633969dfb493612f446113a86113a8600261128c565b906370a08231956020612f5660405190565b8094612f628a60e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8916600483015260249082905afa9283156130ee575b84936130c8575b508361216291833b15611515576040516114b7565b03925af180156130bb575b6130a5575b506020612fce6113a86113a8600661128c565b9163a9059cbb95611436612fe2600061128c565b95612ff36113a86113a8600661128c565b9250612ffe60405190565b9788948593849360e01b90565b03915afa928315613098575b600093613071575b5061156860006020949561303561155b60405190565b03925af18015613064575b61304d57506103706118da565b612e949060203d811161161b5761160d818361086f565b61306c6112f5565b613040565b60209350600061309061156892863d81116115e0576115d2818361086f565b94505061301f565b6130a06112f5565b613017565b6130b59060006114f2818361086f565b38612fbb565b6130c36112f5565b612fb6565b6121629193506130e6859160203d81116115e0576115d2818361086f565b939150612f96565b6130f66112f5565b612f8f565b6131129060203d81116115e0576115d2818361086f565b612f17565b61311f6112f5565b612f12565b61037090612eaf565b9061037092916131406123d5600061128c565b613179565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610370929091604091610579906020830152565b600091926131b3836131916113a86113a8600161128c565b92611a1863a10d3b3391853b156131be575b6040519889978896879560e01b90565b855260048501613145565b6131c6600080fd5b6131a3565b90610370929161312d565b90610370916131e86123d5600061128c565b6000906131fb6113a86113a8600161128c565b6115688363b61aa08c833b15611a4757611a1861155b60405190565b90610370916131d6565b90610370916132336123d5600061128c565b6000906132466113a86113a8600161128c565b6132628363a22cb465833b15611a4757611a1861155b60405190565b845273ffffffffffffffffffffffffffffffffffffffff166004840152151560248301526044820190565b9061037091613221565b906107d195949392916132ad6123d5600061128c565b906132c395949392916132be612612565b61333c565b9091610370612645565b9190610396906040848203126132f1575b6132e88185611302565b93602001611302565b6132f9600080fd5b6132de565b61057961037094611dfd606094989795613335608086019a600087019073ffffffffffffffffffffffffffffffffffffffff169052565b6020850152565b60409461338692600092989794959850506133916133696113a86113a8600161336481613cdb565b61128c565b94633c62c44f9261337960405190565b9a8b988997889660e01b90565b8652600486016132fe565b03925af180156133d5575b60009283916133aa57509190565b90506107d191925060403d81116133ce575b6133c6818361086f565b8101906132cd565b503d6133bc565b6133dd6112f5565b61339c565b6107d193929190600080613297565b9092919261340161093882611668565b938185526020808601920283019281841161343f575b915b8383106134265750505050565b602080916134348486611b0d565b815201920191613419565b613447600080fd5b613417565b906103969181601f82011215613468575b6020815191016133f1565b613470600080fd5b61345d565b90610396916020818303126134ab575b80519067ffffffffffffffff821161349e575b0161344c565b6134a6600080fd5b613498565b6134b3600080fd5b613485565b9190916040818403126134f4575b6134ee6134d360406108bc565b9360006134e08285611b0d565b908601526020809301611302565b90830152565b6134fc600080fd5b6134c6565b9092919261351161093882611668565b938185526040602086019202830192818411613551575b915b8383106135375750505050565b602060409161354684866134b8565b81520192019161352a565b613559600080fd5b613528565b906103969181601f8201121561357a575b602081519101613501565b613582600080fd5b61356f565b90610396916020818303126135bd575b80519067ffffffffffffffff82116135b0575b0161355e565b6135b8600080fd5b6135aa565b6135c5600080fd5b613597565b919082018092116118d257565b906126df61093883611668565b369037565b906103706135ff6135f9846135d7565b93611668565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001602084016135e4565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114613658570190565b61090d611895565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906020809161369d845190565b8110156136ab575b02010190565b6136b3613660565b6136a5565b909291926136c861093882611668565b938185526040602086019202830192818411613708575b915b8383106136ee5750505050565b60206040916136fd84866134b8565b8152019201916136e1565b613710600080fd5b6136df565b906103969181601f82011215613731575b6020815191016136b8565b613739600080fd5b613726565b9061039691602081830312613774575b80519067ffffffffffffffff8211613767575b01613715565b61376f600080fd5b613761565b61377c600080fd5b61374e565b6137a69060006137976113a86113a8600161128c565b6312edb24c9061194260405190565b825260049082905afa918215613c98575b600092613c71575b50613853906137d46113a86113a8600161128c565b3093906137f36000628cc2626137e9886112c2565b936113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa908115613c64575b600091613c4b575b50600061383b6113a86113a8600261128c565b63b277e8f09061384a60405190565b97889260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa948515613c3e575b600095613c1b575b506138ad602061389e6113a86113a8600361128c565b63857cb94a906113bc60405190565b825260049082905afa908115613c0e575b600091613bf0575b506138ec6138e76138de836138d9885190565b6135ca565b88515b906135ca565b6135e9565b9081966139086138e7613901846138d98a5190565b83516138e1565b968792600092613917846105e5565b9a5b6139246103968b5190565b8c1015613a1c578b6139de8c8f61398e6139c18f8f8f908f9561143661199a6113a86113a86139748e6139bb6139b7826139db9f9b816139b18f9e60209f61398e61397485836139969450613690565b5173ffffffffffffffffffffffffffffffffffffffff1690565b938492613690565b9073ffffffffffffffffffffffffffffffffffffffff169052565b50613690565b5190565b99613690565b03915afa918215613a0f575b6000926139ef575b506135ca565b52565b506139e88c61362a565b9b50613919565b613a0891925060203d81116115e0576115d2818361086f565b90386139d5565b613a176112f5565b6139cd565b92959790939650613a5e989a508691949b611436613a406113a86113a8600361128c565b9163dc01f60d9050613a5160405190565b9b8c948593849360e01b90565b03915afa968715613be3575b600097613bc0575b50613a7c856105e5565b995b613a89610396895190565b8b1015613b1e5789613b0d8a6139db613b078f6138e1613aff8f8f8f82613aed6139b18d613996613af996613af3613ae68d9860209b50613aca8a8a613690565b51015173ffffffffffffffffffffffffffffffffffffffff1690565b9586945190565b886135ca565b90613690565b51015190565b968795505190565b8d613690565b50613b178b61362a565b9a50613a7e565b919594939950919550613b30836105e5565b985b613b3d610396875190565b8a1015613bb45788613ba3896139db613b9d8b8f806138e1613b958f8f8f9582613b8f6139b18f613996613af996613af38e6138d96138d99f613b889060209d50613aca8c8c613690565b9788965190565b8a6135ca565b988997505190565b8c613690565b50613bad8a61362a565b9950613b32565b96509650965050505050565b613bdc91973d8091833e613bd4818361086f565b81019061373e565b9538613a72565b613beb6112f5565b613a6a565b613c08915060203d81116115e0576115d2818361086f565b386138c6565b613c166112f5565b6138be565b613c3791953d8091833e613c2f818361086f565b810190613587565b9338613888565b613c466112f5565b613880565b613c5e913d8091833e6117b0818361086f565b38613828565b613c6c6112f5565b613820565b613c919061385392933d8091833e613c89818361086f565b810190613475565b91906137bf565b613ca06112f5565b6137b7565b6103706001613cdb565b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161037091602090611b48565b613d5c575b613ce8614069565b613d2e613d0f6000613d006113a86113a8600161128c565b6312edb24c906113bc60405190565b825260049082905afa908115613d4f575b600091613d36575b506145bb565b610370614361565b613d49913d8091833e613c89818361086f565b38613d28565b613d576112f5565b613d20565b613d6c6113a86113a8600161128c565b613ed130613d8d600063c00007b0613d83846112c2565b956113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff87166004830152602490829084905af1908115613fc5575b600091613fac575b5050613dfa6000613ddb6113a86113a8600261128c565b636b09169590613dee836114aa8161128c565b83528b60048401613caf565b03925af18015613f9f575b613f89575b5073d533a949740bb3306d119cc777fa900ba034cd52906020613e2c836112c2565b94613e36866112c2565b936370a082319483613e4760405190565b8092613e538960e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa908115613f7c575b600091613f5f575b50600097613e95896105e5565b8211613f49575b505050613eba734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b90565b92611436613ec7856112c2565b95612ff3876112c2565b03915afa928315613f3c575b600093613f1c575b50613eef846105e5565b8311613eff575b50505050613ce0565b613f1393613f0d915061128c565b90613fd2565b38808080613ef6565b613f3591935060203d81116115e0576115d2818361086f565b9138613ee5565b613f446112f5565b613edd565b613f579250613f0d8961128c565b388080613e9c565b613f769150843d81116115e0576115d2818361086f565b38613e88565b613f846112f5565b613e80565b613f999060006114f2818361086f565b38613e0a565b613fa76112f5565b613e05565b613fbf913d8091833e6117b0818361086f565b38613dc4565b613fcd6112f5565b613dbc565b6126cd6004926126be61037095613fe8856112c2565b50613ff663a9059cbb611b64565b9261400060405190565b968794602086019081520161132c565b818102929181159184041417156118d257565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b811561405d570490565b614065614023565b0490565b602073c9acb83ada68413a6aa57007bc720ee2e2b3c46d614089816112c2565b614092816112c2565b6313114a9d6140aa6140a360405190565b9160e01b90565b81528481600481855afa908115614354575b600091614337575b5084611436733432b6a60d23ca0dfca7761b7ab56459d9c964d0956140e8876112c2565b936140f2856112c2565b956370a0823192614145614137309461411d61410d876112c2565b9e8f8d6114368b61142960405190565b03915afa90811561432a575b60009161430d575b50614010565b61413f61108d565b90614053565b6000996141518b6105e5565b8211614234575b505050505061417461416960405190565b988993849360e01b90565b0381855afa948515614227575b600095614207575b50614193836105e5565b85116141a1575b5050505050565b602093505061156863a9059cbb926141b88161128c565b936141c561155b60405190565b03925af180156141fa575b6141de575b8080808061419a565b6141f59060203d811161161b5761160d818361086f565b6141d5565b6142026112f5565b6141d0565b61422091955060203d81116115e0576115d2818361086f565b9338614189565b61422f6112f5565b614181565b61425f93889163a9059cbb94505063998cbb4390611436614255600461128c565b92612ffe60405190565b03915afa928315614300575b6000936142d5575b50869161429382611568935061428860405190565b958694859460e01b90565b03818b8b5af180156142c8575b6142ad575b808080614158565b6142c390853d811161161b5761160d818361086f565b6142a5565b6142d06112f5565b6142a0565b611568919350916142936142f68994853d8111611ce457611cd6818361086f565b9492505091614273565b6143086112f5565b61426b565b61432491508a3d81116115e0576115d2818361086f565b38614131565b6143326112f5565b614129565b61434e9150853d81116115e0576115d2818361086f565b386140c4565b61435c6112f5565b6140bc565b61437660206113ad6113a86113a8600361128c565b825260049082905afa9081156145ae575b600091614590575b5061439657565b6143c46143a96113a86113a8600361128c565b3060206370a082316143ba836112c2565b93611c0260405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa928315614583575b60009361455b575b50614425916020916114366144146113a86113a8600161128c565b9163d9f96e8d905061142960405190565b03915afa90811561454e575b600091614530575b50600091614449611e6e846105e5565b148061451f575b6144a0575b5061446a816114976113a86113a8600361128c565b03925af18015614493575b61447d575050565b8161037092903d10611501576114f2818361086f565b61449b6112f5565b614475565b816144b16113a86113a8600361128c565b6347e7ef2490611568836144c48161128c565b93833b15614512575b6144d961155b60405190565b03925af18015614505575b15614455576144ff90823d8411611501576114f2818361086f565b38614455565b61450d6112f5565b6144e4565b61451a600080fd5b6144cd565b50614529826105e5565b8111614450565b614548915060203d81116115e0576115d2818361086f565b38614439565b6145566112f5565b614431565b60209193509161457a61442593833d81116115e0576115d2818361086f565b939150916143f9565b61458b6112f5565b6143f1565b6145a8915060203d811161161b5761160d818361086f565b3861438f565b6145b66112f5565b614387565b60006145c6816105e5565b925b6145d3610396845190565b8410156146ab576145e76139748585613690565b614604733432b6a60d23ca0dfca7761b7ab56459d9c964d061125e565b0361461a575b6146138461362a565b93506145c8565b614632602061140d6113a86113a86139748989613690565b03915afa90811561469e575b600091614680575b50614650836105e5565b811161465d575b5061460a565b61467a906146716113a86139748888613690565b613f0d8561128c565b38614657565b614698915060203d81116115e0576115d2818361086f565b38614646565b6146a66112f5565b61463e565b92505050565b909291926146c161093882611668565b93818552602080860192028301928184116146ff575b915b8383106146e65750505050565b602080916146f4848661050f565b8152019201916146d9565b614707600080fd5b6146d7565b6103969136916146b1565b9161473291613d2e93614737575b61472d614069565b61470c565b6145bb565b6147476113a86113a8600161128c565b600063c00007b09161475e8230946137e9866112c2565b825273ffffffffffffffffffffffffffffffffffffffff85166004830152602490829084905af1908115614839575b8391614820575b50506147a66113a86113a8600261128c565b636b09169593506147cf836147ba8161128c565b95833b15614813575b6147da61155b60405190565b845260048401613caf565b03925af18015614806575b6147f0575b50614725565b6148009060006114f2818361086f565b386147ea565b61480e6112f5565b6147e5565b61481b600080fd5b6147c3565b614833913d8091833e6117b0818361086f565b38614794565b6148416112f5565b61478d56fea2646970667358221220af541b3c14dd6b5ddc5ec2534ae905d970eb028282aefe7aacdd1f55b805c25464736f6c6343000811003360c0604052346200005c575b620000266200001962000386565b9594909493919362000445565b60405161714c62000c2b82396080518181816125c501528181612761015281816127fc015261296e015260a05181505061714c90f35b62000065600080fd5b6200000b565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000a957604052565b620000b362000070565b604052565b90620000cf620000c760405190565b928362000087565b565b6001600160a01b031690565b90565b6001600160a01b0381165b036200006b57565b90505190620000cf82620000e0565b60209081906001600160401b0381116200011b57020190565b6200012562000070565b020190565b90929192620001436200013d8262000102565b620000b8565b938185526020808601920283019281841162000186575b915b8383106200016a5750505050565b602080916200017a8486620000f3565b8152019201916200015c565b6200018f600080fd5b6200015a565b90620000dd9181601f82011215620001b4575b6020815191016200012a565b620001bd600080fd5b620001a8565b80620000eb565b90505190620000cf82620001c3565b90929192620001ec6200013d8262000102565b93818552602080860192028301928184116200022f575b915b838310620002135750505050565b60208091620002238486620001ca565b81520192019162000205565b62000238600080fd5b62000203565b90620000dd9181601f820112156200025d575b602081519101620001d9565b62000266600080fd5b62000251565b60e08183031262000377575b620002848282620000f3565b92620002a683602084015160018060401b03811162000368575b840162000195565b92620002c881604085015160018060401b0381116200034a575b850162000195565b92620002ea82606083015160018060401b03811162000359575b83016200023e565b92620000dd6200030f84608085015160018060401b0381116200034a57850162000195565b93620003318160a086015160018060401b0381116200033b575b860162000195565b9360c001620000f3565b62000344600080fd5b62000329565b62000353600080fd5b620002c0565b62000362600080fd5b620002e2565b62000371600080fd5b6200029e565b62000380600080fd5b62000278565b620003a962007d77803803806200039d81620000b8565b9283398101906200026c565b90919293949596565b620000dd90620000d1906001600160a01b031682565b620000dd90620003b2565b620000dd90620003c8565b90600160281b600160c81b039060281b5b9181191691161790565b906200040d620000dd6200041592620003d3565b8254620003de565b9055565b906001600160a01b0390620003ef565b906200043d620000dd6200041592620003d3565b825462000419565b620004519650620008ee565b6200047c62000474734659d5ff63a1e1edd6d5dd9cc315e063c95947d0620003d3565b6021620003f9565b620004a76200049f73f43211935c781d5ca1a41d2041f397b8a7366c7a620003d3565b602362000429565b620004d2620004ca73a1f8a6807c402e4a15ef4eba36528a3fed24e577620003d3565b602462000429565b620000cf620004f5735f4ec3df9cbd43714fe2740f5e3616155c5b8419620003d3565b602562000429565b620000dd620000dd620000dd9290565b9060001990620003ef565b906200052c620000dd6200041592620004fd565b82546200050d565b50634e487b7160e01b600052601160045260246000fd5b620000cf62000534565b9160001960089290920291821b911b620003ef565b91906200057f620000dd6200041593620004fd565b90835462000555565b620000cf916000916200056a565b818110620005a2575050565b80620005b2600060019362000588565b0162000596565b9091828110620005c857505050565b620000cf9290620005e0905b92600052602060002090565b908101910162000596565b90620000cf916801000000000000000082116200060f575b805490828155620005b9565b6200061962000070565b62000603565b600162000653620005d462000632855190565b94838060401b03861162000690575b6200064d8686620005eb565b60200190565b92049160005b838110620006675750505050565b600190602062000682620000dd86516001600160a01b031690565b940193818401550162000659565b6200069a62000070565b62000641565b90620000cf916200061f565b818110620006b8575050565b80620006c8600060019362000588565b01620006ac565b9091828110620006de57505050565b620000cf9290620006ef90620005d4565b9081019101620006ac565b90620000cf916801000000000000000082116200071e575b805490828155620006cf565b6200072862000070565b62000712565b60016200075c620005d462000741855190565b94838060401b03861162000790575b6200064d8686620006fa565b92049160005b838110620007705750505050565b600190602062000782620000dd865190565b940193818401550162000762565b6200079a62000070565b62000750565b90620000cf916200072e565b6001906000198114620007bd570190565b620007c762000534565b0190565b50634e487b7160e01b600052603260045260246000fd5b9060208091620007f0845190565b811015620007ff575b02010190565b62000809620007cb565b620007f9565b906200081b90620003d3565b600052602052604060002090565b6200084c60019162000839815490565b8410156200085557600052602060002090565b91020190600090565b6200085f620007cb565b600052602060002090565b9062000896620000cf92805490680100000000000000008210156200089d575b60018201815562000829565b906200056a565b620008a762000070565b6200088a565b9060ff90620003ef565b90620008ca620000dd6200041592151590565b8254620008ad565b620000dd62093a80620004fd565b919082018092116200054b57565b94620009d9620009e99493956200090b620009e194999862000b0b565b6200092a73c8418af6358ffdda74e09ca9cc3fe03ca6adc5b0620003d3565b60805273853d955acef822db058eb8505911ed77f175b99e60a052620009c4671bc16d674ec800006200095d81620004fd565b6200096a81600662000518565b6200097b6301e13380600762000518565b6200098b62091050600862000518565b620009bb673782dace9d90000091620009a483620004fd565b93620009b285600962000518565b50600a62000518565b50600b62000518565b620009d1896010620006a0565b6011620006a0565b6012620006a0565b6013620007a0565b6000620009f681620004fd565b925b62000a05620000dd865190565b84101562000ab95762000a428462000a3c601462000a3562000a28848b620007e2565b516001600160a01b031690565b906200080f565b62000518565b62000aa6601562000a5f62000a5785620004fd565b80926200086a565b62000a6f62000a288787620007e2565b62000a908162000a8a600f62000a3562000a288c8e620007e2565b62000429565b5062000a9e8160196200086a565b601a6200086a565b62000ab184620007ac565b9350620009f8565b935091505062000acb816021620008b7565b5062000aef4262000ade81600562000518565b62000ae8620008d2565b90620008e0565b62000afc81600462000518565b50565b620000dd6001620004fd565b62000b169062000baf565b62000b2062000aff565b62000afc81600262000518565b620000d1620000dd620000dd9290565b620000dd9062000b2d565b1562000b5057565b60405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b6001600160a01b0391821681529116602082015260400190565b60009062000bbd8262000b3d565b9162000bde6001600160a01b0384166001600160a01b038416141562000b48565b62000bea828262000429565b507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9162000c2562000c1b60405190565b9283928362000b95565b0390a156fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80628cc2621461062f578063061a7bf5146106265780630d7bac4f1461061d57806312edb24c1461061457806315a202a11461060b5780631627540c1461060257806317b18c89146105f95780631bcb7d90146105f05780631c1f78eb146105e75780631e090f01146105de5780631face856146105d5578063218751b2146105cc578063231b68dc146105c357806328408bab146105ba5780632c0c2a0a146105b157806336f89af2146105a8578063386a95251461059f578063387edc86146105965780633c62c44f1461058d57806341a16f3f146105845780634f39059c1461057b5780634fd2b5361461057257806353a47bb71461056957806355189773146105605780635bfd92581461055757806364f2c0601461054e578063663b135c14610545578063693392451461053c5780636c430dbb146105335780636e27cef91461052a57806370641a361461052157806372f702f314610518578063741d3c181461050f578063774d4ae7146105065780637910d17b146104fd5780637970833e146104f457806379ba5097146104eb5780637ab44e40146104e25780637d6ef08e146104d95780637f472e54146104d05780638980f11f146104c75780638bad86a7146104be5780638da5cb5b146104b557806391cf600a146104ac5780639637927f146104a3578063a0f234761461049a578063a10d3b3314610491578063a22cb46514610488578063aa1d4fce1461047f578063b61aa08c14610476578063b85efd061461046d578063b94c4dcb14610464578063bdb123e31461045b578063c00007b014610452578063c354382614610449578063c8f33c9114610440578063ca6df29d14610437578063cc2abd641461042e578063cdc82e8014610425578063d2010fb41461041c578063d2fbdc0d14610413578063d42fc9b41461040a578063d5e1a9c614610401578063d7400d56146103f8578063d9f96e8d146103ef578063de1a6551146103e6578063de57a5b5146103dd578063e01f62bf146103d4578063e1ba95d2146103cb578063e44b9fa5146103c2578063e7f30582146103b9578063ebe2b12b146103b0578063f288baf6146103a7578063f2a8d3491461039e578063f2caeb1e14610395578063f77e34d11461038c578063facefb64146103835763fff6cae90361000e5761037e611d66565b61000e565b5061037e611d3f565b5061037e611b9f565b5061037e611b58565b5061037e611b2e565b5061037e611af8565b5061037e611ac2565b5061037e611a8f565b5061037e611a64565b5061037e611a15565b5061037e6119eb565b5061037e6119c0565b5061037e611998565b5061037e61196e565b5061037e611947565b5061037e61191c565b5061037e6118a8565b5061037e611880565b5061037e611856565b5061037e611820565b5061037e6117ec565b5061037e611784565b5061037e61175a565b5061037e611724565b5061037e6116fa565b5061037e6116d0565b5061037e6116a6565b5061037e611672565b5061037e61164a565b5061037e611620565b5061037e6115ec565b5061037e6115c4565b5061037e61159a565b5061037e611570565b5061037e61153d565b5061037e611513565b5061037e6114ce565b5061037e611488565b5061037e61145e565b5061037e611434565b5061037e6113f7565b5061037e61136d565b5061037e61132c565b5061037e6111e6565b5061037e6111bb565b5061037e61116c565b5061037e611142565b5061037e61110c565b5061037e6110e2565b5061037e6110ac565b5061037e611070565b5061037e611018565b5061037e610f94565b5061037e610f6a565b5061037e610f42565b5061037e610ed2565b5061037e610e9c565b5061037e610e72565b5061037e610e3c565b5061037e610de9565b5061037e610d61565b5061037e610d37565b5061037e610cec565b5061037e610cc2565b5061037e610c70565b5061037e610c2e565b5061037e610c04565b5061037e610bce565b5061037e610b98565b5061037e610ad3565b5061037e610aa8565b5061037e6109fb565b5061037e61099e565b5061037e610968565b5061037e6108ac565b5061037e6107f9565b5061037e61079e565b5061037e610713565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361063857565b9050359061068582610659565b565b9061065691602081830312156106785761069f600080fd5b610678565b9052565b0190565b906106cc6106c56106bb845190565b8084529260200190565b9260200190565b9060005b8181106106dd5750505090565b9091926106fa6106f36001928651815260200190565b9460200190565b9291016106d0565b6020808252610656929101906106ac565b5034610740575b61073c61073061072b366004610687565b612379565b60405191829182610702565b0390f35b610748600080fd5b61071a565b80610671565b905035906106858261074d565b9091606082840312610791575b61065661077a8484610678565b936107888160208601610753565b93604001610753565b610799600080fd5b61076d565b50346107cf575b61073c6107bc6107b6366004610760565b91615c8c565b6040515b91829182901515815260200190565b6107d7600080fd5b6107a5565b906106569160208183031215610753576107f4600080fd5b610753565b5034610827575b61073c6108166108113660046107dc565b612519565b6040515b9182918290815260200190565b61082f600080fd5b610800565b600091031261083f57565b610685600080fd5b906108566106c56106bb845190565b9060005b8181106108675750505090565b9091926108936106f3600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b92910161085a565b602080825261065692910190610847565b50346108d5575b6108be366004610834565b61073c6108c9611ecf565b6040519182918261089b565b6108dd600080fd5b6108b3565b610656916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b9061065691546108e2565b61065660006025610903565b61063d6106566106569273ffffffffffffffffffffffffffffffffffffffff1690565b6106569061091a565b6106569061093d565b6106a490610946565b602081019291610685919061094f565b5034610991575b61097a366004610834565b61073c61098561090e565b60405191829182610958565b610999600080fd5b61096f565b50346109bd575b6109b86109b3366004610687565b614123565b604051005b6109c5600080fd5b6109a5565b9190610656906040848203126109ee575b6109e58185610753565b93602001610753565b6109f6600080fd5b6109db565b5034610a19575b61073c610816610a133660046109ca565b906156ba565b610a21600080fd5b610a02565b919061065690604084820312610a4a575b610a418185610678565b93602001610678565b610a52600080fd5b610a37565b90610a6190610946565b600052602052604060002090565b610656916008021c5b60ff1690565b906106569154610a6f565b610aa361065692610a9e602793600094610a57565b610a57565b610a7e565b5034610ac6575b61073c6107bc610ac0366004610a26565b90610a89565b610ace600080fd5b610aaf565b5034610af0575b610ae5366004610834565b61073c610730612471565b610af8600080fd5b610ada565b8051825261068591906080908190610b1a60208201516020860152565b610b2960408201516040860152565b610b3860608201516060860152565b0151910152565b906106a88160a093610afd565b90610b5b6106c56106bb845190565b9060005b818110610b6c5750505090565b909192610b7f6106f36001928651610b3f565b929101610b5f565b602080825261065692910190610b4c565b5034610bc1575b61073c610bb5610bb0366004610687565b614b73565b60405191829182610b87565b610bc9600080fd5b610b9f565b5034610beb575b61073c610816610be6366004610687565b612583565b610bf3600080fd5b610bd5565b61065660006024610903565b5034610c21575b610c16366004610834565b61073c610985610bf8565b610c29600080fd5b610c0b565b5034610c4c575b61073c6107bc610c46366004610a26565b90611da0565b610c54600080fd5b610c35565b61065690610c6b602091600092610a57565b610903565b5034610cb5575b61073c610c8d610c88366004610687565b610c59565b6040515b9182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b610cbd600080fd5b610c77565b5034610cdf575b61073c610816610cda366004610687565b61270f565b610ce7600080fd5b610cc9565b5034610d09575b61073c610816610d04366004610687565b612502565b610d11600080fd5b610cf3565b6106566106566106569290565b61065662093a80610d16565b610656610d23565b5034610d54575b610d49366004610834565b61073c610816610d2f565b610d5c600080fd5b610d3e565b5034610d7b575b6109b8610d76366004610687565b612fd9565b610d83600080fd5b610d68565b608081830312610dc5575b610d9d8282610678565b92610656610dae8460208501610753565b93610dbc8160408601610753565b93606001610753565b610dcd600080fd5b610d93565b9081526040810192916106859160200152565b0152565b5034610e1d575b610e07610dfe366004610d88565b92919091615e58565b9061073c610e1460405190565b92839283610dd2565b610e25600080fd5b610df0565b61065690610c6b600f91600092610a57565b5034610e59575b61073c610c8d610e54366004610687565b610e2a565b610e61600080fd5b610e43565b61065660006023610903565b5034610e8f575b610e84366004610834565b61073c610985610e66565b610e97600080fd5b610e79565b5034610eb9575b61073c610816610eb4366004610687565b612699565b610ec1600080fd5b610ea3565b61065660006001610903565b5034610eef575b610ee4366004610834565b61073c610c8d610ec6565b610ef7600080fd5b610ed9565b801515610671565b9050359061068582610efc565b919061065690604084820312610f35575b610f2c8185610678565b93602001610f04565b610f3d600080fd5b610f22565b5034610f5d575b6109b8610f57366004610f11565b90612ce4565b610f65600080fd5b610f49565b5034610f87575b610f7c366004610834565b61073c61081661445a565b610f8f600080fd5b610f71565b5034610fb1575b610fa6366004610834565b61073c6108166124f8565b610fb9600080fd5b610f9b565b919060a08382031261100b575b610fd58184610678565b92610fe38260208301610678565b92610656610ff48460408501610753565b936110028160608601610753565b93608001610753565b611013600080fd5b610fcb565b5034611036575b610e0761102d366004610fbe565b93929092615d79565b61103e600080fd5b61101f565b610656916008021c81565b906106569154611043565b6106569061106b601491600092610a57565b61104e565b503461108d575b61073c610816611088366004610687565b611059565b611095600080fd5b611077565b6106569061106b601891600092610a57565b50346110c9575b61073c6108166110c4366004610687565b61109a565b6110d1600080fd5b6110b3565b6106566000600861104e565b50346110ff575b6110f4366004610834565b61073c6108166110d6565b611107600080fd5b6110e9565b5034611129575b61111e366004610834565b61073c610730612253565b611131600080fd5b611113565b61065660056021610903565b503461115f575b611154366004610834565b61073c610985611136565b611167600080fd5b611149565b5034611186575b6109b8611181366004610687565b614806565b61118e600080fd5b611173565b9190610656906040848203126111ae575b6109e58185610678565b6111b6600080fd5b6111a4565b50346111d9575b61073c6108166111d3366004611193565b90614893565b6111e1600080fd5b6111c2565b5034611204575b61073c6107306111fe366004610f11565b9061303d565b61120c600080fd5b6111ed565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61126160059161124f815490565b84101561126a57600052602060002090565b91020190600090565b611272611211565b600052602060002090565b6106569081565b610656905461127d565b919061129e602293600094610a57565b80548210156112ef576112b2929350611241565b506112bc81611284565b916112c960018301611284565b916112d660028201611284565b9161065660046112e860038501611284565b9301611284565b8380fd5b9095949261068594611325610de59261131e60809661131760a088019c6000890152565b6020870152565b6040850152565b6060830152565b5034611360575b61073c61134a611344366004611193565b9061128e565b9161135795939560405190565b958695866112f3565b611368600080fd5b611333565b5034611387575b61137f366004610834565b6109b86141e4565b61138f600080fd5b611374565b90916060828403126113c5575b6106566113ae8484610678565b936113bc8160208601610753565b93604001610678565b6113cd600080fd5b6113a1565b90610a61565b9061065692610a9e61106b926113f2602695600096610a57565b6113d2565b5034611415575b61073c61081661140f366004611394565b916113d8565b61141d600080fd5b6113fe565b6106569061106b601f91600092610a57565b5034611451575b61073c61081661144c366004610687565b611422565b611459600080fd5b61143b565b503461147b575b61073c610816611476366004610687565b6126bb565b611483600080fd5b611465565b50346114a3575b6109b861149d366004611193565b90613c2b565b6114ab600080fd5b61148f565b908152606081019392610685929091604091610de5905b6020830152565b50346114fb575b61073c6114eb6114e6366004610687565b6149e2565b6040519193915b938493846114b0565b611503600080fd5b6114d5565b610656600080610903565b5034611530575b611525366004610834565b61073c610c8d611508565b611538600080fd5b61151a565b5034611557575b6109b8611552366004610687565b613a2b565b61155f600080fd5b611544565b61065660006021610a7e565b503461158d575b611582366004610834565b61073c6107bc611564565b611595600080fd5b611577565b50346115b7575b61073c6108166115b2366004610687565b6125ab565b6115bf600080fd5b6115a1565b50346115df575b6109b86115d9366004610760565b91615b4a565b6115e7600080fd5b6115cb565b5034611607575b6109b8611601366004610f11565b90615c33565b61160f600080fd5b6115f3565b6106566000600961104e565b503461163d575b611632366004610834565b61073c610816611614565b611645600080fd5b611627565b5034611665575b6109b861165f366004611193565b90615bc7565b61166d600080fd5b611651565b503461168d575b6109b86116873660046109ca565b90615301565b611695600080fd5b611679565b6106566000600761104e565b50346116c3575b6116b8366004610834565b61073c61081661169a565b6116cb600080fd5b6116ad565b50346116ed575b6116e2366004610834565b61073c610816614668565b6116f5600080fd5b6116d7565b5034611717575b61073c610730611712366004610687565b613013565b61171f600080fd5b611701565b5034611741575b61073c610c8d61173c366004610687565b6126e6565b611749600080fd5b61172b565b6106566000600561104e565b5034611777575b61176c366004610834565b61073c61081661174e565b61177f600080fd5b611761565b50346117a1575b61073c61081661179c366004610687565b614b8f565b6117a9600080fd5b61178b565b90916060828403126117df575b6106566117c88484610f04565b936117d68160208601610f04565b93604001610f04565b6117e7600080fd5b6117bb565b5034611807575b6109b86118013660046117ae565b916139be565b61180f600080fd5b6117f3565b6106566000600661104e565b503461183d575b611832366004610834565b61073c610816611814565b611845600080fd5b611827565b6106566000600361104e565b5034611873575b611868366004610834565b61073c61081661184a565b61187b600080fd5b61185d565b503461189b575b6109b86118953660046109ca565b9061568f565b6118a3600080fd5b611887565b50346118c5575b61073c6108166118c0366004610687565b612553565b6118cd600080fd5b6118af565b60808183031261190f575b6118e78282610678565b926106566118f88460208501610753565b936119068160408601610678565b93606001610678565b611917600080fd5b6118dd565b503461193a575b6109b86119313660046118d2565b92919091613fff565b611942600080fd5b611923565b5034611961575b6109b861195c366004610687565b612c2e565b611969600080fd5b61194e565b503461198b575b61073c610816611986366004610687565b6124e1565b611993600080fd5b611975565b50346119b3575b6109b86119ad366004610a26565b90614031565b6119bb600080fd5b61199f565b50346119de575b61073c6108166119d8366004611193565b90614b9e565b6119e6600080fd5b6119c7565b5034611a08575b6119fd366004610834565b61073c6108166124d7565b611a10600080fd5b6119f2565b5034611a2f575b611a27366004610834565b6109b86139f4565b611a37600080fd5b611a1c565b919061065690604084820312611a57575b610a418185610753565b611a5f600080fd5b611a4d565b5034611a82575b61073c610816611a7c366004611a3c565b90615907565b611a8a600080fd5b611a6b565b5034611aa9575b6109b8611aa4366004610687565b612aff565b611ab1600080fd5b611a96565b6106566000600461104e565b5034611adf575b611ad4366004610834565b61073c610816611ab6565b611ae7600080fd5b611ac9565b6106566000600a61104e565b5034611b15575b611b0a366004610834565b61073c610816611aec565b611b1d600080fd5b611aff565b6106566000600b61104e565b5034611b4b575b611b40366004610834565b61073c610816611b22565b611b53600080fd5b611b35565b5034611b75575b61073c610816611b703660046107dc565b611fdb565b611b7d600080fd5b611b5f565b906106569160208183031215610f0457611b9a600080fd5b610f04565b5034611bb9575b6109b8611bb4366004611b82565b61328e565b611bc1600080fd5b611ba6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff821117611c5e57604052565b611c66611bee565b604052565b90610685611c7860405190565b9283611c1e565b60209067ffffffffffffffff8111611c95570290565b611c9d611bee565b0290565b90929192611cb6611cb182611c7f565b611c6b565b936020859202830192818411611cef575b915b838310611cd65750505050565b60208091611ce48486610753565b815201920191611cc9565b611cf7600080fd5b611cc7565b906106569181601f82011215611d15575b600690611ca1565b611d1d600080fd5b611d0d565b906106569160c08183031215611cfc57611d3a600080fd5b611cfc565b5034611d59575b6109b8611d54366004611d22565b613f46565b611d61600080fd5b611d46565b5034611d80575b611d78366004610834565b6109b8613426565b611d88600080fd5b611d6d565b6106569061063d565b6106569054611d8d565b90611dae61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831603611dd1575050600190565b611e04611dea611de5611e1e93600f610a57565b611d96565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b14611e2857600090565b600190565b90611e48611e3c6106bb845490565b92600052602060002090565b9060005b818110611e595750505090565b909192611e93611e8c600192611e6e87611d96565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460010190565b929101611e4c565b9061065691611e2d565b90610685611ebf92611eb660405190565b93848092611e9b565b0383611c1e565b61065690611ea5565b6106566010611ec6565b61126160019161124f815490565b61063d6106566106569290565b61065690611ee7565b905051906106858261074d565b906106569160208183031215611efd57611f22600080fd5b611efd565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190611f6f565b9290565b91808302928184041490151715611f8257565b610685611f34565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611fc4565b9190565b908115611fcf570490565b611fd7611f8a565b0490565b611fef611fe9826011611ed9565b90610903565b611ffc61063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216146120dd5761204d61065692602061203561203061208195610946565b610946565b630a3be7579061204460405190565b94859260e01b90565b825260049082905afa9182156120d0575b600092612098575b5061207561207b916019611ed9565b9061104e565b90611f64565b612092670de0b6b3a7640000610d16565b90611fba565b61207b9192506120c16120759160203d81116120c9575b6120b98183611c1e565b810190611f0a565b929150612066565b503d6120af565b6120d8611f27565b61205e565b50612075610656916013611ed9565b6020809167ffffffffffffffff811161210457020190565b61210c611bee565b020190565b9061211e611cb1836120ec565b918252565b369037565b9061068561213e61213884612111565b936120ec565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401612123565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612197570190565b6106a8611f34565b91908203918211611f8257565b91908201809211611f8257565b90602080916121c6845190565b8110156121d4575b02010190565b6121dc611211565b6121ce565b906121f0611e3c6106bb845490565b9060005b8181106122015750505090565b90919261221e611e8c60019261221687611284565b815260200190565b9291016121f4565b90610656916121e1565b90610685611ebf9261224160405190565b93848092612226565b61065690612230565b61225d601b611284565b60009061226c611fc083610d16565b148015612333575b156122845750610656601561224a565b61229e61229861229360105490565b612128565b91610d16565b6015906122ac610656835490565b81101561232e576123246123176122c96120758461232996611ed9565b6123116123076122f66122ed6122dd612350565b6122e76005611284565b9061219f565b61207b88611fdb565b61207b670de0b6b3a7640000610d16565b612092601c611284565b906121ac565b61232183866121b9565b52565b612169565b61229e565b505090565b5061233e601c611284565b61234a611fc083610d16565b14612274565b6106564261235e6004611284565b8082101561236a575090565b905090565b90610a6190610d16565b90612382612253565b916010612390612293825490565b918294601e6123a76123a28483610a57565b611284565b6000906123b6611fc083610d16565b116123c4575b505050505050565b6123d5909792949691939597610d16565b6123e0610656885490565b81101561245e57610656612456826123248b612321836124508d6123116123a28f9b8f6124486120816123e09f61207b61243161242d876124276123a28d6124439a610a57565b946121b9565b5190565b6122e76123a2886124438d6016610a57565b61236f565b946017610a57565b926121b9565b9150506123d5565b50945094505050503880808080806123bc565b601361247e612293825490565b91829061248b6000610d16565b612496610656855490565b8110156124d0576106566124c8826123246124be6124b661249696611fdb565b61207b610d23565b612321838b6121b9565b91505061248b565b5091509150565b610656601b611284565b6123a2610656916124f0600090565b50601d610a57565b610656601c611284565b6123a261065691612511600090565b50601e610a57565b6106569061235e61253861252d6006611284565b9261207b6006611284565b6120926007611284565b610656670de0b6b3a7640000610d16565b61257b61065691612562600090565b5061207b6123a26125736003611284565b92601d610a57565b612092612542565b61257b61065691612592600090565b5061207b6123a26125a36003611284565b92601f610a57565b61265761262b6020610656936125bf600090565b506125e97f0000000000000000000000000000000000000000000000000000000000000000610946565b6126076370a082316125fa60405190565b9586948593849360e01b90565b835273ffffffffffffffffffffffffffffffffffffffff1660048301526024820190565b03915afa90811561268c575b60009161266e575b5061265261264b612542565b8092611f64565b611f64565b612092612664600b611284565b61207b6003611284565b612686915060203d81116120c9576120b98183611c1e565b3861263f565b612694611f27565b612637565b61257b6126b1610656926126ab600090565b50612553565b61207b600b611284565b61257b6126b1610656926126cd600090565b50612583565b61065690610a78565b61065690546126d3565b6126f96126f482600d610a57565b6126dc565b156127015790565b611de5610656916020610a57565b60009061283860009161272183610d16565b5061272b816126e6565b9061273861063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff8316149182156129645761279d60206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b6370a082319061279460405190565b93849260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa908115612957575b600091612939575b50925b6127f56127eb6127e5600a611284565b86611f64565b61207b6009611284565b60206128207f0000000000000000000000000000000000000000000000000000000000000000610946565b6318160ddd9061282f60405190565b98899260e01b90565b825260049082905afa95861561292c575b600096612908575b5061286890612092612861612542565b8098611f64565b9650156128f8575061287990612699565b925b61288481610d16565b8411156128e657506128a56128af936128a0846128a094611f64565b611fba565b61207b600a611284565b808211156128de5750905b816128cb611fc0610656600a611284565b116128d257565b9050610656600a611284565b9050906128ba565b9150506128f39150610d16565b6128af565b61290291506126bb565b9261287b565b6128689196506129259060203d81116120c9576120b98183611c1e565b9590612851565b612934611f27565b612849565b612951915060203d81116120c9576120b98183611c1e565b386127d2565b61295f611f27565b6127ca565b61299260206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa9081156129ec575b6000916129ce575b50926127d5565b6129e6915060203d81116120c9576120b98183611c1e565b386129c7565b6129f4611f27565b6129bf565b15612a0057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642070726f7879000000000000000000000000000000000000006044820152606490fd5b0390fd5b9060ff905b9181191691161790565b90612a82610656612a8992151590565b8254612a63565b9055565b9073ffffffffffffffffffffffffffffffffffffffff90612a68565b90612ab9610656612a8992610946565b8254612a8d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90612a68565b90612af8610656612a8992610d16565b8254612ac0565b33612b16612b116126f483600d610a57565b6129f9565b612b46600e612b4184610a9e85612b3b612b376126f485610a9e858a610a57565b1590565b94610a57565b612a72565b602091612b56611de58285610a57565b612b7573ffffffffffffffffffffffffffffffffffffffff8416611e04565b14612b7f57505050565b612bb36125a36123a283612bac61068597612ba7612bc297612ba16000611ef4565b92610a57565b612aa9565b601d610a57565b91612bbd83611284565b61219f565b90612ae8565b15612bcf57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f787920686173206e6f7420616c6c6f77656420796f75207965740000006044820152606490fd5b61068590612c43612b116126f483600d610a57565b612bc2612cb76125a36123a2612c5a85600e610a57565b612c70612c6b6126f4338094610a57565b612bc8565b612bac86612ba7836020612c87611de58383610a57565b612c9461063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612cc6575b50610a57565b91612cc183611284565b6121ac565b612cde90612bc2612bb36125a36123a287601d610a57565b38612cb1565b90612da1575b612cf761063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612d165750565b80612d23612d3f926149e2565b919390612d2f84612dae565b612d3a84600c610a57565b612ae8565b828110612d7b57612d7383612d5a61068595612d3a9461219f565b90612cc1612d6c83612cc1601c611284565b601c612ae8565b91601e610a57565b612d7383612d8f612d3a936106859661219f565b90612bbd612d6c83612bbd601c611284565b612da9613426565b612cea565b6000612dbc61063d82611ef4565b73ffffffffffffffffffffffffffffffffffffffff831603612ddc575050565b9091612de783612379565b90612df183610d16565b612dfc610656845190565b811015612e2b5780612324612e1761242d612e2694876121b9565b612d3a836124438a6017610a57565b612df1565b509091612e3790610d16565b612e42610656845190565b811015612e7b57610656612e7382612324612e64612075612e42966015611ed9565b612d3a836124438b6016610a57565b915050612e37565b50915050565b6106566002610d16565b15612e9257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6106566001610d16565b612f2c90612f27612f0c6002611284565b612f20612f17612e81565b91821415612e8b565b6002612ae8565b612fb3565b610685612f20612ef1565b6106569060101c610a78565b6106569054612f37565b15612f5457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5265776172647320636f6c6c656374696f6e20706175736564000000000000006044820152606490fd5b61068590612fd6612fc46021612f43565b612fd060005b91151590565b14612f4d565b50565b61068590612efb565b90612ff991612ff4612f0c6002611284565b613005565b90610685612f20612ef1565b506106569060019033613206565b610656906060612fe2565b90612ff99291613031612f0c6002611284565b50610656919033613206565b6106569190606061301e565b9061065693929161305b600183612ce4565b6130b0565b908152606081019392610685929091604091613094905b73ffffffffffffffffffffffffffffffffffffffff166020830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b506130c042612d3a836018610a57565b6130ca6021612f43565b6000906130da90612fd083612fca565b6010906130e8612293835490565b9586906130f483610d16565b6130ff610656865490565b8110156131ec5761316290858a89838a6131436017612d3a8461244361313b8f6131368b612321866124506123a282898f8e610a57565b610d16565b958694610a57565b61315361065661242d84876121b9565b11613167575b50505050612169565b6130f4565b61242d81612427611fe961317e9461318498611ed9565b916143ad565b61319161242d828c6121b9565b61319e611fe98389611ed9565b7f1d2f2ca53af5d2f333bd32fdd45f9c52ad8ebe31414f7792912077fcb3876dff906131c98a610946565b926131e08c6131d760405190565b93849384613060565b0390a2858a8983613159565b509592509550509190916131fe575050565b610685915050565b6106569291906060613049565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916106859160200152565b91906008612a689102916132707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190613286610656612a8993610d16565b90835461323d565b60009061329a82610d16565b6011906132a8610656835490565b811015613420576132bf611fe9826132ee94611ed9565b6132cb61063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036132f3575b50612169565b61329a565b838415613404575b156132e85761338460206133146120306133a994610946565b613375636472eee18361334261332930610946565b9261334d4261333760405190565b958694859460e01b90565b845260048401613213565b03818d875af19081156133f7575b6000916133da575b5061336f876019611ed9565b90613275565b63513872bd9061279460405190565b825260049082905afa9081156133cd575b6000916133af575b5061336f83601a611ed9565b386132e8565b6133c7915060203d81116120c9576120b98183611c1e565b3861339d565b6133d5611f27565b613395565b6133f19150843d81116120c9576120b98183611c1e565b38613363565b6133ff611f27565b61335b565b504261341a611fc061065661207586601a611ed9565b116132fb565b50505050565b613430600061328e565b61344261343b61445a565b6003612ae8565b42613453611fc06106566004611284565b10613460576106856135bb565b610685613801565b91906106569060408482031261348c575b6134838185611efd565b93602001611efd565b613494600080fd5b613479565b6106a49073ffffffffffffffffffffffffffffffffffffffff1660601b90565b906106a86135126014937f4e6f7420656e6f7567682072657761726420746f6b656e7320617661696c616281527f6c653a2000000000000000000000000000000000000000000000000000000000602082015260240190565b8092613499565b60005b83811061352c5750506000910152565b818101518382015260200161351c565b61355d611bc66020936106a893613551815190565b80835293849260200190565b95869101613519565b60208082526106569291019061353c565b1561357f5750565b612a5f9061358c60405190565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301613566565b60006135c681610d16565b6012906135d4610656835490565b8110156136a3576135eb611fe98261361994611ed9565b6135f761063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361361e5750612169565b6135c6565b604061362f61203061365993610946565b63092193ab906126078761364230610946565b9361364c60405190565b9687958694859360e01b90565b03925af18015613696575b156132e8576136899060403d811161368f575b6136818183611c1e565b810190613468565b506132e8565b503d613677565b61369e611f27565b613664565b50506136b3426122e76004611284565b906136c96122986136c2610d23565b8094611fba565b60106136d6610656825490565b8210156137c257906123248261379261376a611fe98561379897613762611fc061374b602061372f8f8f611fe9896137296120309361207b61371e6120309761265286611fdb565b916123116001610d16565b99611ed9565b6370a082319061260761374130610946565b926125fa60405190565b03915afa9081156137b5575b60009161379d575090565b111594611ed9565b61065661377660405190565b80926137866020830191826134b9565b90810382520382611c1e565b90613577565b6136c9565b610656915060203d81116120c9576120b98183611c1e565b6137bd611f27565b613757565b50506137e7906123116137ee936126526137dc6004611284565b936123116001610d16565b6004612ae8565b6137f6613801565b61068561343b61445a565b613809612253565b6138136000610d16565b601590613821610656835490565b81101561384b576123246138469261336f8361384061242d82896121b9565b92611ed9565b613813565b505050610685613859612350565b6005612ae8565b1561386757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f74206f776e6572206f722074696d656c6f636b00000000000000000000006044820152606490fd5b906106859291613903336138dd61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff821614908115613908575b50613860565b61399d565b9050613927738412ebf45bac1b340bbe8f318b928c466c4e39ca611e04565b14386138fd565b9063ff0000009060181b612a68565b9061394d610656612a8992151590565b825461392e565b9061ff009060081b612a68565b90613971610656612a8992151590565b8254613954565b9062ff00009060101b612a68565b90613996610656612a8992151590565b8254613978565b61068592916139b06139b792602161393d565b6021613961565b6021613986565b9061068592916138c6565b6139da336138dd61063d6000611d96565b6106856106856139ed612b3760216126dc565b6021612a72565b6106856139c9565b61068590613a11336138dd61063d6000611d96565b61068590612b41600d91612ba1612b376126f48386610a57565b610685906139fc565b15613a3b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f74206f776e6572206f7220746b6e206d67720000000000000000000000006044820152606490fd5b9061068591613ad83382613ab161063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831614918215613add575b5050613a34565b613aee565b613ae79250611da0565b8238613ad1565b60009182613afb81610d16565b6010613b08610656825490565b821015613c2057611fe982613b1c92611ed9565b613b3b73ffffffffffffffffffffffffffffffffffffffff8616611e04565b14613b4e57613b4990612169565b613afb565b50909192506001905b8180613c00575b8215613bd6575b505015613b77576106859133906143ad565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f2076616c696420746f6b656e7320746f207265636f7665720000000000006044820152606490fd5b15915081613be7575b503880613b65565b9050613bf9611e0461063d3393611d96565b1438613bdf565b9150613c10611de585600f610a57565b613c1933611e04565b1491613b5e565b505092909192613b57565b9061068591613a9a565b61068590613c4a336138dd61063d6000611d96565b613d9b565b906020906006811015613c6157020190565b61210c611211565b15613c7057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d757374206265203e3d204d554c2050524543000000000000000000000000006044820152606490fd5b15613cd657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203000000000000000000000000000000000000000006044820152606490fd5b15613d3c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203100000000000000000000000000000000000000006044820152606490fd5b613ec361242d61068592613eb9613eb261242d613eac613e0f613e78613e7161242d613e6b6000613df0613ddb61242d8d613dd585610d16565b90613c4f565b613de9611fc0610656612542565b1015613c69565b613136613e6461242d8d613dd5600195613e1561242d613e0f89610d16565b85613c4f565b613e21611fc083610d16565b101580613f22575b80613ef9575b613e3890613ccf565b613e4761242d60049d8e610d16565b613e53611fc089610d16565b101580613eca575b61313690613d35565b6006612ae8565b89613c4f565b600a612ae8565b613e92613e8b61242d613e6b6002610d16565b600b612ae8565b613136613ea561242d613e6b6003610d16565b6009612ae8565b84613c4f565b6007612ae8565b613dd56005610d16565b6008612ae8565b50613136613ee461242d613ede6005610d16565b86613c4f565b613ef0611fc08a610d16565b10159050613e5b565b50613e38613f0d61242d613ede6003610d16565b613f19611fc084610d16565b10159050613e2f565b50613f3361242d613e0f6002610d16565b613f3f611fc083610d16565b1015613e29565b61068590613c35565b90610685939291613f683382613ab161063d6000611d96565b613fad565b91906008612a6891029161327073ffffffffffffffffffffffffffffffffffffffff841b90565b9190613fa5610656612a8993610946565b908354613f6d565b90613fd96123a2613ff193613ff76106859796613fdf60139661336f601498613fd96123a2888c610a57565b90611ed9565b613ff16011613fd96123a2868a610a57565b90613f94565b601293610a57565b90610685939291613f4f565b90610685916140223382613ab161063d6000611d96565b90612ba761068592600f610a57565b906106859161400b565b1561404257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201527f6f726d207468697320616374696f6e00000000000000000000000000000000006064820152608490fd5b610685906140e5336140df611e0461063d6000611d96565b1461403b565b6140f0816001612aa9565b61411e7f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2291610c9160405190565b0390a1565b610685906140c7565b1561413357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527f2063616e20616363657074206f776e65727368697000000000000000000000006064820152608490fd5b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161068591602090613094565b6141fe336141f8611e0461063d6001611d96565b1461412c565b6142086000611d96565b6142126001611d96565b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9161424961424060405190565b928392836141b8565b0390a16142606142596001611d96565b6000612aa9565b61068561426d6000611ef4565b6001612aa9565b6142876142816106569290565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6106a860209167ffffffffffffffff81116142e957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b611bc6611bee565b9061211e611cb1836142ac565b3d156143185761430d3d6142f1565b903d6000602084013e565b606090565b9050519061068582610efc565b90610656916020818303121561431d57614342600080fd5b61431d565b1561434e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606490fd5b6000919060046143f584936143e6610685976143cc63a9059cbb614274565b926143d660405190565b9586946020860190815201613213565b60208201810382520382611c1e565b82602082019151925af16144076142fe565b81614413575b50614347565b905061441d815190565b61442a611fc06000610d16565b1490811561443a575b503861440d565b61445491506020614449825190565b81830101910161432a565b38614433565b6106566145236145046144d36144b3602061448b612030735e8422345238f34275888049021821e8e08caa1f610946565b6370a082319061260773a1f8a6807c402e4a15ef4eba36528a3fed24e577926125fa60405190565b03915afa90811561457c575b60009161455e575b5061207b613136614668565b60206144f561203073f43211935c781d5ca1a41d2041f397b8a7366c7a610946565b6318160ddd9061204460405190565b825260049082905afa918215614551575b600092614531575b50611fba565b61207b6402540be400610d16565b61454a91925060203d81116120c9576120b98183611c1e565b903861451d565b614559611f27565b614515565b614576915060203d81116120c9576120b98183611c1e565b386144c7565b614584611f27565b6144bf565b69ffffffffffffffffffff8116610671565b9050519061068582614589565b919060a0838203126145f5575b6145bf818461459b565b926145cd8260208301611efd565b926106566145de8460408501611efd565b936145ec8160608601611efd565b9360800161459b565b6145fd600080fd5b6145b5565b1561460957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636861696e6c696e6b2070726963650000000000000000006044820152606490fd5b61468960a061467a6120306025611d96565b63feaf968c9061279460405190565b825260049082905afa801561473d575b600090819081908190614706575b6106569394506000926146b984610d16565b86121593846146ec575b5050826146d2575b5050614602565b69ffffffffffffffffffff908116925016101538806146cb565b6146fc91929450611fc090610d16565b14159138806146c3565b5050505061472d6106569160a03d8111614736575b6147258183611c1e565b8101906145a8565b915091926146a7565b503d61471b565b614745611f27565b614699565b6106859061475f336138dd61063d6000611d96565b6147ca565b1561476b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5a65726f206164647265737320646574656374656400000000000000000000006044820152606490fd5b6147ff610685916120306147e161063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff83161415614764565b6025612aa9565b6106859061474a565b61065660a0611c6b565b90610685614883600461482a61480f565b9461483b61483782611284565b8752565b61485161484a60018301611284565b6020880152565b61486761486060028301611284565b6040880152565b61487d61487660038301611284565b6060880152565b01611284565b6080840152565b61065690614819565b91906148b46148ae6000926148a9866022610a57565b611241565b5061488a565b9260186148c46123a28383610a57565b60208601906148d7611fc0610656845190565b10156149ce5751915b60608601916148ed835190565b429590861061499a5750614904916123a291610a57565b614912611fc0610656845190565b1015614985576120926149386080946122e761493361496996612bbd875190565b945190565b6149636149558461265261081161494f6002610d16565b83611fba565b612311836126526000610d16565b926121ac565b925b01614977610656825190565b83116149805750565b519150565b50505060806149946000610d16565b9261496b565b6149c49250610811939150608095612bbd6149bf614994976123119450612bbd865190565b935190565b6120926002610d16565b506149dc6123a28383610a57565b916148e0565b601e916000916149f56123a28286610a57565b91614a40614a028361270f565b809550614a136123a285601d610a57565b9684600098614a24611fc08b610d16565b149182614af2575b50508015614ad8575b15614abd5795610d16565b92835b6022614a59610656614a558784610a57565b5490565b861015614ab457614aae916123118661231161257b614aa28d614a9c6040614a968f614a906148ae826148a9614aa89f8d90610a57565b98614893565b96015190565b946121ac565b83611f64565b94612169565b93614a43565b50935094509050565b6149c4614ad2916123116123a287600c610a57565b95610d16565b50614aea6106566123a286600c610a57565b811015614a35565b614b019250906123a291610a57565b614b0d611fc089610d16565b148438614a2c565b90614b1e825490565b614b2781612111565b92614b3b6020850191600052602060002090565b6000915b838310614b4c5750505050565b60056020600192614b5c8561488a565b815201920192019190614b3f565b61065690614b15565b614b8a61065691614b82606090565b506022610a57565b614b6a565b614a5561065691614b82600090565b61236a9190614da3565b614bb061480f565b906000825260208080808086016000815201600081520160008152016000905250565b610656614ba8565b614be5600d6142f1565b7f67657474696e67207374616b6500000000000000000000000000000000000000602082015290565b610656614bdb565b614c2060076142f1565b7f6c6f6f70696e6700000000000000000000000000000000000000000000000000602082015290565b610656614c16565b614c5b600c6142f1565b7f666f756e64206b656b5f69640000000000000000000000000000000000000000602082015290565b610656614c51565b614c9660176142f1565b7f5468652077696e6e696e67206e756d626572206973213a000000000000000000602082015290565b610656614c8c565b614cd1600e6142f1565b7f6265666f72652052657175697265000000000000000000000000000000000000602082015290565b610656614cc7565b15614d0957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5374616b65724e6f74466f756e643a28000000000000000000000000000000006044820152606490fd5b614d72600e6142f1565b7f7265717569726520706173736564000000000000000000000000000000000000602082015290565b610656614d68565b9091614dad614bd3565b91600080614dc283614dbd614c0e565b615018565b614dcb86614ec7565b6022614ddd610656614a558684610a57565b821015614eb957614df582614df0614c49565b614f98565b614e126106566000614e0b856148a98987610a57565b5001611284565b8714614e275750614e2290612169565b614dcb565b819550614e6b9250906148a9614eae946148ae93614e4784614df0614c84565b614e62614e5d6000614e0b876148a98787610a57565b614ec7565b610a9e8a614ec7565b93614e8384614e7b614e5d885190565b614df0614cbf565b614e93614e8e614cfa565b614f31565b614ea8611fc0611f6b8761242d614e5d825190565b14614d02565b610685614e8e614d9b565b50509293614eae9150614e83565b6143e6614f1061068592614eda60405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b60008091614f1c815190565b906020016a636f6e736f6c652e6c6f675afa50565b6143e6614f1061068592614f4460405190565b9283916004602084017f41304fac00000000000000000000000000000000000000000000000000000000815201613566565b92916020614f93610685936040870190878203600089015261353c565b940152565b90614f10610685926143e6614fac60405190565b9384926004602085017fb60e72cc00000000000000000000000000000000000000000000000000000000815201614f76565b92916020614ffb610685936040870190878203600089015261353c565b94019073ffffffffffffffffffffffffffffffffffffffff169052565b90614f10610685926143e661502c60405190565b9384926004602085017f319af33300000000000000000000000000000000000000000000000000000000815201614fde565b90612f2c91615070612f0c6002611284565b6106859190615080600133612ce4565b61514e565b6106569060281c61063d565b6106569054615085565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b90612af8610656612a899290565b6106859190612bc2906080906004906150fa816150f4875190565b906150cb565b61510c60018201612bc2602088015190565b61511e60028201612bc2604088015190565b61513060038201612bc2606088015190565b0192015190565b6106859291156150d95761514961509b565b6150d9565b90339061515b8383614da3565b61516a83612cc1604085015190565b9060009161517783610d16565b8511156152d65761521461521a9261520989615202615286986151fb89976151b78d8f6151a76120306021615091565b906151b130610946565b916153c8565b6151f46151c5602085015190565b6151ed6151de60806151d8606089015190565b97015190565b976151e761480f565b9c8d0152565b60208b0152565b6040890152565b6060870152565b6080850152565b6148a9886022610a57565b90615137565b61523261522b84612cc1601b611284565b601b612ae8565b61524d61524085601d610a57565b612bc285612cc183611284565b615256846126e6565b61526261063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036152c2575b5083612ce4565b6152b07f2640b32e7e5d0fa2a21ea06b22fbd75fda0fda384a895a5fdeef43646de47a0c92610946565b926152bd610e1460405190565b0390a2565b6152406152d091601f610a57565b3861527f565b6040517f063921df000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161505e565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610685929091604091610de590613077565b1561534457565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160448201527f494c4544000000000000000000000000000000000000000000000000000000006064820152608490fd5b6004615401600094936143e66106859787966153e76323b872dd614274565b936153f160405190565b968795602087019081520161530b565b82602082019151925af16154136142fe565b8161541f575b5061533d565b9050615429815190565b615436611fc06000610d16565b14908115615446575b5038615419565b61545591506020614449825190565b3861543f565b90612f2c9161546d612f0c6002611284565b610685919061547d600133612ce4565b6154af565b610de5610685946154a86060949897956154a1608086019a6000870152565b6020850152565b6040830152565b33906154bb8183614da3565b4294919291858111156156645760608401866154d5825190565b6000908210156156525750612bbd6154eb925190565b935b6154fe6154fa888461219f565b9590565b851115615627576155126106566008611284565b85106155fc576155256106566007611284565b85116155d157866152146152bd9461557e615544604061558996015190565b6155736155508b612519565b9161556c61555c61480f565b976155658d8a52565b6020890152565b6040870152565b615202876060870152565b6148a9896022610a57565b615594600086612ce4565b6155be7fc2cf1aae6decacbc52f96b4e4fec96d4ebab5236e4ed987165537bc463014a4395610946565b956155c860405190565b94859485615482565b6040517f42d144ad000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fda0f0f2a000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fbdddfeec000000000000000000000000000000000000000000000000000000008152600490fd5b905061565e9150610d16565b936154ed565b6040517fa51620a7000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161545b565b90612ff992916156ac612f0c6002611284565b50610656914291338061587b565b61065691906000615699565b9061065695949392916156da600183612ce4565b615714565b6106569060181c610a78565b61065690546156df565b613094610685946154a86060949897956154a1608086019a6000870152565b50919390929061572460216156eb565b615850576157356106566008611284565b82106155fc576157486106566007611284565b82116155d1576157899061576d866157636120306021615091565b876151b130610946565b61577683612519565b908661578285836121ac565b9186616d55565b9361579b61522b82612cc1601b611284565b6157b66157a984601d610a57565b612bc283612cc183611284565b6157f56157c2846126e6565b6000906157d161063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361583c575b5084612ce4565b6158366158227ff400e72e69ef4402819dfc57eeddc66f5eb69bf405e0e8098b1946ec1ac14a2294610946565b948661582d60405190565b948594856156f5565b0390a290565b61524061584a91601f610a57565b386157ee565b6040517f26d1807b000000000000000000000000000000000000000000000000000000008152600490fd5b610656949392919060006156c6565b90612ff9929161589d612f0c6002611284565b6158b8565b6106569060081c610a78565b61065690546158a2565b506158c360216158ae565b6158cd6001612fca565b146158dc5761065691336159ac565b6040517f6022a9e7000000000000000000000000000000000000000000000000000000008152600490fd5b6106569190600061588a565b9190613286610656612a899390565b61068591600091615913565b61068591600091613275565b600060046106859261594e83808301615922565b61595b836001830161592e565b615968836002830161592e565b615975836003830161592e565b0161592e565b610685911561593a5761598c61509b565b61593a565b908152606081019392610685929091604091613094906114c7565b600192916159bb848284613206565b506159c68383614da3565b94426159d9611fc0610656606086015190565b1015908115615b2b575b50615b0057604001519360006159f881610d16565b8611615a07575b505050505090565b615a98615a92615a9e93615a288987615a236120306021615091565b6143ad565b615a3961522b8a612bbd601b611284565b615a54615a4788601d610a57565b612bc28b612bbd83611284565b615a5d876126e6565b615a6961063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603615aec575b506148a9876022610a57565b9061597b565b83612ce4565b615ac87f1d9308f6b22a2754a1c622bb30889e8f8f956c83e524d039e9d65d5f052eb90892610946565b92615adf615ad560405190565b9283928784615991565b0390a238808080806159ff565b615a47615afa91601f610a57565b38615a86565b6040517f372a7fe5000000000000000000000000000000000000000000000000000000008152600490fd5b9050615b43612fca615b3d60216126dc565b92151590565b14386159e3565b33615b6284612d3a84610a9e876113f2876026610a57565b615ba9615b9f615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94610946565b9490565b9461081a60405190565b0390a4565b6106a490610d16565b6020810192916106859190615bae565b90600091615bd483610d16565b615bed602691612d3a84610a9e876113f2338098610a57565b615ba9615c20615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94615c2a60405190565b91829182615bb7565b33615c4783612b4184610a9e856027610a57565b615c87615c7d615c777f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610946565b93610946565b936107c060405190565b0390a3565b615c97816027610a57565b90615ca66126f4338094610a57565b15615cb45750505050600190565b6123a2611fc092610a9e615cd0956113f2611f6b956026610a57565b10615cda57600190565b600090565b90615cfb969594939291615cf6612f0c6002611284565b615d08565b9091610685612f20612ef1565b969594939291965050615d1f612b37848489615c8c565b615d3c5785615d338484615d389899615d89565b616b26565b9091565b5033612a5f615d4a60405190565b9283927f01aca06d00000000000000000000000000000000000000000000000000000000845260048401613213565b615d389493929190600080615cdf565b90602691615d9b826113f28386610a57565b93615daa6123a2338097610a57565b819003615dd1575092610a9e612d3a926113f261068596615dcb6000610d16565b96610a57565b929093615de96123a282610a9e866113f28a88610a57565b841015615e0757610a9e612bc2936113f261068597612bb395610a57565b6040517f13be252b000000000000000000000000000000000000000000000000000000008152600490fd5b90615cfb9594939291615e48612f0c6002611284565b50615d3894939291905033616b26565b615d3893929190600080615e32565b90615d38969594939291615e7c600184612ce4565b90615d38969594939291615e91600185612ce4565b6164b5565b7fffffffff000000000000000000000000000000000000000000000000000000008116610671565b9050519061068582615e96565b906106569160208183031215615ebe57615ee3600080fd5b615ebe565b73ffffffffffffffffffffffffffffffffffffffff9091168152610656926080820192615f3291906154a8905b73ffffffffffffffffffffffffffffffffffffffff166020850152565b60608183039101526000815260200190565b6142876142816106569263ffffffff1690565b1561063857565b615f68601a6142f1565b7f5374616b657220616464726573732070726f787920434845434b000000000000602082015290565b610656615f5e565b615fa360116142f1565b7f4265666f7265206163636f756e74696e67000000000000000000000000000000602082015290565b610656615f99565b615fde60066142f1565b7f4445445543540000000000000000000000000000000000000000000000000000602082015290565b610656615fd4565b61601960106142f1565b7f4166746572206163636f756e74696e6700000000000000000000000000000000602082015290565b61065661600f565b61605460066142f1565b7f44454c4554450000000000000000000000000000000000000000000000000000602082015290565b61065661604a565b61608f600f6142f1565b7f555044415445204558495354494e470000000000000000000000000000000000602082015290565b610656616085565b6160ca601c6142f1565b7f41667465725570646174654578697374696e67446573745374616b6500000000602082015290565b6106566160c0565b61610560226142f1565b7f4265666f726555706461746552656365697665725374616b654c69717569646960208201527f7479000000000000000000000000000000000000000000000000000000000000604082015290565b6106566160fb565b61616660216142f1565b7f416674657255706461746552656365697665725374616b654c6971756964697460208201527f7900000000000000000000000000000000000000000000000000000000000000604082015290565b61065661615c565b6161c760226142f1565b7f4265666f726555706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b6106566161bd565b61622860106142f1565b7f455854454e442054494d455354414d5000000000000000000000000000000000602082015290565b61065661621e565b61626360226142f1565b7f57697468696e55706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b610656616259565b6162c460216142f1565b7f416674657255706461746552656365697665725374616b6554696d657374616d60208201527f7000000000000000000000000000000000000000000000000000000000000000604082015290565b6106566162ba565b616325600a6142f1565b7f435245415445204e455700000000000000000000000000000000000000000000602082015290565b61065661631b565b61636060156142f1565b7f6265666f726520637265617465206e6577206b656b0000000000000000000000602082015290565b610656616356565b61639b60146142f1565b7f616674657220637265617465206e6577206b656b000000000000000000000000602082015290565b610656616391565b6163d6601b6142f1565b7f555044415445205245574152445320414e442042414c414e4345530000000000602082015290565b6106566163cc565b61641160136142f1565b7f43414c4c204f4e4c4f434b524543454956454400000000000000000000000000602082015290565b610656616407565b61065660006142f1565b610656616442565b61645e60236142f1565b7f56657279206e6963652c2049206c696b652c206772656174207375636365737360208201527f2121210000000000000000000000000000000000000000000000000000000000604082015290565b610656616454565b5090959492939260009150863b6164ce611fc084610d16565b11616a45575b6164de8588614da3565b6164e9849294611ef4565b9173ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff8716148015616a10575b6169e457616532610656606087015190565b42101580156169c9575b615b00576040850191616550610656845190565b881180156169b7575b61698c57876106569361661b9561658b6152408f8c90610a9e61657e601d9283610a57565b612bc289612bbd83611284565b8d616595816126e6565b6165b473ffffffffffffffffffffffffffffffffffffffff8416611e04565b03616953575b506165ca611e04611dea8c6126e6565b0361692a575b6165e9826165dc835190565b6165e4615fcc565b616bcc565b8c6165f5610656835190565b83036168f457505050615a9261313691616610614e8e61607d565b6148a98d6022610a57565b810361670857926166f89261666f61667f989361664b6166fd97616640614e8e61634e565b614e5d614e8e616389565b602081015190846166686080616662606085015190565b93015190565b9285616d55565b9182988993614e5d614e8e6163c4565b61668a614e8e6163ff565b6166996001615a988187612ce4565b7fd8413caab9b66d88aed167bb4f6b308542a6953a6a54e22f67c5271d34ef97be6166c385610946565b90886166ce85610946565b936166dc876114f260405190565b0390a36166ea614e8e61643a565b6166f261644c565b92616f65565b615f57565b611fc0614e8e6164ad565b828461685c8399946168536060616762816166fd9b6167b36167c26167ba60026166f89f614e0b908f6167496148a991616743614e8e6160b8565b83614da3565b9781996167768a846167688f6167626040859b99015190565b92015190565b906167716160f3565b616c40565b61679461678c88614e0b886148a9886022610a57565b614df0616154565b612bc2876167a7876148a9876022610a57565b500191612cc183611284565b6022610a57565b614df06161b5565b6167ed6167cf8484015190565b6167df611fc0610656878c015190565b106167e8616216565b616b5c565b6168076167fa8484015190565b88850151906165e4616216565b8982886168148683015190565b616824611fc06106568985015190565b10616861575b5084015161684e92509050616845611fc0610656868b015190565b106167e8616313565b015190565b906165e4616313565b61667f565b6168eb936148a96168d56108116168e48a6168dd966168be6168b18360049b61688b614e8e616251565b61684e6168988383015190565b6168a8611fc0610656868a015190565b106167e86162b2565b82840151906165e46162b2565b61684e8a60036168dd8a6148a96168d58888015190565b946022610a57565b5001612ae8565b429061219f565b3889828861682a565b9061242d6002616913613136966148a9616922966167b3614e8e616007565b5001612bc285612bbd83611284565b6165e4616042565b61694e616941601f61693b8c6126e6565b90610a57565b612bc284612cc183611284565b6165d0565b6169798161696e616966616986946126e6565b614dbd615f91565b61693b601f916126e6565b612bc285612bbd83611284565b8d6165ba565b6040517f2c5211c6000000000000000000000000000000000000000000000000000000008152600490fd5b506169c182610d16565b881115616559565b506169d460216126dc565b6169de6001612fca565b1461653c565b6040515b7f1e4ec46b000000000000000000000000000000000000000000000000000000008152600490fd5b5073ffffffffffffffffffffffffffffffffffffffff8a1673ffffffffffffffffffffffffffffffffffffffff871614616520565b616ad8616a8888602088616a5b61203084610946565b8888634fb0710595616a6c60405190565b97889586948593616a7d8b60e01b90565b855260048501615ee8565b03925af1918215616b19575b600092616add575b50616aac614287616ad292615f44565b917fffffffff000000000000000000000000000000000000000000000000000000001690565b14615f57565b6164d4565b616ad2919250614287616b09616aac9260203d8111616b12575b616b018183611c1e565b810190615ecb565b93925050616a9c565b503d616af7565b616b21611f27565b616a94565b615d389493929190600080615e67565b92916020616b53610685936040870190878203600089015261353c565b94019015159052565b90614f10610685926143e6616b7060405190565b9384926004602085017fc3b5563500000000000000000000000000000000000000000000000000000000815201616b36565b604090610de5616bc4610685959796946060840190848203600086015261353c565b966020830152565b614f10906143e661068594616be060405190565b9485936004602086017fca47c4eb00000000000000000000000000000000000000000000000000000000815201616ba2565b610de5610685946154a8616c38606095999896996080860190868203600088015261353c565b986020850152565b6143e661068594614f109394616c5560405190565b9586946004602087017fa7a8785300000000000000000000000000000000000000000000000000000000815201616c12565b616c9160106142f1565b7f435245415445204e4557204b454b494400000000000000000000000000000000602082015290565b610656616c87565b92616cdf60206106a894616cdf601488616cdf859b9a8699613499565b01918252565b906152146106859280549068010000000000000000821015616d0d575b600182018155611241565b616d15611bee565b616d02565b616d2460196142f1565b7f435245415445204e4557204b454b4944202d2050555348454400000000000000602082015290565b610656616d1a565b9493616dee90614883616df395616d6a600090565b50616d76614e8e616cba565b616de7613786616da7616d8d6123a28d601d610a57565b8c616d9760405190565b9384928c8c602086019485616cc2565b616db9616db2825190565b9160200190565b2096614860616dcf6106568a9d6167b38c614ec7565b97616de0616ddb61480f565b9a8b52565b60208a0152565b6060860152565b616ce5565b610685614e8e616d4d565b616e0860176142f1565b7f436865636b696e67206f6e4c6f636b5265636569766564000000000000000000602082015290565b610656616dfe565b616e4360146142f1565b7f726563656976657220686173206e6f20636f6465000000000000000000000000602082015290565b610656616e39565b616e7e60116142f1565b7f72656365697665722068617320636f6465000000000000000000000000000000602082015290565b610656616e74565b73ffffffffffffffffffffffffffffffffffffffff90911681526106569360808201939092616ee291906154a890615f15565b606081840391015261353c565b616ef960066142f1565b7f747279696e670000000000000000000000000000000000000000000000000000602082015290565b610656616eef565b616f3460066142f1565b7f6661696c65640000000000000000000000000000000000000000000000000000602082015290565b610656616f2a565b600094939192616f7d8483616f78616e31565b6170d0565b600093803b616f8e611fc087610d16565b111561707d5790602091616fa3614e8e616ea7565b616faf61203082610946565b908663c42d8b9595616fdf616fc360405190565b98899687958694616fd48c60e01b90565b865260048601616eaf565b03925af16000928161705d575b506170395750506001616ffc5750565b6170046142fe565b90617010614e8e616f5d565b617024611fc061701e845190565b92610d16565b03617031576040516169e8565b805190602001fd5b616aac91939450617059925061428790617054614e8e616f22565b615f44565b1490565b61707691935060203d8111616b1257616b018183611c1e565b9138616fec565b50505050509050611e28614e8e616e6c565b6040906130946170b1610685959796946060840190848203600086015261353c565b73ffffffffffffffffffffffffffffffffffffffff9097166020830152565b614f10906143e6610685946170e460405190565b9485936004602086017ffcec75e00000000000000000000000000000000000000000000000000000000081520161708f56fea26469706673582212209b5914c0f92f53a4403ee7e99d347f00b6158e3f287d526825816777b7fa699964736f6c63430008110033a26469706673582212200546f84a7e03531a67629f583180ef8dbfce387edba75d5de5a8c8cd09d27f0264736f6c63430008110033",
    "sourceMap": "936:12055:80:-:0;;;;;;;;;-1:-1:-1;936:12055:80;;;;;-1:-1:-1;936:12055:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;3031:77::-;;;;;:::i;936:12055::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;936:12055:80;;;;;;;;1815:81;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1902:83;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2322:82;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1378:74;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1186:69;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2428:87;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1288:84;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1721:88;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1505:104;;;;;:::i;936:12055::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1633:82;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;986:39;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1991:63;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1031:21;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3121:77;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1114:66;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2921:20;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2948:69;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2749:78;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3205:71;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1085:18;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2581:76;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;2663:80;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2833:82;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;:::i;936:12055:80:-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1059:20;;;;;:::i;936:12055::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;1631:104:0:-;1671:64;1679:55;1687:46;1695:37;1703:28;1695:37;:::i;:::-;1687:46;:::i;:::-;1679:55;:::i;:::-;1671:64;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;936:12055:80;;1671:64:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;936:12055:80;;;;1671:64:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;936:12055:80;:::o;1671:64:0:-;936:12055:80;;;1671:64:0;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;936:12055:80;;;1671:64:0;;:::i;1819:584::-;1873:7;;;:::i;:::-;1869:528;;;1903:7;;;:::i;1869:528::-;1961:5;1941:25;1984:16;;:::i;:::-;1980:374;;2367:19;;:::o;1980:374::-;2047:12;;;;;:::i;:::-;1671:64;2221:17;2086:175;;1671:64;2196:43;;936:12055:80;;;;2196:43:0;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;936:12055:80;;2086:175:0;;;;;;;;1671:64;;;;;;;;;936:12055:80;;;2086:175:0;;;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2312:27;;;1671:64;;;2312:27;;;;;;;;:::i;2840:242::-;2928:1;2905:24;;;:::i;:::-;2939:104;3059:16;;2939:104;;3059:16;;:::i;:::-;;936:12055:80;;3059:16:0;;2840:242;:::o;221:94:1:-;260:55;268:46;276:37;284:28;276:37;:::i;268:46::-;260:55;:::i;1222:40::-;1248:14;1251:10;;:::i;:::-;1248:14;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;936:12055:80;;;1248:14:1;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;936:12055:80;;1248:14:1;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;936:12055:80;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;936:12055:80;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;936:12055:80;;1248:14:1;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;936:12055:80;;1248:14:1;;;;;;;;;;;;;;;;;;1671:64:0;;1248:14:1;;;;;:::i;:::-;;;;;;;936:12055:80:o;1248:14:1:-;;;:::i;3830:2080:80:-;4344:35;5527:55;3900:7;:2;;:::i;:7::-;4900:155;3900:7;3892:83;3900:75;;3908:66;3900:75;936:12055;;;;3900:75;;;;;;;1248:14:1;;;;3900:75:80;;;;;;;:::i;:::-;;;;;;;;;;;3830:2080;3900:75;;;;3830:2080;3892:83;;;:::i;:::-;4572:18;4913:142;3985:7;3993:5;;;;:::i;:::-;4000:10;3985:26;4000:10;;3985:26;;;;;;;3830:2080;936:12055;;3985:26;;;;;;;;1248:14:1;;;;3985:26:80;;;;;;;:::i;:::-;;;;;;;;;;;3830:2080;3985:26;;3830:2080;4071:8;4106:81;4071:8;4080:5;;;4071:24;4080:5;;;;:::i;:::-;4071:24;;;;;3830:2080;936:12055;;4071:24;;;;;;;;1248:14:1;;;;4071:24:80;;;;;;;:::i;:::-;;;;;;;;;3830:2080;4071:24;;3830:2080;4120:66;4112:75;;4120:66;4112:75;;;936:12055;;;;4112:75;;;;;;1248:14:1;;;;4112:75:80;;;;;;;;;;;3830:2080;4112:75;;;;3830:2080;4106:81;;;:::i;:::-;4197:24;4205:3;;;;;:::i;:::-;4197:24;;;;;936:12055;;4197:24;936:12055;4197:24;;;;;;;;;;;3830:2080;4197:24;;3830:2080;4240:3;;4231:20;4240:3;;;:::i;:::-;4231:20;;;;;;3830:2080;4231:20;;936:12055;;;;4231:20;;;;;;;:::i;:::-;;;;;;;;;;;3830:2080;4231:20;;3830:2080;4299:15;;;:20;;4796:34;4299:20;;1248:14:1;;4299:20:80;4328:4;4320:13;4328:4;4320:13;:::i;:::-;4299:35;;;;;;;;:::i;:::-;4344;:::i;:::-;4796:34;4389:12;:17;4452:24;4389:17;;1248:14:1;;4389:17:80;:24;;4407:5;4389:24;:::i;:::-;;;:::i;:::-;4452;4470:5;4452:24;:::i;:::-;;;:::i;:::-;4752:34;4516:19;;;:24;:46;:24;;1248:14:1;;4516:24:80;4549:11;;;:::i;:::-;4516:46;;:::i;:::-;4619:37;4572:13;:18;;1248:14:1;;4572:18:80;:37;4599:8;;;:::i;:::-;4572:37;;:::i;:::-;4646:8;;;:::i;4619:37::-;4718:11;;;:::i;:::-;4710:32;;;;;3830:2080;4710:32;;;;;;936:12055;;;;4710:32;;;;;;1248:14:1;;;;4710:32:80;;;;;;;;;;;3830:2080;4710:32;;3830:2080;4760:13;;;;:::i;:::-;4752:34;;;;;3830:2080;4752:34;;936:12055;;;;4752:34;;;;;;;;;1248:14:1;;;;4752:34:80;;;;;;;;;3830:2080;4752:34;;3830:2080;4796:34;;;;;;3830:2080;936:12055;;4796:34;936:12055;4796:34;;;;;;;;;;;3830:2080;4796:34;;3830:2080;5000:17;;5040:14;;;:::i;:::-;4913:142;;936:12055;;;;4913:142;;;;;;;;;;;;;;;;;3830:2080;4913:142;;;;;:::i;:::-;;;;;;;;;3830:2080;4900:155;;:::i;:::-;5065:7;5081;5065:51;5081:7;5073:16;5081:7;;;:::i;5073:16::-;5091:24;:19;5099:10;;;:::i;5091:19::-;:24;:::i;:::-;5065:51;;;;;;3830:2080;936:12055;;5065:51;;;;;;;1248:14:1;;;;5065:51:80;;;;;;;:::i;:::-;;;;;;;;;;;3830:2080;5065:51;;3830:2080;5162:7;5127:43;5162:7;;;:::i;5127:43::-;5237:22;5248:11;936:12055;;;;5248:11;;;;;;;;;;;;;;;3830:2080;5248:11;;;;936:12055;;5248:11;;;;;;;;;3830:2080;5237:22;;:::i;:::-;5269:8;:19;:8;;;:::i;:19::-;;;5312:7;5269:89;5312:7;5304:16;5312:7;;;:::i;5304:16::-;5322:14;5269:89;5322:14;;;:::i;:::-;5338:19;;;:::i;:::-;5269:89;;;;;;3830:2080;936:12055;;5269:89;;;;;;;1248:14:1;;;;5269:89:80;;;;;;;:::i;:::-;;;;;;;;;3830:2080;5269:89;;3830:2080;5480:11;5464:53;5480:11;5472:20;5480:11;;;:::i;5472:20::-;5494:22;:17;5502:8;;;:::i;5494:22::-;5464:53;;;;;;3830:2080;936:12055;;5464:53;;;;;;;1248:14:1;;;;5464:53:80;;;;;;;;;;;3830:2080;5464:53;;3830:2080;5543:13;5535:22;5543:13;;;:::i;5535:22::-;5567:8;5527:55;5567:8;5559:22;:17;5567:8;;;:::i;5559:22::-;5527:55;;;;;;3830:2080;5527:55;;936:12055;;;;5527:55;;;;;;;;1248:14:1;;;;5527:55:80;;;;;;;;;3830:2080;5527:55;;3830:2080;5673:13;5803:48;5813:38;5819:31;5673:71;:13;;;;:::i;:::-;5692:51;;5740:2;5692:51;936:12055;;;;5692:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5673:71;;;;;;;;;5755:38;5673:71;;:::i;:::-;5755:38;;:::i;:::-;5819:31;;;1671:64:0;;;5819:31:80;;;;;;;;:::i;5813:38::-;5803:48;;:::i;:::-;5861:41;5885:16;5893:7;;;:::i;5885:16::-;5861:41;;:::i;:::-;;:::i;5527:55::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;936:12055;;;5527:55;;;5464:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;5464:53;;;5269:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;5269:89;;;5248:11;;;:::i;:::-;;;;;;:::i;:::-;;;5065:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;5065:51;;;4913:142;;;:::i;:::-;;;;;;:::i;:::-;;;4796:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4796:34;;;4752;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4752:34;;;4710:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4710:32;;;4231:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4231:20;;;4197:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4197:24;;;4112:75;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;4071:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;4071:24;;;3985:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3900:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;936:12055;;;;;;;;;;;;;;;;;;;:::i;7508:145:14:-;;7591:54;;7508:145;7591:54;;936:12055:80;;;;7591:54:14;;;;;;;;;;;;;:::i;:::-;852:159;641:376;;735:14;;1671:64:0;;;735:14:14;784:15;852:159;;591:42;852:159;;;641:376::o;936:12055:80:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;936:12055:80:o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;1248:14:1;1671:64:0;;;936:12055:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;6395:5045::-;11415:14;7293:1;6458:18;;:::i;:::-;6555:83;6564:28;;:26;:11;;;:::i;:26::-;;:28;;936:12055;;;;6564:28;;;;1248:14:1;;;;6564:28:80;;;;;;;;;;;;;;6395:5045;6564:28;;;;6395:5045;6602:7;6594:16;6602:7;;;:::i;6594:16::-;6555:83;;:::i;:::-;;;:::i;:::-;11307:97;6700:13;:2;;:::i;:13::-;;;6714:11;6700:26;6714:11;;;:::i;:::-;6700:26;;;;;;6395:5045;6700:26;;936:12055;;;;6700:26;;;;;;;:::i;:::-;;;;;;;;;;;6395:5045;6700:26;;6395:5045;6768:12;8127:83;7683:50;6768:12;7456:70;7465:8;6768:12;;;:::i;:::-;6793:9;;6768:35;6793:9;6768:35;:::i;:::-;6804;;936:12055;;;;6804:35;;;;;;;;;;;;936:12055;6804:35;6768:72;;;;;;;;;;;;:::i;:::-;;6864:6;;;;;:::i;:::-;6876:58;;6922:11;;;:::i;:::-;936:12055;;6876:58;;;;;;;;;;;;:::i;:::-;6864:71;;;;;;;;;;6956:31;6864:71;;:::i;:::-;6852:8;;;6850:85;;;1671:64:0;;6956:31:80;;;;;;;;;:::i;:::-;6945:8;:42;:8;;;:42;;936:12055;;6945:42;6997:60;7006:8;;936:12055;;;7006:8;6997:60;;;:::i;:::-;;;:::i;:::-;7067:40;7098:8;;936:12055;;;7098:8;7067:40;;:::i;:::-;;:::i;:::-;7167:34;:26;7185:6;;;:::i;7167:34::-;:68;:34;7202:13;;;;:::i;:::-;7217:17;7167:68;7217:17;;7167:68;;;936:12055;;;;7167:68;;;;;;;:::i;:::-;;;;;;;;;6395:5045;7167:68;;6395:5045;7255:13;7245:84;:38;:24;7255:13;;;:::i;7245:38::-;;;7284:33;;;;;:::i;:::-;7285:10;7284:33;7285:10;;;:::i;:::-;7284:33;;;936:12055;;7284:33;;;;936:12055;;7284:33;7245:84;7319:9;7245:84;;;;;936:12055;;;;7245:84;;;;;;;:::i;:::-;;;;;;;;;6395:5045;7245:84;;6395:5045;7360:9;7339:54;7350:43;;:30;:20;7360:9;;;:::i;7350:30::-;;7381:11;7350:43;7381:11;;;:::i;:::-;7350:43;;936:12055;;;;7350:43;;;;;;;;1248:14:1;;;;7350:43:80;;;;;;;;;;6395:5045;7350:43;;;;7339:54;;936:12055;;7339:54;7403:43;7437:8;;936:12055;;;7437:8;7403:43;;:::i;:::-;936:12055;;;7465:8;7456:70;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;7683:50;:28;:7;;;:::i;:28::-;7712:20;7720:11;;;:::i;7712:20::-;7683:50;;936:12055;;;;7683:50;;;;;;;;1248:14:1;7683:50:80;1248:14:1;7683:50:80;;;;;;;;;;6395:5045;7683:50;;;;6395:5045;7666:14;7834:71;7666:14;:67;:14;;;:67;;936:12055;;7666:67;7743:47;7775:14;;936:12055;;;7775:14;7743:47;;:::i;:::-;7848:57;:30;:11;;;:::i;:30::-;;;7891:12;7848:57;7891:12;;7848:57;;;936:12055;;;;7848:57;;;;;;;:::i;:::-;;;;;;;;;;6395:5045;7848:57;;;;6395:5045;7834:11;;;;936:12055;;7834:71;7915:23;;;:::i;:::-;;:::i;:::-;7968:11;;7834;;;936:12055;;;7968:11;;:::i;:::-;7990:68;8008:50;;:28;:7;;;:::i;:28::-;8037:20;8045:11;;;:::i;8037:20::-;8008:50;;936:12055;;;;8008:50;;;;;;;;1248:14:1;8008:50:80;1248:14:1;8008:50:80;;;;;;;;;;6395:5045;8008:50;;;;6395:5045;7990:15;;;;936:12055;;7990:68;8068:49;8101:15;7990;;;936:12055;;;8101:15;8068:49;;:::i;:::-;8153:18;:14;8136:15;7990;;;936:12055;;;8136:15;8153:14;936:12055;;;8153:14;:18;8170:1;8153:18;:::i;:::-;;;:::i;:::-;8127:83;;:::i;:::-;9819:12;8279;8284:6;8279:12;:::i;:::-;;;;:::i;:::-;8371:77;8396:52;;:28;:7;;;:::i;:28::-;8425:22;8433:13;;;:::i;8396:52::-;;;;;;;;;;6395:5045;8396:52;;;;6395:5045;8371:22;;;;936:12055;;8371:77;8458:83;8518:22;8371;;;936:12055;;;8518:22;8458:83;;:::i;:::-;8643:102;8660:26;:11;;;:::i;:26::-;:85;8724:8;8687:22;8695:13;;;:::i;8687:22::-;7834:11;8711;7834;;;936:12055;;;8711:11;8734:10;;;;:::i;:::-;8660:85;;;936:12055;;;;8660:85;;;;;;;;1248:14:1;8660:85:80;;;;;;:::i;:::-;;;;;;;;;;6395:5045;8660:85;;;;6395:5045;8646:10;;;;936:12055;;8643:102;8863:74;8887:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;6395:5045;8887:50;;;;6395:5045;8863:21;;;;936:12055;;8863:74;8947:78;8973:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;6395:5045;8973:52;;;;6395:5045;8947:23;;;;936:12055;;8947:78;9035:77;9090:21;8863;;;936:12055;;;9090:21;9035:77;;:::i;:::-;9122:83;9181:23;8947;;;936:12055;;;9181:23;9122:83;;:::i;:::-;9215;9224:21;8863;;;936:12055;;;9224:21;7990:15;;;936:12055;9215:83;;:::i;:::-;9308:99;9317:23;8947;;;936:12055;;;9317:23;9343:26;:22;8371;;;936:12055;;;9343:26;9308:99;;:::i;:::-;9595:17;;;;;6395:5045;936:12055;;1248:14:1;9595:17:80;;;936:12055;9595:17;936:12055;9595:17;;;;;;;;6395:5045;9595:17;;6395:5045;9622:11;:26;:11;;;:::i;:26::-;:141;8724:8;9649:22;9657:13;;;:::i;9649:22::-;7834:11;9673;7834;;;936:12055;;;9673:11;9696:66;;9622:141;;;936:12055;;;;9622:141;;;;;;;;1248:14:1;9622:141:80;;;;;;:::i;:::-;;;;;;;;;6395:5045;9622:141;;6395:5045;9819:12;;:::i;:::-;10037:135;10046:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;6395:5045;10046:52;;;;6395:5045;-1:-1:-1;8947:23:80;;;936:12055;10037:135;;:::i;:::-;10182:129;10191:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;6395:5045;10191:50;;;;6395:5045;-1:-1:-1;8863:21:80;;;936:12055;10182:129;;:::i;:::-;10692:64;10389:26;:11;;;:::i;:26::-;:85;8724:8;10416:22;10424:13;;;:::i;10416:22::-;7834:11;10440;7834;;;936:12055;;;10440:11;8646:10;10463;8646;;;936:12055;;;10463:10;10389:85;;;936:12055;;;;10389:85;;;;;;;;;;6395:5045;10389:85;;;;6395:5045;10375:10;10372:102;10375:10;;;10372:102;;936:12055;;10372:102;10573:27;;;:::i;:::-;10630:10;;8646;;;936:12055;;;10630:10;10671;;;936:12055;;;10671:10;10713;10701;8646;;;936:12055;;;10701:10;10713;936:12055;;;10713:10;10692:64;;:::i;:::-;;;:::i;:::-;11341:23;8947;11316;10973:52;10887:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;6395:5045;10887:50;;;;6395:5045;10863:21;:74;:21;;;:74;;936:12055;;10863:74;10973:52;:28;:7;;;:::i;:28::-;11002:22;11010:13;;;:::i;10973:52::-;;;;;;;;;;6395:5045;10973:52;;;;6395:5045;10947:23;11215:21;11206:91;10947:23;:78;:23;;;:78;;936:12055;;10947:78;11035:77;11090:21;;936:12055;;;11090:21;11035:77;;:::i;:::-;11122:74;11172:23;;936:12055;;;11172:23;11122:74;;:::i;11215:21::-;8863;;;936:12055;11206:91;;:::i;11316:23::-;8947;;936:12055;;;11341:23;11307:97;;:::i;:::-;11415:12;:14;;;;;;6395:5045;936:12055;;11415:14;936:12055;11415:14;;;;;;;;;;;;;;;;;;6395:5045;11415:14;;6395:5045;:::o;11415:14::-;;;7293:1;11415:14;;;;:::i;:::-;;;:::i;:::-;;;;;936:12055;;;11415:14;;;10973:52;11206:91;10973:52;;;;11215:21;10973:52;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;10887:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10389:85;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;10191:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10046:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9622:141;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9595:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;9595:17;;;8973:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;8887:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;8660:85;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;8396:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;8008:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;7848:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;7683:50;7834:71;7683:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;7350:43;;;;;;;;;;;;;;:::i;:::-;7339:54;936:12055;;7350:43;;;:::i;:::-;;;7245:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;7167:68;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;6700:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;936:12055;;;6700:26;;;6564:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;936:12055;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;1671:64:0;936:12055:80;;;;;;;;1671:64:0;;;936:12055:80;:::i;3897:185:0:-;3979:6;;;:::i;:::-;;;;:::i;:::-;;3975:101;;3897:185;;;:::o;3975:101::-;4063:1;4006:31;;;;;936:12055:80;;;;4006:31:0;;;;;;:::i;:::-;;;;4063:1;:::i;936:12055:80:-;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;1671:64:0;936:12055:80;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;1671:64:0;3615:277;;3678:6;;;:::i;:::-;;;;:::i;:::-;;3674:212;;3615:277;;:::o;3674:212::-;3768:34;3705:44;3821:34;3705:44;;;936:12055:80;;;;3705:44:0;936:12055:80;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;3705:44;3768:34;;;;;936:12055:80;;;;3768:34:0;;;;;;:::i;:::-;;;;936:12055:80;;3821:34:0;;;;;:::i;:::-;;;;;;:::i;936:12055:80:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2410:424:0:-;2449:16;;:::i;:::-;2445:359;;2410:424;2813:14;2823:4;2813:14;;:::i;2445:359::-;2499:245;:12;;;:::i;:::-;1671:64;2670:17;2534:196;;2645:67;;1671:64;2689:22;2697:13;2705:4;2697:13;:::i;:::-;2689:22;:::i;:::-;2645:67;;936:12055:80;;;;2645:67:0;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;4370:185;4452:6;;;4448:101;;4370:185;;;:::o;4448:101::-;4536:1;4479:31;;;;;936:12055:80;;;;4479:31:0;;;;4536:1;:::i;936:12055:80:-;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;;;;;;;;;;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;;;;4088:277:0;;;4151:6;;4147:212;;4088:277;;:::o;4147:212::-;4241:34;4178:44;4294:34;4178:44;;;936:12055:80;;;;4178:44:0;936:12055:80;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;4178:44;4241:34;;;;;936:12055:80;;;;4241:34:0;;;;;;:::i;:::-;;;;936:12055:80;;4294:34:0;;;;;:::i;5469:178::-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;5628:1;5572:30;;;;;936:12055:80;;;;5572:30:0;;;;5202:262;;5259:6;;5255:203;;5202:262;;:::o;5255:203::-;5346:31;5286:41;5396:31;5286:41;;;936:12055:80;;;;5286:41:0;936:12055:80;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;5286:41;5346:31;;;;;936:12055:80;;;;7020:178:0;7096:6;;;;7092:100;;7020:178;;;:::o;7092:100::-;7179:1;7123:30;;;;;936:12055:80;;;;7123:30:0;;;;7179:1;:::i;936:12055:80:-;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;;;;;;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;;936:12055:80;;;;6756:259:0;6813:6;;;;6809:200;;6756:259;;:::o;6809:200::-;6899:30;6840:40;6948:30;6840:40;;;936:12055:80;;;;6840:40:0;936:12055:80;;;;;;;;1248:14:1;936:12055:80;1248:14:1;;;936:12055:80;;;;;;1671:64:0;;6840:40;6899:30;;;;;936:12055:80;;;;6899:30:0;;;;;;:::i;:::-;;;;936:12055:80;;6948:30:0;;;;;:::i;16060:84:5:-;16085:59;16088:55;16096:46;16104:37;16112:28;16104:37;:::i;16255:93::-;16310:31;;16255:93;16310:7;:2;;:::i;:7::-;:31;:7;16318:22;16310:7;16318:15;;:22;:::i;:::-;16310:31;;;;;;16255:93;936:12055:80;;16310:31:5;;;;;;;1248:14:1;;;;16310:31:5;;;;;;936:12055:80;16085:59:5;;;;936:12055:80;16310:31:5;;936:12055:80;;;16310:31:5;;;5857:123:14;5929:43;;;5857:123;5929:43;936:12055:80;;;;5929:43:14;;;;;;;;;;;;936:12055:80;;;16085:59:5;;;936:12055:80;;;;;;;;;;;;:::i;6108:121:14:-;6179:42;;;6108:121;6179:42;936:12055:80;;;;6179:42:14;;;;;;;;;;;;;:::i;936:12055:80:-;;;;;;;;;;;;;;;;;;;:::i;7056:145:14:-;;7139:54;;7056:145;7139:54;;936:12055:80;;;;7139:54:14;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "convexBooster()": "2cdacb50",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "distributor()": "bfe10928",
    "eth()": "8c7c9e0c",
    "failed()": "ba414fa6",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFarm()": "6fa89364",
    "fxsToken()": "09dacc04",
    "myVault()": "9f5f0520",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testDepositAndSendToExsitingVaults()": "c7b19271",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDepositAndSendToExsitingVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"\",\"stackAllocation\":true}},\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax-solidity/src/hardhat/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d\",\"dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol\":{\"keccak256\":\"0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200\",\"dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol\":{\"keccak256\":\"0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f\",\"dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR\"]},\"lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/Math.sol\":{\"keccak256\":\"0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1\",\"dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol\":{\"keccak256\":\"0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98\",\"dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol\":{\"keccak256\":\"0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84\",\"dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol\":{\"keccak256\":\"0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15\",\"dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol\":{\"keccak256\":\"0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9\",\"dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol\":{\"keccak256\":\"0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613\",\"dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol\":{\"keccak256\":\"0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320\",\"dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol\":{\"keccak256\":\"0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5\",\"urls\":[\"bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72\",\"dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol\":{\"keccak256\":\"0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b\",\"dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol\":{\"keccak256\":\"0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c\",\"dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol\":{\"keccak256\":\"0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94\",\"dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol\":{\"keccak256\":\"0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5\",\"dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol\":{\"keccak256\":\"0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02\",\"dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol\":{\"keccak256\":\"0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff\",\"dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol\":{\"keccak256\":\"0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108\",\"dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol\":{\"keccak256\":\"0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47\",\"dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b\",\"dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a\",\"dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol\":{\"keccak256\":\"0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763\",\"dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d\",\"dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol\":{\"keccak256\":\"0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78\",\"dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol\":{\"keccak256\":\"0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0\",\"dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol\":{\"keccak256\":\"0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc\",\"dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b\",\"dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0xb6fc778df70bd8a98883a8d7eb457db6758e308bd418f35409c215ce86ae76d5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ea54bdbc03034fec8f18a15a9f98151dd9686623a8c8f30400820f9362f85c97\",\"dweb:/ipfs/QmaG4M1sYReHnTok9EnnayEHcXi8NB9cjzFeQpAKPu16zp\"]},\"src/FraxFarmERC20Transferrable.sol\":{\"keccak256\":\"0x994cf8716c7a17889ef4fb4a6cbdcc704d76bea16346a00322a1dc86e39f570d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ec5aeb42c4cddef4ea2e2c8c87bc632454edaf91d8df546e03d2d2d2cdcd51a7\",\"dweb:/ipfs/QmcBB8qnbAo8VUEKWxWWdPUB5k7CLehawovE8KAas8mE12\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3\",\"dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0xbcbdc39d5d233623144d8696d402c7a309036d4163ff19ef08e98909ddf85e4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://29c3f575a8a18614f7c2ca0b02ac9fab3d131c5d8fa3f6843da389ff7d8782be\",\"dweb:/ipfs/QmdVszW3VfFX5VPaQ7VGpDhwRpJ8XjYba8RsTeiSwn7WHe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "myVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDepositAndSendToExsitingVaults"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "runs": 100000,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": ""
          }
        }
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol": {
        "keccak256": "0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e",
        "urls": [
          "bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d",
          "dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol": {
        "keccak256": "0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6",
        "urls": [
          "bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200",
          "dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol": {
        "keccak256": "0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172",
        "urls": [
          "bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f",
          "dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/Math.sol": {
        "keccak256": "0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda",
        "urls": [
          "bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1",
          "dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol": {
        "keccak256": "0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee",
        "urls": [
          "bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98",
          "dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol": {
        "keccak256": "0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad",
        "urls": [
          "bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84",
          "dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol": {
        "keccak256": "0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e",
        "urls": [
          "bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78",
          "dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol": {
        "keccak256": "0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7",
        "urls": [
          "bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb",
          "dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol": {
        "keccak256": "0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd",
        "urls": [
          "bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15",
          "dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol": {
        "keccak256": "0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d",
        "urls": [
          "bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9",
          "dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol": {
        "keccak256": "0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a",
        "urls": [
          "bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613",
          "dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol": {
        "keccak256": "0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c",
        "urls": [
          "bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89",
          "dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol": {
        "keccak256": "0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27",
        "urls": [
          "bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320",
          "dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol": {
        "keccak256": "0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5",
        "urls": [
          "bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72",
          "dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4"
        ],
        "license": null
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol": {
        "keccak256": "0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89",
        "urls": [
          "bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b",
          "dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol": {
        "keccak256": "0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7",
        "urls": [
          "bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c",
          "dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol": {
        "keccak256": "0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665",
        "urls": [
          "bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94",
          "dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol": {
        "keccak256": "0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b",
        "urls": [
          "bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5",
          "dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol": {
        "keccak256": "0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930",
        "urls": [
          "bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02",
          "dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol": {
        "keccak256": "0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838",
        "urls": [
          "bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff",
          "dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol": {
        "keccak256": "0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515",
        "urls": [
          "bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108",
          "dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol": {
        "keccak256": "0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff",
        "urls": [
          "bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47",
          "dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3",
        "urls": [
          "bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b",
          "dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c",
        "urls": [
          "bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a",
          "dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol": {
        "keccak256": "0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b",
        "urls": [
          "bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763",
          "dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol": {
        "keccak256": "0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285",
        "urls": [
          "bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d",
          "dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol": {
        "keccak256": "0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4",
        "urls": [
          "bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78",
          "dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol": {
        "keccak256": "0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d",
        "urls": [
          "bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0",
          "dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol": {
        "keccak256": "0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21",
        "urls": [
          "bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc",
          "dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol": {
        "keccak256": "0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784",
        "urls": [
          "bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b",
          "dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0xb6fc778df70bd8a98883a8d7eb457db6758e308bd418f35409c215ce86ae76d5",
        "urls": [
          "bzz-raw://ea54bdbc03034fec8f18a15a9f98151dd9686623a8c8f30400820f9362f85c97",
          "dweb:/ipfs/QmaG4M1sYReHnTok9EnnayEHcXi8NB9cjzFeQpAKPu16zp"
        ],
        "license": "UNLICENSED"
      },
      "src/FraxFarmERC20Transferrable.sol": {
        "keccak256": "0x994cf8716c7a17889ef4fb4a6cbdcc704d76bea16346a00322a1dc86e39f570d",
        "urls": [
          "bzz-raw://ec5aeb42c4cddef4ea2e2c8c87bc632454edaf91d8df546e03d2d2d2cdcd51a7",
          "dweb:/ipfs/QmcBB8qnbAo8VUEKWxWWdPUB5k7CLehawovE8KAas8mE12"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e",
        "urls": [
          "bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3",
          "dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0xbcbdc39d5d233623144d8696d402c7a309036d4163ff19ef08e98909ddf85e4a",
        "urls": [
          "bzz-raw://29c3f575a8a18614f7c2ca0b02ac9fab3d131c5d8fa3f6843da389ff7d8782be",
          "dweb:/ipfs/QmdVszW3VfFX5VPaQ7VGpDhwRpJ8XjYba8RsTeiSwn7WHe"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 46312,
    "exportedSymbols": {
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "FRAXStablecoin": [
        34406
      ],
      "FraxFarmERC20TransfersTest": [
        46311
      ],
      "FraxUnifiedFarm_ERC20": [
        44826
      ],
      "IDeposits": [
        45424
      ],
      "IFraxFarmERC20": [
        45283
      ],
      "IFraxFarmTransfers": [
        45208
      ],
      "IFraxGaugeController": [
        39604
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        42648
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:12953:80",
    "nodes": [
      {
        "id": 45365,
        "nodeType": "PragmaDirective",
        "src": "39:24:80",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 45366,
        "nodeType": "ImportDirective",
        "src": "65:28:80",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45367,
        "nodeType": "ImportDirective",
        "src": "94:26:80",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45369,
        "nodeType": "ImportDirective",
        "src": "122:76:80",
        "nodes": [],
        "absolutePath": "src/FraxFarmERC20Transferrable.sol",
        "file": "../src/FraxFarmERC20Transferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 44854,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45368,
              "name": "FraxUnifiedFarm_ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44826,
              "src": "130:21:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45371,
        "nodeType": "ImportDirective",
        "src": "199:80:80",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 42649,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45370,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42648,
              "src": "207:18:80",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45373,
        "nodeType": "ImportDirective",
        "src": "280:54:80",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol",
        "file": "@frax/../Frax/Frax.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 34407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45372,
              "name": "FRAXStablecoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34406,
              "src": "288:14:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45376,
        "nodeType": "ImportDirective",
        "src": "335:77:80",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 45364,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45374,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45208,
              "src": "343:18:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45375,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45283,
              "src": "363:14:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45377,
        "nodeType": "ImportDirective",
        "src": "413:61:80",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46312,
        "sourceUnit": 39605,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45424,
        "nodeType": "ContractDefinition",
        "src": "476:458:80",
        "nodes": [
          {
            "id": 45388,
            "nodeType": "FunctionDefinition",
            "src": "502:104:80",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "511:13:80",
            "parameters": {
              "id": 45384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45381,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "543:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45388,
                  "src": "525:26:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45378,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "525:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45380,
                    "length": {
                      "hexValue": "32",
                      "id": 45379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "533:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "525:10:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45383,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "561:16:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45388,
                  "src": "553:24:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:54:80"
            },
            "returnParameters": {
              "id": 45387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45388,
                  "src": "597:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:9:80"
            },
            "scope": 45424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45395,
            "nodeType": "FunctionDefinition",
            "src": "611:68:80",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "620:9:80",
            "parameters": {
              "id": 45391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45390,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "638:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45395,
                  "src": "630:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:17:80"
            },
            "returnParameters": {
              "id": 45394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45395,
                  "src": "670:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:9:80"
            },
            "scope": 45424,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45404,
            "nodeType": "FunctionDefinition",
            "src": "684:74:80",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "693:7:80",
            "parameters": {
              "id": 45400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45397,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "709:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45404,
                  "src": "701:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45399,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "726:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45404,
                  "src": "718:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:33:80"
            },
            "returnParameters": {
              "id": 45403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45404,
                  "src": "752:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "751:6:80"
            },
            "scope": 45424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45409,
            "nodeType": "FunctionDefinition",
            "src": "763:43:80",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "772:7:80",
            "parameters": {
              "id": 45407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45406,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "788:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45409,
                  "src": "780:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "779:17:80"
            },
            "returnParameters": {
              "id": 45408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:0:80"
            },
            "scope": 45424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45416,
            "nodeType": "FunctionDefinition",
            "src": "811:56:80",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "820:7:80",
            "parameters": {
              "id": 45414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45411,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "836:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45416,
                  "src": "828:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45413,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "853:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45416,
                  "src": "845:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:30:80"
            },
            "returnParameters": {
              "id": 45415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:80"
            },
            "scope": 45424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45423,
            "nodeType": "FunctionDefinition",
            "src": "872:60:80",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "881:10:80",
            "parameters": {
              "id": 45421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45418,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "900:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45423,
                  "src": "892:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45420,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "913:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45423,
                  "src": "908:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45419,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:31:80"
            },
            "returnParameters": {
              "id": 45422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:80"
            },
            "scope": 45424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45424
        ],
        "name": "IDeposits",
        "nameLocation": "486:9:80",
        "scope": 46312,
        "usedErrors": []
      },
      {
        "id": 46311,
        "nodeType": "ContractDefinition",
        "src": "936:12055:80",
        "nodes": [
          {
            "id": 45429,
            "nodeType": "VariableDeclaration",
            "src": "986:39:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1015:10:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45428,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45427,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "986:21:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44826,
                "src": "986:21:80"
              },
              "referencedDeclaration": 44826,
              "src": "986:21:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45432,
            "nodeType": "VariableDeclaration",
            "src": "1031:21:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1044:8:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45431,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45430,
                "name": "Vault",
                "nameLocations": [
                  "1031:5:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "1031:5:80"
              },
              "referencedDeclaration": 42648,
              "src": "1031:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45434,
            "nodeType": "VariableDeclaration",
            "src": "1059:20:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1074:5:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45433,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1059:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45436,
            "nodeType": "VariableDeclaration",
            "src": "1085:18:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1100:3:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45435,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1085:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45439,
            "nodeType": "VariableDeclaration",
            "src": "1114:66:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1129:6:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45437,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1114:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 45438,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1138:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 45442,
            "nodeType": "VariableDeclaration",
            "src": "1186:69:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1201:9:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45440,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1186:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 45441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1213:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 45448,
            "nodeType": "VariableDeclaration",
            "src": "1288:84:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "1303:15:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45443,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1288:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 45446,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1329:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45445,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1321:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1321:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1321:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45451,
            "nodeType": "VariableDeclaration",
            "src": "1378:74:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "1393:14:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45449,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1378:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 45450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1410:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 45457,
            "nodeType": "VariableDeclaration",
            "src": "1505:104:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "1534:7:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45453,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45452,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "1505:21:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44826,
                "src": "1505:21:80"
              },
              "referencedDeclaration": 44826,
              "src": "1505:21:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 45455,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1566:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45454,
                "name": "FraxUnifiedFarm_ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44826,
                "src": "1544:21:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44826_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                }
              },
              "id": 45456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1544:65:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45463,
            "nodeType": "VariableDeclaration",
            "src": "1633:82:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "1648:13:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45458,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1633:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 45461,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1672:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45460,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1664:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45459,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1664:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45462,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1664:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45469,
            "nodeType": "VariableDeclaration",
            "src": "1721:88:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "1736:19:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45464,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1721:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 45467,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1766:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45466,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1758:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45465,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1758:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45468,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1758:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45475,
            "nodeType": "VariableDeclaration",
            "src": "1815:81:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "1830:12:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45470,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1815:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 45473,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1853:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45472,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1845:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45471,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1845:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1845:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45481,
            "nodeType": "VariableDeclaration",
            "src": "1902:83:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "1917:14:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45476,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 45479,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1942:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45478,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1934:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1934:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45480,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1934:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45484,
            "nodeType": "VariableDeclaration",
            "src": "1991:63:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c7c9e0c",
            "mutability": "mutable",
            "name": "eth",
            "nameLocation": "2006:3:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45482,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1991:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 45483,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2012:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "public"
          },
          {
            "id": 45490,
            "nodeType": "VariableDeclaration",
            "src": "2322:82:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "2337:13:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45485,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2322:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 45488,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2361:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45487,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2353:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45486,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2353:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45489,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2353:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45496,
            "nodeType": "VariableDeclaration",
            "src": "2428:87:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "2443:18:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45491,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2428:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 45494,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2472:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45493,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2464:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45492,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2464:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45495,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2464:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45502,
            "nodeType": "VariableDeclaration",
            "src": "2581:76:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "2594:11:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45498,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45497,
                "name": "Vault",
                "nameLocations": [
                  "2581:5:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "2581:5:80"
              },
              "referencedDeclaration": 42648,
              "src": "2581:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 45500,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2614:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45499,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42648,
                "src": "2608:5:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45501,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2608:49:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45508,
            "nodeType": "VariableDeclaration",
            "src": "2663:80:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "2678:11:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45503,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2663:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 45506,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2700:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45505,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2692:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45504,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2692:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45507,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2692:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45514,
            "nodeType": "VariableDeclaration",
            "src": "2749:78:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "2762:13:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45510,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45509,
                "name": "Vault",
                "nameLocations": [
                  "2749:5:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "2749:5:80"
              },
              "referencedDeclaration": 42648,
              "src": "2749:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 45512,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2784:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45511,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42648,
                "src": "2778:5:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45513,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2778:49:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45520,
            "nodeType": "VariableDeclaration",
            "src": "2833:82:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "2848:13:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2833:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 45518,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2872:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45517,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2864:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45516,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2864:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45519,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2864:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45523,
            "nodeType": "VariableDeclaration",
            "src": "2921:20:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "9f5f0520",
            "mutability": "mutable",
            "name": "myVault",
            "nameLocation": "2934:7:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45522,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45521,
                "name": "Vault",
                "nameLocations": [
                  "2921:5:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42648,
                "src": "2921:5:80"
              },
              "referencedDeclaration": 42648,
              "src": "2921:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45526,
            "nodeType": "VariableDeclaration",
            "src": "2948:69:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "2963:9:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45524,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2948:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 45525,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2975:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 45532,
            "nodeType": "VariableDeclaration",
            "src": "3031:77:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "3046:8:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45527,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3031:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 45530,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3065:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45529,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3057:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45528,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3057:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45531,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3057:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45538,
            "nodeType": "VariableDeclaration",
            "src": "3121:77:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "3136:8:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45533,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3121:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 45536,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3155:42:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45535,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3147:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45534,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3147:7:80",
                  "typeDescriptions": {}
                }
              },
              "id": 45537,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3147:51:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45541,
            "nodeType": "VariableDeclaration",
            "src": "3205:71:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "3220:11:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45539,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3205:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
              "id": 45540,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3234:42:80",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
            },
            "visibility": "public"
          },
          {
            "id": 45544,
            "nodeType": "VariableDeclaration",
            "src": "3633:31:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "3651:13:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45542,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3633:7:80",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45543,
              "nodeType": "ArrayTypeName",
              "src": "3633:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45547,
            "nodeType": "VariableDeclaration",
            "src": "3670:33:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "3688:15:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45545,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3670:7:80",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45546,
              "nodeType": "ArrayTypeName",
              "src": "3670:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45550,
            "nodeType": "VariableDeclaration",
            "src": "3709:30:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "3727:12:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 45548,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3709:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 45549,
              "nodeType": "ArrayTypeName",
              "src": "3709:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45553,
            "nodeType": "VariableDeclaration",
            "src": "3745:35:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "3763:17:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45551,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3745:7:80",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45552,
              "nodeType": "ArrayTypeName",
              "src": "3745:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45556,
            "nodeType": "VariableDeclaration",
            "src": "3786:37:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "3804:19:80",
            "scope": 46311,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45554,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3786:7:80",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45555,
              "nodeType": "ArrayTypeName",
              "src": "3786:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45810,
            "nodeType": "FunctionDefinition",
            "src": "3830:2080:80",
            "nodes": [],
            "body": {
              "id": 45809,
              "nodeType": "Block",
              "src": "3854:2056:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45559,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45434,
                      "src": "3892:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3908:66:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 45560,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "3900:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3903:4:80",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "3900:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3900:75:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3892:83:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45565,
                  "nodeType": "ExpressionStatement",
                  "src": "3892:83:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45569,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45434,
                        "src": "3993:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4000:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45566,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "3985:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3988:4:80",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "3985:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:26:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45572,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:26:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45576,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45434,
                        "src": "4080:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4087:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45573,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4071:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4074:5:80",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4071:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45579,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:24:80"
                },
                {
                  "expression": {
                    "id": 45585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45580,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45436,
                      "src": "4106:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4120:66:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 45581,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4112:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4115:4:80",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4112:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4112:75:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4106:81:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45586,
                  "nodeType": "ExpressionStatement",
                  "src": "4106:81:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45590,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45436,
                        "src": "4205:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4210:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45587,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4197:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4200:4:80",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4197:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45593,
                  "nodeType": "ExpressionStatement",
                  "src": "4197:24:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45597,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45436,
                        "src": "4240:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 45598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4245:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 45594,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4231:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4234:5:80",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4231:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:20:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45600,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:20:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45606,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4328:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4320:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4320:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4320:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45601,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45547,
                        "src": "4299:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4315:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4299:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4299:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45609,
                  "nodeType": "ExpressionStatement",
                  "src": "4299:35:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45615,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4373:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4365:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45613,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4365:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4365:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45610,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45547,
                        "src": "4344:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4360:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4344:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4344:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45618,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:35:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3132333435",
                        "id": 45622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4407:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        },
                        "value": "12345"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        }
                      ],
                      "expression": {
                        "id": 45619,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45550,
                        "src": "4389:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4402:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4389:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4389:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45624,
                  "nodeType": "ExpressionStatement",
                  "src": "4389:24:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3234363930",
                        "id": 45628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4470:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        },
                        "value": "24690"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        }
                      ],
                      "expression": {
                        "id": 45625,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45550,
                        "src": "4452:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4465:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4452:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4452:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45630,
                  "nodeType": "ExpressionStatement",
                  "src": "4452:24:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45636,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45541,
                            "src": "4549:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4541:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45634,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4541:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4541:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45631,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45556,
                        "src": "4516:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4536:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4516:24:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:46:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45639,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:46:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45645,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45532,
                            "src": "4599:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4591:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4591:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4591:17:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45640,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45544,
                        "src": "4572:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4586:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4572:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4572:37:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45648,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:37:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45654,
                            "name": "cvxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45538,
                            "src": "4646:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4638:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45652,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4638:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4638:17:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45649,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45544,
                        "src": "4619:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4633:4:80",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4619:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:37:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45657,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:37:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45661,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "4718:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4731:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45658,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4710:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4713:4:80",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4710:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45664,
                  "nodeType": "ExpressionStatement",
                  "src": "4710:32:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45668,
                        "name": "receiverOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45520,
                        "src": "4760:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4775:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45665,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4752:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4755:4:80",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4752:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:34:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45671,
                  "nodeType": "ExpressionStatement",
                  "src": "4752:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45677,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4812:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4804:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4804:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4819:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45672,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4796:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4799:4:80",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4796:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4796:34:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45681,
                  "nodeType": "ExpressionStatement",
                  "src": "4796:34:80"
                },
                {
                  "expression": {
                    "id": 45697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45682,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45429,
                      "src": "4900:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45688,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4947:4:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 45687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4939:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4939:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4939:13:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45690,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "4954:13:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45691,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45547,
                          "src": "4969:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45692,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45550,
                          "src": "4986:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 45693,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45553,
                          "src": "5000:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45694,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45556,
                          "src": "5019:19:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45695,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45451,
                          "src": "5040:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4913:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_$44826_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20)"
                        },
                        "typeName": {
                          "id": 45684,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45683,
                            "name": "FraxUnifiedFarm_ERC20",
                            "nameLocations": [
                              "4917:21:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44826,
                            "src": "4917:21:80"
                          },
                          "referencedDeclaration": 44826,
                          "src": "4917:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      },
                      "id": 45696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4913:142:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "4900:155:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45698,
                  "nodeType": "ExpressionStatement",
                  "src": "4900:155:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45704,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45457,
                            "src": "5081:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5073:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5073:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5073:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45708,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45429,
                              "src": "5099:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            ],
                            "id": 45707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5091:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5091:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5091:19:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5111:4:80",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5091:24:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45699,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5065:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5068:4:80",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5065:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:51:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45712,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:51:80"
                },
                {
                  "expression": {
                    "id": 45717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45713,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45429,
                      "src": "5127:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45715,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "5162:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        ],
                        "id": 45714,
                        "name": "FraxUnifiedFarm_ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44826,
                        "src": "5140:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44826_$",
                          "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                        }
                      },
                      "id": 45716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5140:30:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "5127:43:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45718,
                  "nodeType": "ExpressionStatement",
                  "src": "5127:43:80"
                },
                {
                  "expression": {
                    "id": 45724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45719,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45432,
                      "src": "5237:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5248:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$42648_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 45721,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45720,
                            "name": "Vault",
                            "nameLocations": [
                              "5252:5:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42648,
                            "src": "5252:5:80"
                          },
                          "referencedDeclaration": 42648,
                          "src": "5252:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 45723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5248:11:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "5237:22:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45725,
                  "nodeType": "ExpressionStatement",
                  "src": "5237:22:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45731,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5297:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$46311",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5289:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5289:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5289:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45735,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45457,
                            "src": "5312:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5304:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5304:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5304:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45737,
                        "name": "cvxStkFrxEthLp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45451,
                        "src": "5322:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45738,
                        "name": "vaultRewardsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45469,
                        "src": "5338:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45726,
                        "name": "cvxVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45432,
                        "src": "5269:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 45728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5278:10:80",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41773,
                      "src": "5269:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 45739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5269:89:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45740,
                  "nodeType": "ExpressionStatement",
                  "src": "5269:89:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45746,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45502,
                            "src": "5480:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5472:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45744,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5472:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5472:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45750,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45432,
                              "src": "5502:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5494:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45748,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5494:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:17:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5512:4:80",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5494:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45741,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5464:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5467:4:80",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5464:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5464:53:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45754,
                  "nodeType": "ExpressionStatement",
                  "src": "5464:53:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45760,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45514,
                            "src": "5543:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5535:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5535:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5535:22:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45764,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45432,
                              "src": "5567:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5559:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5559:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5559:17:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5577:4:80",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5559:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45755,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5527:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5530:4:80",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5527:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:55:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45768,
                  "nodeType": "ExpressionStatement",
                  "src": "5527:55:80"
                },
                {
                  "assignments": [
                    45770,
                    45772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45770,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5639:7:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45809,
                      "src": "5634:12:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45769,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5634:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45772,
                      "mutability": "mutable",
                      "name": "retBytes",
                      "nameLocation": "5661:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45809,
                      "src": "5648:21:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45771,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5648:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45781,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6372656174655661756c742875696e7432353629",
                            "id": 45777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5716:22:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            "value": "createVault(uint256)"
                          },
                          {
                            "hexValue": "3336",
                            "id": 45778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5740:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            }
                          ],
                          "expression": {
                            "id": 45775,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5692:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5696:19:80",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5692:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 45779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5692:51:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45773,
                        "name": "convexBooster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45490,
                        "src": "5673:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 45774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5687:4:80",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "5673:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5673:71:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5633:111:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45783,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45770,
                        "src": "5763:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6372656174655661756c74206661696c6564",
                        "id": 45784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5772:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        },
                        "value": "createVault failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        }
                      ],
                      "id": 45782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5755:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:38:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45786,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:38:80"
                },
                {
                  "expression": {
                    "id": 45797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45787,
                      "name": "myVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45523,
                      "src": "5803:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45791,
                              "name": "retBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45772,
                              "src": "5830:8:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 45793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5841:7:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 45792,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5841:7:80",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 45794,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5840:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 45789,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5819:3:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5823:6:80",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5819:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 45795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5819:31:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 45788,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42648,
                        "src": "5813:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42648_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 45796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5813:38:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "5803:48:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45798,
                  "nodeType": "ExpressionStatement",
                  "src": "5803:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d795661756c74",
                        "id": 45802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5874:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db9c5ba2ab6c96288de443d0b9c5805da05683230847cd139f4a44f8c9ff576c",
                          "typeString": "literal_string \"MyVault\""
                        },
                        "value": "MyVault"
                      },
                      {
                        "arguments": [
                          {
                            "id": 45805,
                            "name": "myVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45523,
                            "src": "5893:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5885:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5885:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5885:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_db9c5ba2ab6c96288de443d0b9c5805da05683230847cd139f4a44f8c9ff576c",
                          "typeString": "literal_string \"MyVault\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45799,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5861:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5870:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "5861:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 45807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5861:41:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45808,
                  "nodeType": "ExpressionStatement",
                  "src": "5861:41:80"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3839:5:80",
            "parameters": {
              "id": 45557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3844:2:80"
            },
            "returnParameters": {
              "id": 45558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3854:0:80"
            },
            "scope": 46311,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45835,
            "nodeType": "StructDefinition",
            "src": "5989:400:80",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 45812,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "6022:6:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6016:12:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 45811,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "6016:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45814,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "6046:6:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6038:14:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45813,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6038:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45816,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "6070:12:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6062:20:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45815,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6062:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45818,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "6100:13:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6092:21:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45817,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6092:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45820,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "6131:19:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6123:27:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6123:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45822,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "6168:19:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6160:27:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6160:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45824,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "6205:20:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6197:28:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45823,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6197:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45826,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "6243:21:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6235:29:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45825,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6235:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45828,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "6282:21:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6274:29:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45827,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6274:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45830,
                "mutability": "mutable",
                "name": "senderKek",
                "nameLocation": "6321:9:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6313:17:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45829,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "6313:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45832,
                "mutability": "mutable",
                "name": "destKek1",
                "nameLocation": "6348:8:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6340:16:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45831,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "6340:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45834,
                "mutability": "mutable",
                "name": "destKek2",
                "nameLocation": "6374:8:80",
                "nodeType": "VariableDeclaration",
                "scope": 45835,
                "src": "6366:16:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 45833,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "6366:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "5996:9:80",
            "scope": 46311,
            "visibility": "public"
          },
          {
            "id": 46310,
            "nodeType": "FunctionDefinition",
            "src": "6395:5045:80",
            "nodes": [],
            "body": {
              "id": 46309,
              "nodeType": "Block",
              "src": "6448:4992:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45840,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "6475:1:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 46309,
                      "src": "6458:18:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 45839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45838,
                          "name": "TestState",
                          "nameLocations": [
                            "6458:9:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45835,
                          "src": "6458:9:80"
                        },
                        "referencedDeclaration": 45835,
                        "src": "6458:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45841,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:18:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45843,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45502,
                            "src": "6564:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 45844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6576:14:80",
                          "memberName": "stakingAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40931,
                          "src": "6564:26:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 45845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6564:28:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45848,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45457,
                            "src": "6602:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6594:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45846,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6594:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6594:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374616b696e672061646472657373",
                        "id": 45850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6612:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        },
                        "value": "invalid staking address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        }
                      ],
                      "id": 45842,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "6555:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 45851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6555:83:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45852,
                  "nodeType": "ExpressionStatement",
                  "src": "6555:83:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45856,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45508,
                        "src": "6714:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45853,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6700:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6703:10:80",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "6700:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:26:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45858,
                  "nodeType": "ExpressionStatement",
                  "src": "6700:26:80"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 45868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6828:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 45866,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6804:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6808:19:80",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6804:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 45869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6804:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 45859,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45475,
                          "src": "6768:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6781:4:80",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6768:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6793:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 45863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6798:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "6793:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "6768:35:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6768:72:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 45871,
                  "nodeType": "ExpressionStatement",
                  "src": "6768:72:80"
                },
                {
                  "expression": {
                    "id": 45884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 45872,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "6852:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 45874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "6854:6:80",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45812,
                          "src": "6852:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 45875,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6850:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 45880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6900:20:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "id": 45881,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45508,
                              "src": "6922:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45878,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6876:3:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 45879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6880:19:80",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "6876:23:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 45882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6876:58:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 45876,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45439,
                          "src": "6864:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6871:4:80",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6864:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6864:71:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "6850:85:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45885,
                  "nodeType": "ExpressionStatement",
                  "src": "6850:85:80"
                },
                {
                  "expression": {
                    "id": 45897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45886,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "6945:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 45888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6947:6:80",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45814,
                      "src": "6945:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 45891,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "6967:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 45892,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6969:6:80",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45812,
                          "src": "6967:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 45894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6978:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 45893,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6978:7:80",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 45895,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6977:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 45889,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "6956:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 45890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6960:6:80",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "6956:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 45896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6956:31:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6945:42:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45898,
                  "nodeType": "ExpressionStatement",
                  "src": "6945:42:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45900,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7006:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7008:6:80",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45814,
                        "src": "7006:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:10:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 45903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7028:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 45899,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6997:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6997:60:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45905,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:60:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784574682062616c616e6365",
                        "id": 45909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7080:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        "value": "frxEth balance"
                      },
                      {
                        "expression": {
                          "id": 45910,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7098:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7100:6:80",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45814,
                        "src": "7098:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45906,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7067:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7076:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7067:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7067:40:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45913,
                  "nodeType": "ExpressionStatement",
                  "src": "7067:40:80"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 45921,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45463,
                        "src": "7202:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7222:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 45923,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7222:7:80",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 45922,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7217:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 45925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7217:13:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 45926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7231:3:80",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "7217:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45917,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45439,
                                "src": "7185:6:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 45916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7177:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45915,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7177:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7177:15:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45914,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45424,
                          "src": "7167:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45424_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 45919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7167:26:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45424",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 45920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7194:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45404,
                      "src": "7167:34:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7167:68:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45928,
                  "nodeType": "ExpressionStatement",
                  "src": "7167:68:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 45935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7293:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 45934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7285:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 45933,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7285:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7285:10:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 45939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7305:10:80",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 45938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7297:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 45937,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7297:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7297:19:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 45941,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7284:33:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 45942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7319:9:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 45930,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45463,
                            "src": "7255:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45929,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45424,
                          "src": "7245:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45424_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 45931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7245:24:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45424",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 45932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7270:13:80",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45388,
                      "src": "7245:38:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 45943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7245:84:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45944,
                  "nodeType": "ExpressionStatement",
                  "src": "7245:84:80"
                },
                {
                  "expression": {
                    "id": 45954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45945,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "7339:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 45947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7341:6:80",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45814,
                      "src": "7339:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45952,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45508,
                          "src": "7381:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 45949,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45442,
                              "src": "7360:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45948,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45424,
                            "src": "7350:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45424_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 45950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7350:20:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45424",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 45951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7371:9:80",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45395,
                        "src": "7350:30:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7350:43:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7339:54:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45955,
                  "nodeType": "ExpressionStatement",
                  "src": "7339:54:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 45959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7416:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "expression": {
                          "id": 45960,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7437:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45961,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7439:6:80",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45814,
                        "src": "7437:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45956,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7403:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7412:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7403:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7403:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45963,
                  "nodeType": "ExpressionStatement",
                  "src": "7403:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45965,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7465:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7467:6:80",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45814,
                        "src": "7465:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 45967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7475:9:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 45968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7486:39:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 45964,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "7456:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7456:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45970,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:70:80"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 45981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45971,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "7666:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 45973,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7668:12:80",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45816,
                      "src": "7666:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45978,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45502,
                              "src": "7720:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7712:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45976,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7712:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7712:20:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 45974,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "7683:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 45975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7691:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "7683:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 45980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7683:50:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7666:67:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45982,
                  "nodeType": "ExpressionStatement",
                  "src": "7666:67:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7072652d6164642023206c6f636b73",
                        "id": 45986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7756:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        "value": "pre-add # locks"
                      },
                      {
                        "expression": {
                          "id": 45987,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7775:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 45988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7777:12:80",
                        "memberName": "senderPreAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45816,
                        "src": "7775:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45983,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7743:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7752:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7743:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7743:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45990,
                  "nodeType": "ExpressionStatement",
                  "src": "7743:47:80"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "id": 46006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45991,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "7834:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 45993,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7836:9:80",
                      "memberName": "senderKek",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45830,
                      "src": "7834:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 45996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7879:9:80",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 46003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 46001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 45999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 45997,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7891:2:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 45998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7894:2:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "7891:5:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 46000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7897:2:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "7891:8:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 46002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7900:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "7891:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 46004,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7890:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 45994,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45502,
                          "src": "7848:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 45995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7860:18:80",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41829,
                        "src": "7848:30:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256) external returns (bytes32)"
                        }
                      },
                      "id": 46005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7848:57:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7834:71:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 46007,
                  "nodeType": "ExpressionStatement",
                  "src": "7834:71:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7928:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46008,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7915:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7924:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "7915:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7915:23:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46013,
                  "nodeType": "ExpressionStatement",
                  "src": "7915:23:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46017,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "7968:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46018,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7970:9:80",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45830,
                        "src": "7968:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46014,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7948:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7957:10:80",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "7948:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7948:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46020,
                  "nodeType": "ExpressionStatement",
                  "src": "7948:32:80"
                },
                {
                  "expression": {
                    "id": 46031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46021,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "7990:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46023,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7992:13:80",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45818,
                      "src": "7990:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46028,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45502,
                              "src": "8045:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8037:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46026,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8037:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8037:20:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46024,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "8008:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8016:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "8008:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8008:50:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7990:68:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46032,
                  "nodeType": "ExpressionStatement",
                  "src": "7990:68:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f73742d6164642023206c6f636b73",
                        "id": 46036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8081:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        "value": "post-add # locks"
                      },
                      {
                        "expression": {
                          "id": 46037,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "8101:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46038,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8103:13:80",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45818,
                        "src": "8101:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46033,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8068:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8077:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "8068:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8068:49:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46040,
                  "nodeType": "ExpressionStatement",
                  "src": "8068:49:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46042,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "8136:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46043,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8138:13:80",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45818,
                        "src": "8136:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46044,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "8153:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46045,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8155:12:80",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45816,
                          "src": "8153:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 46046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8170:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8153:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 46048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8173:36:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 46041,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8127:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8127:83:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46050,
                  "nodeType": "ExpressionStatement",
                  "src": "8127:83:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8284:6:80",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46051,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "8279:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8279:12:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46054,
                  "nodeType": "ExpressionStatement",
                  "src": "8279:12:80"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 46065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46055,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "8371:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8373:20:80",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45824,
                      "src": "8371:22:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46062,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45514,
                              "src": "8433:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8425:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8425:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8425:22:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46058,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "8396:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8404:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "8396:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8396:52:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8371:77:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46066,
                  "nodeType": "ExpressionStatement",
                  "src": "8371:77:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265636569766572206265666f726520726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8471:45:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        "value": "Receiver before receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46071,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "8518:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46072,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8520:20:80",
                        "memberName": "receiverPreTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45824,
                        "src": "8518:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46067,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "8458:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8467:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "8458:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8458:83:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46074,
                  "nodeType": "ExpressionStatement",
                  "src": "8458:83:80"
                },
                {
                  "expression": {
                    "id": 46093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46075,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "8646:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46077,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "8648:8:80",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45832,
                          "src": "8646:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46078,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8643:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46083,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45514,
                              "src": "8695:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8687:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46081,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8687:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8687:22:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46085,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "8711:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8713:9:80",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45830,
                          "src": "8711:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8724:8:80",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8742:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8734:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 46088,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8734:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8734:10:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46079,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45502,
                          "src": "8660:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8672:14:80",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "8660:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8660:85:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "8643:102:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46094,
                  "nodeType": "ExpressionStatement",
                  "src": "8643:102:80"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 46105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46095,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "8863:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8865:19:80",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45820,
                      "src": "8863:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46102,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45502,
                              "src": "8924:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8916:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46100,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8916:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8916:20:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46098,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "8887:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8895:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "8887:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8887:50:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8863:74:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46106,
                  "nodeType": "ExpressionStatement",
                  "src": "8863:74:80"
                },
                {
                  "expression": {
                    "id": 46117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46107,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "8947:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8949:21:80",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45826,
                      "src": "8947:23:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46114,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45514,
                              "src": "9010:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9002:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46112,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9002:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9002:22:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46110,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "8973:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8981:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "8973:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8973:52:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8947:78:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46118,
                  "nodeType": "ExpressionStatement",
                  "src": "8947:78:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572312023206c6f636b73",
                        "id": 46122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9048:40:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        "value": "Sender after sending transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46123,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9090:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9092:19:80",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45820,
                        "src": "9090:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46119,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9035:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9044:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9035:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9035:77:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46126,
                  "nodeType": "ExpressionStatement",
                  "src": "9035:77:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220416674657220726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9135:44:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        "value": "Receiver After receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46131,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9181:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46132,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9183:21:80",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45826,
                        "src": "9181:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46127,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9122:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9131:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9122:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9122:83:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46134,
                  "nodeType": "ExpressionStatement",
                  "src": "9122:83:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46136,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9224:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9226:19:80",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45820,
                        "src": "9224:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46138,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9247:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9249:13:80",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45818,
                        "src": "9247:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 46140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9264:33:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 46135,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9215:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9215:83:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46142,
                  "nodeType": "ExpressionStatement",
                  "src": "9215:83:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46144,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9317:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9319:21:80",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45826,
                        "src": "9317:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 46149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 46146,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45840,
                                "src": "9343:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 46147,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9345:20:80",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45824,
                              "src": "9343:22:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 46148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9368:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9343:26:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46150,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9342:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 46151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9372:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 46143,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9308:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9308:99:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46153,
                  "nodeType": "ExpressionStatement",
                  "src": "9308:99:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9595:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9598:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "9595:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:17:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46158,
                  "nodeType": "ExpressionStatement",
                  "src": "9595:17:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46164,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45514,
                            "src": "9657:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9649:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9649:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9649:22:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46166,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "9673:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9675:9:80",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45830,
                        "src": "9673:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9686:8:80",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303130663263",
                        "id": 46169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9696:66:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        },
                        "value": "0x0000000000000000000000000000000000000000000000000000000000010f2c"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        }
                      ],
                      "expression": {
                        "id": 46159,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45502,
                        "src": "9622:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9634:14:80",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42268,
                      "src": "9622:26:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                      }
                    },
                    "id": 46170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9622:141:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "id": 46171,
                  "nodeType": "ExpressionStatement",
                  "src": "9622:141:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9824:6:80",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46172,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "9819:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9819:12:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46175,
                  "nodeType": "ExpressionStatement",
                  "src": "9819:12:80"
                },
                {
                  "documentation": "TODO Commented out due to stack too deep with all the placeholders above while troubleshooting.\n transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46181,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45514,
                                "src": "10083:13:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10075:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46179,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10075:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10075:22:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46177,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45457,
                            "src": "10046:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10054:20:80",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43145,
                          "src": "10046:28:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10046:52:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46184,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10100:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10102:21:80",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45826,
                        "src": "10100:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10125:46:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 46176,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10037:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10037:135:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46188,
                  "nodeType": "ExpressionStatement",
                  "src": "10037:135:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46194,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45502,
                                "src": "10228:11:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10220:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46192,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10220:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10220:20:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46190,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45457,
                            "src": "10191:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10199:20:80",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43145,
                          "src": "10191:28:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10191:50:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46197,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10243:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10245:19:80",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45820,
                        "src": "10243:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10266:44:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 46189,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10182:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10182:129:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46201,
                  "nodeType": "ExpressionStatement",
                  "src": "10182:129:80"
                },
                {
                  "expression": {
                    "id": 46218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46202,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "10375:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "10377:8:80",
                          "memberName": "destKek2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45834,
                          "src": "10375:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46205,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "10372:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46210,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45514,
                              "src": "10424:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10416:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46208,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10416:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10416:22:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46212,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "10440:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46213,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10442:9:80",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45830,
                          "src": "10440:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10453:8:80",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "expression": {
                            "id": 46215,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45840,
                            "src": "10463:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46216,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10465:8:80",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45832,
                          "src": "10463:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46206,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45502,
                          "src": "10389:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10401:14:80",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42268,
                        "src": "10389:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10389:85:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "10372:102:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46219,
                  "nodeType": "ExpressionStatement",
                  "src": "10372:102:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "426f7468206b656b496473",
                        "id": 46223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10586:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        },
                        "value": "Both kekIds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        }
                      ],
                      "expression": {
                        "id": 46220,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10573:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10582:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "10573:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10573:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46225,
                  "nodeType": "ExpressionStatement",
                  "src": "10573:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46229,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10630:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10632:8:80",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45832,
                        "src": "10630:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46226,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10610:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10619:10:80",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "10610:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:31:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46232,
                  "nodeType": "ExpressionStatement",
                  "src": "10610:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46236,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10671:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46237,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10673:8:80",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45834,
                        "src": "10671:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46233,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10651:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10660:10:80",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "10651:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10651:31:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46239,
                  "nodeType": "ExpressionStatement",
                  "src": "10651:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46241,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10701:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10703:8:80",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45832,
                        "src": "10701:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 46243,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "10713:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10715:8:80",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45834,
                        "src": "10713:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6661696c656420746f2073656e6420746f2073616d65206b656b4964",
                        "id": 46245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10725:30:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        },
                        "value": "failed to send to same kekId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        }
                      ],
                      "id": 46240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 400,
                      "src": "10692:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 46246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10692:64:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46247,
                  "nodeType": "ExpressionStatement",
                  "src": "10692:64:80"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 46258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46248,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "10863:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10865:19:80",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45822,
                      "src": "10863:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46255,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45502,
                              "src": "10924:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10916:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46253,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10916:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10916:20:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46251,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "10887:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10895:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "10887:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10887:50:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10863:74:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46259,
                  "nodeType": "ExpressionStatement",
                  "src": "10863:74:80"
                },
                {
                  "expression": {
                    "id": 46270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46260,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45840,
                        "src": "10947:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10949:21:80",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45828,
                      "src": "10947:23:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46267,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45514,
                              "src": "11010:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42648",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11002:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11002:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11002:22:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46263,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45457,
                          "src": "10973:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44826",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10981:20:80",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43145,
                        "src": "10973:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10973:52:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10947:78:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46271,
                  "nodeType": "ExpressionStatement",
                  "src": "10947:78:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572322023206c6f636b73",
                        "id": 46275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11048:40:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        "value": "Sender after sending transfer2 # locks"
                      },
                      {
                        "expression": {
                          "id": 46276,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11090:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11092:19:80",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45822,
                        "src": "11090:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46272,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "11035:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11044:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "11035:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11035:77:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46279,
                  "nodeType": "ExpressionStatement",
                  "src": "11035:77:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220706f7374207472616e7366657220322c2023206c6f636b73",
                        "id": 46283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11135:35:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        "value": "Receiver post transfer 2, # locks"
                      },
                      {
                        "expression": {
                          "id": 46284,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11172:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46285,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11174:21:80",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45828,
                        "src": "11172:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46280,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "11122:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11131:3:80",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "11122:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11122:74:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46287,
                  "nodeType": "ExpressionStatement",
                  "src": "11122:74:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46289,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11215:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11217:19:80",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45822,
                        "src": "11215:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46291,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11238:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11240:19:80",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45820,
                        "src": "11238:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11261:35:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 46288,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11206:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11206:91:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46295,
                  "nodeType": "ExpressionStatement",
                  "src": "11206:91:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46297,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11316:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11318:21:80",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45828,
                        "src": "11316:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46299,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45840,
                          "src": "11341:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$45835_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46300,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11343:21:80",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45826,
                        "src": "11341:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11366:37:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 46296,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11307:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11307:97:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46303,
                  "nodeType": "ExpressionStatement",
                  "src": "11307:97:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46304,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "11415:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11418:9:80",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "11415:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11415:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46308,
                  "nodeType": "ExpressionStatement",
                  "src": "11415:14:80"
                }
              ]
            },
            "functionSelector": "c7b19271",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDepositAndSendToExsitingVaults",
            "nameLocation": "6404:34:80",
            "parameters": {
              "id": 45836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6438:2:80"
            },
            "returnParameters": {
              "id": 45837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6448:0:80"
            },
            "scope": 46311,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45425,
              "name": "Test",
              "nameLocations": [
                "975:4:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "975:4:80"
            },
            "id": 45426,
            "nodeType": "InheritanceSpecifier",
            "src": "975:4:80"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          42648,
          44826
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46311,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "945:26:80",
        "scope": 46312,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 80
}