{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "contract Booster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexFraxVoterProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonCompliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEnd2End",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOnLockReceivedCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOnLockReceivedNonCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1312:17116:66:-:0;;;;;;;1594:4:0;1312:17116:66;;1594:4:0;1312:17116:66;;;1594:4:0;1312:17116:66;3958:42;1312:17116;;;;;;1597:42;1312:17116;1597:42;1312:17116;;;1597:42;1312:17116;1672:42;1312:17116;1672:42;1312:17116;;;1672:42;1312:17116;1788:42;1312:17116;1780:51;1312:17116;;;1780:51;1312:17116;1869:42;1312:17116;1869:42;1312:17116;;;1869:42;1312:17116;2031:42;1312:17116;2006:68;1312:17116;;;2006:68;1312:17116;2137:42;1312:17116;2129:51;1312:17116;;;2129:51;1312:17116;2231:42;1312:17116;2223:51;1312:17116;;;2223:51;1312:17116;2318:42;1312:17116;2310:51;1312:17116;;;2310:51;1312:17116;2407:42;1312:17116;2399:51;1312:17116;;;2399:51;1312:17116;2485:42;1312:17116;2485:42;1312:17116;;;2485:42;1312:17116;2639:42;1312:17116;2631:51;1312:17116;;;2631:51;1312:17116;2750:42;1312:17116;2742:51;1312:17116;;;2742:51;1312:17116;2904:42;1312:17116;2896:51;1312:17116;;;2896:51;1312:17116;3172:42;1312:17116;3166:49;1312:17116;;;3166:49;1312:17116;3318:42;1312:17116;3310:51;1312:17116;;;3310:51;1312:17116;3402:42;1312:17116;3396:49;1312:17116;;;3396:49;1312:17116;3548:42;1312:17116;3540:51;1312:17116;;;3540:51;1312:17116;3701:42;1312:17116;3693:51;1312:17116;;;3693:51;1312:17116;3778:42;1312:17116;3778:42;1312:17116;;;3778:42;1312:17116;3868:42;1312:17116;3860:51;1312:17116;;;3860:51;1312:17116;3950:51;1312:17116;;;3950:51;1312:17116;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1312:17116:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:71;1312:17116;2456:71;;;1312:17116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1518:20;1312:17116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3666:78;1312:17116;;;;;;;;;;;;;;;;;;;;;;3509:82;1312:17116;;;;;;;;;;;;;;;;;;;;;;3281:80;1312:17116;;;;;;;;;;;;;;;;;;;;;;3139:76;1312:17116;;;;;;;;;;;;;;;;;;;;;;1544:18;1312:17116;;;;;;;;;;;;;;;;;;;;2456:71;1312:17116;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3367:78;1312:17116;;;;;;;;;;;;;;;;;;;;;;3751:69;1312:17116;;;;;;;;;;;;;;;;;;;;;;1573:66;1312:17116;;;;;;;;;;;;;;;;;;;;;;3924:77;1312:17116;;;;;;;;;;;;;;;;;;;;;;1410:21;1312:17116;;;;;;;;;;;;;;;;;;;;;;1362:42;1312:17116;;;;;;;;;;;;;;;;;;;;;1248:14:1;17108:11:66;1248:14:1;1312:17116:66;;;17086:35;;;;;1312:17116;;17086:35;1248:14:1;17086:35:66;;1312:17116;17086:35;;1312:17116;;;17086:35;;;;;;;;;;;;;;;1312:17116;1248:14:1;;;17132:12:66;1248:14:1;1312:17116:66;;;;;;;;17168:35;;;;;;;;1312:17116;17168:35;;;;;:::i;:::-;17132:72;17157:9;;17132:72;;;;;;;:::i;:::-;;1248:14:1;17239:6:66;1248:14:1;1312:17116:66;1248:14:1;;;17108:11:66;1248:14:1;1312:17116:66;;;;17251:58;;;;;;;;;;;;;1312:17116;17251:58;;;;;;:::i;:::-;17239:71;;;;;;;:::i;:::-;1671:64:0;;;;;17337:29:66;;1312:17116;;;;17376:58;17337:29;;;;1312:17116;;;:::i;:::-;17376:58;;:::i;:::-;17543:17;1248:14:1;;1312:17116:66;1248:14:1;17239:6:66;1248:14:1;1312:17116:66;1248:14:1;;17528:13:66;1248:14:1;1312:17116:66;;;;17493:68;;;;;1248:14:1;17493:68:66;;1312:17116;17493:68;;1312:17116;;;1671:64:0;17493:68:66;;;;;;;;;;17571:84;17493:68;;;1312:17116;1248:14:1;;17528:13:66;1248:14:1;1312:17116:66;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;;;17610:33;;;1312:17116;;;17571:84;;;;;;1248:14:1;17571:84:66;;1312:17116;17571:84;;;:::i;:::-;;;;;;;;;;;;;;1312:17116;-1:-1:-1;17684:9:66;1248:14:1;17108:11:66;1248:14:1;1312:17116:66;;17674:43;;;1312:17116;;;17674:43;;1312:17116;;;1248:14:1;;1312:17116:66;;;;17674:43;;;;;;;;;;;1312:17116;;;17727:68;1312:17116;;;;:::i;:::-;17727:68;;:::i;:::-;1248:14:1;;;;1312:17116:66;;;;17861:57;;;;1248:14:1;17861:57:66;;17645:9;1312:17116;17861:57;;1671:64:0;17904:12:66;1312:17116;;;1671:64:0;17861:57:66;;;;;;;;;;;1312:17116;17931:12;;;1312:17116;17931:12;18156:85;17931:12;;;:::i;:::-;1248:14:1;1312:17116:66;1248:14:1;18191::66;1248::1;1312:17116:66;;;;18156:85;;;;;;1248:14:1;18156:85:66;;1312:17116;18156:85;;1312:17116;;;;;;;;;;;;;;;;;1671:64:0;9414:8:66;1312:17116;;;1671:64:0;1312:17116:66;;;;;;1671:64:0;1312:17116:66;18156:85;;;;;;;;;;1248:14:1;18156:85:66;;;1312:17116;18251:14;;;;;;1312:17116;;;;;;18251:14;;;;1248::1;18251::66;;;;;;;;;;1312:17116;;;18350:69;1312:17116;;;1671:64:0;;;:::i;:::-;;;;1312:17116:66;;;;;5545:6:0;;;5541:100;;;;1312:17116:66;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;18350:69;:::i;:::-;1312:17116;;5541:100:0;5572:30;;1312:17116:66;;;5572:30:0;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;;5255:203;5286:41;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;;1248:14:1;;1312:17116:66;;;;;;5286:41:0;1312:17116:66;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;1671:64:0;5346:31;;;;;;;;1312:17116:66;;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;1671:64:0;5396:31;;;;;:::i;:::-;5255:203;;;18251:14:66;;;;:::i;:::-;1312:17116;;18251:14;;;;1312:17116;;;;18251:14;1312:17116;;1248:14:1;1312:17116:66;;1248:14:1;;;;18251::66;1312:17116;;;18156:85;;;;;1312:17116;18156:85;1312:17116;18156:85;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;17861:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;;;;;17861:57;;1312:17116;;;;17861:57;;;;;;1312:17116;;1248:14:1;1312:17116:66;;1248:14:1;;;;17674:43:66;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;;;;;17727:68;17674:43;;;;;;;17571:84;;;;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;17571:84;;;;;;;;;;;;1312:17116;;1248:14:1;1312:17116:66;;1248:14:1;;;;17493:68:66;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1312:17116;;1248:14:1;1312:17116:66;;1248:14:1;;;;17086:35:66;;;;:::i;:::-;1312:17116;;17086:35;;;;1312:17116;;;;;;;;;;;;;;;;;;2098:82;1312:17116;;;;;;;;;;;;;;;;;;;;;;1964:110;1312:17116;;;;;;;;;;;;;;;;;;;;;;3597:30;1312:17116;;;;;;;;;;;;;;;;;;;;;;2186:88;1312:17116;;;;;;;;;;;;;;;;;;;;;;1747:84;1312:17116;;;;;;;;;;;;;;;;;;;;;;2706:87;1312:17116;;;;;;;;;;;;;;;;;;;;;1248:14:1;15669:11:66;1248:14:1;1312:17116:66;;15655:26;;;;;1312:17116;;15655:26;1248:14:1;15655:26:66;;1312:17116;15655:26;;1312:17116;;;15655:26;;;;;;;;;;;;;;;1312:17116;1248:14:1;;;15692:12:66;1248:14:1;1312:17116:66;;;;;;;;15728:35;;;;;;;;1312:17116;15728:35;;;;;:::i;:::-;15692:72;15717:9;;15692:72;;;;;;;:::i;:::-;;1248:14:1;15799:6:66;1248:14:1;1312:17116:66;1248:14:1;;;15669:11:66;1248:14:1;1312:17116:66;;;;15811:58;;;;;;;;;;;;;1312:17116;15811:58;;;;;;:::i;:::-;15799:71;;;;;;;:::i;:::-;1671:64:0;;;;;15897:29:66;;1312:17116;;;;15936:58;15897:29;;;;1312:17116;;;:::i;15936:58::-;1248:14:1;;;15799:6:66;1248:14:1;1312:17116:66;;1248:14:1;16088:13:66;1248:14:1;1312:17116:66;;;16053:68;;;;;1248:14:1;16053:68:66;;1312:17116;16053:68;;1312:17116;16103:17;1312:17116;;;1671:64:0;16053:68:66;;;;;;;;;;16131:84;16053:68;;;1312:17116;1248:14:1;;16088:13:66;1248:14:1;1312:17116:66;;;;1671:64:0;;;;:::i;16131:84:66:-;;;;;;;;;;;;;;1312:17116;-1:-1:-1;16244:9:66;1248:14:1;15669:11:66;1248:14:1;1312:17116:66;;16234:43;;;1312:17116;;;16234:43;;1312:17116;;;1248:14:1;;1312:17116:66;;;;16234:43;;;;;;;;;;;1312:17116;;;16287:68;1312:17116;;;;:::i;16287:68::-;1248:14:1;;;;1312:17116:66;;;;16421:57;;;;1248:14:1;16421:57:66;;16205:9;1312:17116;16421:57;;1671:64:0;16464:12:66;1312:17116;;;1671:64:0;16421:57:66;;;;;;;;;;;1312:17116;16489:12;;;:::i;:::-;16691:17;;;;;1312:17116;;1248:14:1;16691:17:66;;;;1312:17116;16691:17;;;;;;;;;;;1312:17116;-1:-1:-1;1248:14:1;16774:17:66;1248:14:1;1312:17116:66;;;1248:14:1;16739:88:66;;1312:17116;;;;;;16739:88;;1312:17116;;;;1671:64:0;;;;9414:8:66;1312:17116;;;1671:64:0;-1:-1:-1;1312:17116:66;;;;;;;;;1671:64:0;1312:17116:66;;;;;;;;;;16739:88;;;;;;;;;1248:14:1;16739:88:66;;;1312:17116;16838:14;;;;;;1312:17116;;;;;;16838:14;;;;1248::1;16838::66;;;;;;;;;;1312:17116;;;16944:72;1312:17116;;;1671:64:0;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;16615:2;5545:6:0;;;5541:100;;;;1312:17116:66;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;16944:72;:::i;5541:100:0:-;5572:30;;1312:17116:66;;;5572:30:0;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;;5255:203;5286:41;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;;1248:14:1;;1312:17116:66;;1671:64:0;1312:17116:66;;;5286:41:0;1312:17116:66;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;16615:2;1312:17116;;;1671:64:0;5346:31;;;;;;;;1312:17116:66;;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;1671:64:0;5396:31;;;;;:::i;:::-;5255:203;;;16838:14:66;;;;:::i;:::-;1312:17116;;16838:14;;;;16739:88;;;;;1312:17116;16739:88;1312:17116;16739:88;;;;;;;:::i;:::-;;;;;;;16691:17;;;;;;;;:::i;:::-;1312:17116;;16691:17;;;;16421:57;;-1:-1:-1;16421:57:66;-1:-1:-1;16421:57:66;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;;;;16421:57;;;;;;;;;16234:43;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;;;;;16287:68;16234:43;;;;;;;16131:84;;;;;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;16131:84;;;;;;;;;;;16053:68;;;;;;;;;;;;;:::i;:::-;;;;;15655:26;;;;:::i;:::-;1312:17116;;15655:26;;;;1312:17116;;;;;;;;;;;;;;3633:27;1312:17116;;;;;;;;;;;;;;;;;;;;;;1645:69;1312:17116;;;;;;;;;;;;;;;;;;;;;;1837:74;1312:17116;;;;;;;;;;;;;;;;;;;;;;2858:89;1312:17116;;;;;;;;;;;;;;;;;;;;;;2600:82;1312:17116;;;;;;;;;;;;;;;;;;;;;;1483:28;1312:17116;;;;;;;;;;;;;;;;;;;;;;2367:83;1312:17116;;;;;;;;;;;;;;;;;;;;;;;1671:64:0;;;;;;;;;;;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;;;;1671:64:0;1312:17116:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9310:11;1248:14:1;1312:17116:66;;;9310:28;;;;1248:14:1;9310:28:66;;;;;;;;;;;;;1312:17116;1248:14:1;1312:17116:66;9348:7;1248:14:1;1312:17116:66;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;3979:6:0;;;;;3975:101;;;;1312:17116:66;;;;;9414:8;1312:17116;;;;1248:14:1;1312:17116:66;9498:11;1248:14:1;1312:17116:66;;9484:26;;;;1312:17116;;9484:26;1248:14:1;9484:26:66;;1312:17116;9484:26;;1312:17116;9484:26;;9310:11;9484:26;;1312:17116;9484:26;;;;;;;;1312:17116;1248:14:1;;1312:17116:66;9552:12;1248:14:1;1312:17116:66;;;9577:9;1312:17116;9588:35;;;;;;1312:17116;9588:35;;;;;:::i;:::-;9552:72;;;;;;;:::i;:::-;;1248:14:1;;1312:17116:66;;1248:14:1;1312:17116:66;;9498:11;1248:14:1;1312:17116:66;;;;;9660:58;;;;;;9310:11;9660:58;;1312:17116;9310:11;9660:58;;;;;:::i;:::-;9648:71;;;;;;;:::i;:::-;9634:85;;;1312:17116;1671:64:0;;;9740:31:66;;1312:17116;;;;;9781:60;9740:31;;1312:17116;;;;;;;;:::i;9781:60::-;1248:14:1;1312:17116:66;;;1248:14:1;1312:17116:66;;;9936:13;1248:14:1;1312:17116:66;;;9901:68;;;;;1248:14:1;9901:68:66;;1312:17116;9901:68;;1312:17116;9951:17;9310:11;1312:17116;;1671:64:0;9901:68:66;;;;;;;;1312:17116;1248:14:1;;1312:17116:66;9979:84;1312:17116;9936:13;1248:14:1;1312:17116:66;;;1671:64:0;;;:::i;:::-;1312:17116:66;;;9577:9;10018:33;;;1312:17116;;;9979:84;;;;;;1248:14:1;9979:84:66;;1312:17116;9979:84;;;:::i;:::-;;;;;;;;;;;1312:17116;1248:14:1;1312:17116:66;10094:9;1248:14:1;1312:17116:66;;;9498:11;1248:14:1;1312:17116:66;9310:11;1312:17116;;10084:43;;;;9660:58;10084:43;;1312:17116;10084:43;;1312:17116;10084:43;;;;;;;;;;1312:17116;10137:70;1312:17116;;;;;;;;;:::i;10137:70::-;1248:14:1;1312:17116:66;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;;1248:14:1;10364:50:66;;;1312:17116;10364:50;;1312:17116;;10364:50;9310:11;10364:50;;;;;;;;;;;;;1312:17116;;9310:11;1312:17116;;;;;;;;;10454:47;;;;1248:14:1;10454:47:66;;;1312:17116;10454:47;;1312:17116;10454:47;;;;;;;;;;;1312:17116;;;;;;1671:64:0;1312:17116:66;;;;;;10560:57;;;;1248:14:1;10560:57:66;;10053:9;1312:17116;10560:57;;1671:64:0;10603:12:66;9310:11;1312:17116;;1671:64:0;10560:57:66;;;;;;;;;;1312:17116;;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;7139:54:14;1312:17116:66;;7139:54:14;;1312:17116:66;;7139:54:14;;;;;;1312:17116:66;9310:11;7139:54:14;;1312:17116:66;;;;;;:::i;:::-;;;;;1671:64:0;7139:54:14;1312:17116:66;7139:54:14;;;;;;:::i;:::-;1671:64:0;852:159:14;591:42;852:159;;;1312:17116:66;9348:7;1248:14:1;1312:17116:66;;;9310:11;1248:14:1;1312:17116:66;9310:11;1312:17116;;10695:50;;;;1248:14:1;10695:50:66;;1312:17116;10695:50;;1312:17116;10695:50;;;;;;;;;;;1312:17116;;;;;;;;;;;;10798:1;1312:17116;;;;;;;10755:83;1312:17116;10798:1;1312:17116;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;;10755:83;;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;;9310:11;1248:14:1;1312:17116:66;9310:11;1312:17116;;10881:47;;;;1248:14:1;10881:47:66;;1312:17116;10881:47;;1312:17116;10881:47;;;;;;;;;;;1312:17116;;;;;;10997:12;;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;11151:13;1248:14:1;1312:17116:66;;;;1248:14:1;11114:52:66;;;1312:17116;11114:52;;1312:17116;;11114:52;9310:11;11114:52;;;;;;;;;;;;;1312:17116;;9310:11;1312:17116;;;;;;;;;11211:49;;;;1248:14:1;11211:49:66;;;1312:17116;11211:49;;1312:17116;11211:49;;;;;;;;;;;1312:17116;;;;;;;;9310:11;1248:14:1;1312:17116:66;;;;;;;;;;;;;;;;11384:92;;;;;1248:14:1;11384:92:66;;1312:17116;11384:92;;1312:17116;9310:11;1312:17116;;1671:64:0;1312:17116:66;;;1671:64:0;1312:17116:66;;;;;;;;;1671:64:0;11384:92:66;;;;;;;1248:14:1;11384:92:66;;;1312:17116;;;;;;;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;11618:50;1248:14:1;11618:50:66;;1312:17116;11618:50;;1312:17116;;11618:50;9310:11;11618:50;;;;;;;;;;;;;1312:17116;;;;;;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;11704:52;;;;1248:14:1;11704:52:66;;1312:17116;11704:52;;1312:17116;11704:52;;;;;;;;;;;1312:17116;;;;;;11766:83;1312:17116;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;11766:83;:::i;:::-;1312:17116;;;;;;;;;10798:1;1312:17116;;;;;;;11859:99;1312:17116;10798:1;1312:17116;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;11859:99;;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;12043:47;1248:14:1;12043:47:66;;1312:17116;12043:47;;1312:17116;;12043:47;9310:11;12043:47;;;;;;;;;;;;;1312:17116;;;;;;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;12133:49;;;;1248:14:1;12133:49:66;;1312:17116;12133:49;;1312:17116;12133:49;;;;;;;;;;;1312:17116;;;;;;12192:122;1312:17116;;;;12231:49;1312:17116;;;;;;;;12231:49;;:::i;:::-;1312:17116;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;12192:122;:::i;:::-;12324:127;1312:17116;;;;12365:51;1312:17116;;;;;;;;12365:51;;:::i;:::-;1312:17116;;1671:64:0;;;;:::i;:::-;9552:12:66;1671:64:0;;1312:17116:66;;;;;12324:127;:::i;:::-;1312:17116;12547:17;;;;1312:17116;;;1248:14:1;12547:17:66;;;;1312:17116;12547:17;;1312:17116;12547:17;;;;;;;;1312:17116;1248:14:1;;1312:17116:66;9310:11;1248:14:1;1312:17116:66;;;11151:13;1248:14:1;1312:17116:66;;;;;;;;;;;;;;;12574:92;;;;;1248:14:1;12574:92:66;;1312:17116;12574:92;;1312:17116;9310:11;1312:17116;;1671:64:0;1312:17116:66;;;1671:64:0;10798:1:66;1312:17116;;;;12663:2;1312:17116;;;1671:64:0;12574:92:66;;;;;;;;1312:17116;12722:12;;;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;12850:52;;;;1248:14:1;12850:52:66;;1312:17116;12850:52;;1312:17116;12850:52;;;;;;;;;;1312:17116;12841:135;1312:17116;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;12841:135;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;;9310:11;1248:14:1;1312:17116:66;9310:11;1312:17116;;12995:50;;;;1248:14:1;12995:50:66;;1312:17116;12995:50;;1312:17116;12995:50;;;;;;;;;;1312:17116;12986:129;1312:17116;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;12986:129;:::i;:::-;9310:11;1248:14:1;;11151:13:66;1248:14:1;1312:17116:66;;;;;;;;;;;;;;;1248:14:1;13198:105:66;;1312:17116;;;;;13198:105;;1312:17116;;;;1671:64:0;;;;1312:17116:66;;;1671:64:0;;;;10798:1:66;1312:17116;;;;;;;1671:64:0;1312:17116:66;;;;;;;;;;13198:105;;;;;;;1248:14:1;13198:105:66;;;1312:17116;;;;;;;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;13435:50;1248:14:1;13435:50:66;;1312:17116;13435:50;;1312:17116;;13435:50;9310:11;13435:50;;;;;;;;;;;;;1312:17116;;;;;;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;13521:52;;;;1248:14:1;13521:52:66;;1312:17116;13521:52;;1312:17116;13521:52;;;;;;;;;;;1312:17116;;;;;;13583:91;1312:17116;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;13583:91;:::i;:::-;13684:97;1312:17116;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;13684:97;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;13866:47;1248:14:1;13866:47:66;;1312:17116;13866:47;;1312:17116;;13866:47;9310:11;13866:47;;;;;;;;;;;;;1312:17116;;;;;;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;13956:49;;;;1248:14:1;13956:49:66;;1312:17116;13956:49;;1312:17116;13956:49;;;;;;;;;;;1312:17116;;;;;;14015:121;1312:17116;;;;14054:47;1312:17116;;;;;;;;14054:47;;:::i;:::-;1312:17116;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;14015:121;:::i;:::-;14146:125;1312:17116;;;;14187:49;1312:17116;;;;;;;;14187:49;;:::i;:::-;1312:17116;;1671:64:0;;;;:::i;:::-;9552:12:66;1671:64:0;;1312:17116:66;;;;;14146:125;:::i;:::-;1312:17116;14355:17;;;;1312:17116;;;1248:14:1;14355:17:66;;;;1312:17116;14355:17;;1312:17116;14355:17;;;;;;;;1312:17116;-1:-1:-1;;9310:11:66;1248:14:1;;14417:3:66;1248:14:1;1312:17116:66;;;;;;;1248:14:1;14382:74:66;;1312:17116;;;;;14382:74;;1312:17116;;;;1671:64:0;;;;9414:8:66;1312:17116;;;1671:64:0;-1:-1:-1;1312:17116:66;;;;;;;;;1671:64:0;1312:17116:66;;;;;;;;;;14382:74;;;;;;;;1312:17116;14559:12;;;:::i;:::-;1312:17116;9348:7;1248:14:1;1312:17116:66;;9310:11;1248:14:1;1312:17116:66;;;1248:14:1;14604:50:66;;;1312:17116;14604:50;;1312:17116;;14604:50;9310:11;14604:50;;;;;;;;;;;;;1312:17116;;;;;;9310:11;1312:17116;;11151:13;1248:14:1;1312:17116:66;;;;14689:52;;;;1248:14:1;14689:52:66;;;1312:17116;14689:52;;1312:17116;14689:52;;;;;;;;;;;1312:17116;;;;;;;;;;;14839:60;1312:17116;;;;1671:64:0;1312:17116:66;;;14839:60;;:::i;:::-;1312:17116;;;;;;;;;;;;;;;14839:85;1312:17116;10798:1;1312:17116;14839:85;;:::i;:::-;1312:17116;;;;;;1248:14:1;14773:176:66;;1312:17116;;;;;;14773:176;;1312:17116;;;;1671:64:0;;;;1312:17116:66;;;1671:64:0;10798:1:66;1312:17116;;;;;;;1671:64:0;;;;1312:17116:66;;;;;;;;14773:176;;;;;;;1248:14:1;14773:176:66;;;1312:17116;;;;;;;9348:7;1248:14:1;1312:17116:66;1248:14:1;1312:17116:66;9310:11;1248:14:1;1312:17116:66;;;15034:47;1248:14:1;15034:47:66;;1312:17116;15034:47;;1312:17116;;15034:47;9310:11;15034:47;;;;;;;;;;;;;1312:17116;;;;;;;;11151:13;1248:14:1;1312:17116:66;9310:11;1312:17116;;15124:49;;;;1248:14:1;15124:49:66;;1312:17116;15124:49;;1312:17116;15124:49;;;;;;;;;;1312:17116;15325:188;1312:17116;;;;;;15183:132;1312:17116;;;;1671:64:0;1312:17116:66;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;15183:132;:::i;:::-;15367:97;1312:17116;;;;;15403:60;1312:17116;;;;;1671:64:0;1312:17116:66;;;;;;;15403:60;;:::i;:::-;15367:97;;:::i;:::-;1312:17116;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;15325:188;:::i;:::-;1312:17116;15524:14;;;;1312:17116;;;1248:14:1;15524::66;;;;1312:17116;15524:14;;1312:17116;15524:14;;;;;;;;1312:17116;;15549:33;1312:17116;;1671:64:0;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;15549:33;:::i;15524:14::-;;;;:::i;:::-;1312:17116;;15524:14;;;;15124:49;;1312:17116;15124:49;;1312:17116;15124:49;;;;;;1312:17116;15124:49;;;:::i;:::-;;;1312:17116;;;;15325:188;1312:17116;;15124:49;;;;;-1:-1:-1;15124:49:66;;;1312:17116;;1248:14:1;1312:17116:66;;1248:14:1;;;;15034:47:66;;;1312:17116;15034:47;;1312:17116;15034:47;;;;;;1312:17116;15034:47;;;:::i;:::-;;;1312:17116;;;;;15034:47;;;;;;-1:-1:-1;15034:47:66;;14773:176;;;;1312:17116;14773:176;1312:17116;14773:176;;;;;;;:::i;:::-;;;;;;1312:17116;9310:11;1312:17116;;;;;;;;14689:52;;;1312:17116;14689:52;;1312:17116;14689:52;;;;;;1312:17116;14689:52;;;:::i;:::-;;;1312:17116;;;;;14689:52;;;;;;-1:-1:-1;14689:52:66;;14604:50;;;1312:17116;14604:50;;1312:17116;14604:50;;;;;;1312:17116;14604:50;;;:::i;:::-;;;1312:17116;;;;;14604:50;;;;;;-1:-1:-1;14604:50:66;;14382:74;;;1312:17116;14382:74;1312:17116;14382:74;;;;;;;:::i;:::-;;;;14355:17;;;;:::i;:::-;1312:17116;;14355:17;;;;13956:49;;;1312:17116;13956:49;;1312:17116;13956:49;;;;;;1312:17116;13956:49;;;:::i;:::-;;;1312:17116;;;;;13956:49;;;;;;-1:-1:-1;13956:49:66;;13866:47;;;1312:17116;13866:47;;1312:17116;13866:47;;;;;;1312:17116;13866:47;;;:::i;:::-;;;1312:17116;;;;;13866:47;;;;;;-1:-1:-1;13866:47:66;;13521:52;;;1312:17116;13521:52;;1312:17116;13521:52;;;;;;1312:17116;13521:52;;;:::i;:::-;;;1312:17116;;;;;13521:52;;;;;;-1:-1:-1;13521:52:66;;13435:50;;;1312:17116;13435:50;;1312:17116;13435:50;;;;;;1312:17116;13435:50;;;:::i;:::-;;;1312:17116;;;;;13435:50;;;;;;-1:-1:-1;13435:50:66;;13198:105;;;;1312:17116;13198:105;1312:17116;13198:105;;;;;;;:::i;:::-;;;;;;12995:50;;1312:17116;12995:50;;1312:17116;12995:50;;;;;;1312:17116;12995:50;;;:::i;:::-;;;1312:17116;;;;12986:129;1312:17116;;12995:50;;;;;-1:-1:-1;12995:50:66;;12850:52;;1312:17116;12850:52;;1312:17116;12850:52;;;;;;1312:17116;12850:52;;;:::i;:::-;;;1312:17116;;;;12841:135;1312:17116;;12850:52;;;;;-1:-1:-1;12850:52:66;;12574:92;;;1312:17116;12574:92;1312:17116;12574:92;;;;;;;:::i;:::-;;;;12547:17;;;;:::i;:::-;1312:17116;;12547:17;;;;12133:49;;;1312:17116;12133:49;;1312:17116;12133:49;;;;;;1312:17116;12133:49;;;:::i;:::-;;;1312:17116;;;;;12133:49;;;;;;-1:-1:-1;12133:49:66;;12043:47;;;1312:17116;12043:47;;1312:17116;12043:47;;;;;;1312:17116;12043:47;;;:::i;:::-;;;1312:17116;;;;;12043:47;;;;;;-1:-1:-1;12043:47:66;;1312:17116;9310:11;1312:17116;;;;;;;;11704:52;;;1312:17116;11704:52;;1312:17116;11704:52;;;;;;1312:17116;11704:52;;;:::i;:::-;;;1312:17116;;;;;11704:52;;;;;;-1:-1:-1;11704:52:66;;11618:50;;;1312:17116;11618:50;;1312:17116;11618:50;;;;;;1312:17116;11618:50;;;:::i;:::-;;;1312:17116;;;;;11618:50;;;;;;-1:-1:-1;11618:50:66;;11384:92;;;;1312:17116;11384:92;1312:17116;11384:92;;;;;;;:::i;:::-;;;;;;11211:49;;;1312:17116;11211:49;;1312:17116;11211:49;;;;;;1312:17116;11211:49;;;:::i;:::-;;;1312:17116;;;;;11211:49;;;;;;-1:-1:-1;11211:49:66;;11114:52;;;1312:17116;11114:52;;1312:17116;11114:52;;;;;;1312:17116;11114:52;;;:::i;:::-;;;1312:17116;;;;;9310:11;11114:52;;;;;-1:-1:-1;11114:52:66;;10881:47;;;1312:17116;10881:47;;1312:17116;10881:47;;;;;;1312:17116;10881:47;;;:::i;:::-;;;1312:17116;;;;;10881:47;;;;;;-1:-1:-1;10881:47:66;;10695:50;;;1312:17116;10695:50;;1312:17116;10695:50;;;;;;1312:17116;10695:50;;;:::i;:::-;;;1312:17116;;;;;10695:50;;;;;;-1:-1:-1;10695:50:66;;10560:57;;;1312:17116;10560:57;;1312:17116;10560:57;;;;;;1312:17116;10560:57;;;:::i;:::-;;;1312:17116;;;;;;;;10560:57;;;;;-1:-1:-1;10560:57:66;;;1312:17116;;;1248:14:1;;;;;;;;10454:47:66;;;;1312:17116;10454:47;;1312:17116;10454:47;;;;;;1312:17116;10454:47;;;:::i;:::-;;;1312:17116;;;;;;;;;;10454:47;;;;;-1:-1:-1;10454:47:66;;10364:50;;;;1312:17116;10364:50;;1312:17116;10364:50;;;;;;1312:17116;10364:50;;;:::i;:::-;;;1312:17116;;;;;;;;;9310:11;10364:50;;;;;-1:-1:-1;10364:50:66;;10084:43;;1312:17116;10084:43;;1312:17116;10084:43;;;;;;1312:17116;10084:43;;;:::i;:::-;;;1312:17116;;;;10137:70;1312:17116;;10084:43;;;;;-1:-1:-1;10084:43:66;;9979:84;1312:17116;9979:84;;;;;;;;;;;;:::i;:::-;;;1312:17116;;;;9979:84;;;;;;;;9901:68;;;1312:17116;9901:68;1312:17116;9901:68;;;;;;;:::i;:::-;;;;;9484:26;;;;:::i;:::-;1312:17116;;9484:26;;;;3975:101:0;4006:31;;1312:17116:66;;;4006:31:0;;;;;:::i;:::-;;;;3674:212;;3975:101;;;;;3674:212;3705:44;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;;1248:14:1;;1312:17116:66;;1671:64:0;1312:17116:66;;;3705:44:0;1312:17116:66;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;;3768:34:0;;;;;;;;1312:17116:66;;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;;3821:34:0;;;;;:::i;:::-;3674:212;;;;9310:28:66;;;;1312:17116;9310:28;1312:17116;9310:28;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;1671:64:0;;1312:17116:66;1671:64:0;;1312:17116:66;1671:64:0;;1312:17116:66;1671:64:0;1312:17116:66;;;;;;;;;;;;;;2280:81;1312:17116;;;;;;;;;;;;;;;;;;;;;;1248:14:1;;4295:75:66;;;;4303:66;1312:17116;4295:75;;1671:64:0;4295:75:66;;1248:14:1;4295:75:66;1312:17116;4295:75;;;;;;;;1312:17116;4295:75;;;;;1312:17116;;;1248:14:1;;4287:83:66;1248:14:1;;;4287:83:66;1248:14:1;1312:17116:66;4380:26;;;;1312:17116;;4380:26;1248:14:1;4380:26:66;;1312:17116;4380:26;;1312:17116;4395:10;1248:14:1;;;1671:64:0;4380:26:66;;1248:14:1;4380:26:66;;1312:17116;4380:26;;;;;;;;1312:17116;1248:14:1;;;1312:17116:66;4287:83;1248:14:1;1312:17116:66;4466:24;1312:17116;4466:24;;;;1312:17116;;1248:14:1;4466:24:66;;;;1312:17116;4466:24;;1312:17116;;1248:14:1;;;;;;;;;;;;;;4466:24:66;;1248:14:1;4466:24:66;;1312:17116;4466:24;;;;;;;;;;;1312:17116;;;;;4507:75;;;4515:66;1312:17116;4507:75;;1671:64:0;4295:75:66;4507;1248:14:1;4507:75:66;1312:17116;4507:75;;;;;;1312:17116;4507:75;;;;;1312:17116;;;4501:81;1248:14:1;;;;;;;4501:81:66;1248:14:1;1312:17116:66;4592:24;;;;1312:17116;;;4592:24;1248:14:1;4592:24:66;;1312:17116;;;4592:24;;1312:17116;4395:10;1248:14:1;;;1671:64:0;4592:24:66;;1248:14:1;4592:24:66;;1312:17116;4592:24;;;;;;;;;;;1312:17116;1248:14:1;;1312:17116:66;4501:81;1248:14:1;1312:17116:66;;4626:20;;;;1312:17116;;4626:20;;;1312:17116;4626:20;;1312:17116;;1248:14:1;;;;;;;;;;;;;;4626:20:66;;1248:14:1;4626:20:66;;1312:17116;4626:20;;;;;;;;1312:17116;4724:4;;4695:35;4724:4;4695:35;:::i;:::-;4740;4724:4;4740:35;:::i;:::-;4785:12;1248:14:1;;;;;;;;;;;;;;4785:12:66;1248:14:1;;:::i;:::-;;4803:5:66;1248:14:1;;;;;;;;;;;;;;;;;;;;;;4785:12:66;1248:14:1;;;;;;;;;;4866:5:66;1248:14:1;;4785:12:66;1248:14:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1312:17116:66;4295:75;1248:14:1;1312:17116:66;1248:14:1;4912:19:66;1248:14:1;;;;;;;;;;;4912:19:66;1248:14:1;;;;;;4912:19:66;1312:17116;1248:14:1;;;;;;;;;;;4968:37:66;1312:17116;4995:8;1248:14:1;1312:17116:66;4968:37;:::i;:::-;5015;1312:17116;5042:8;1248:14:1;1312:17116:66;5015:37;:::i;:::-;1248:14:1;1312:17116:66;5114:11;1248:14:1;1312:17116:66;;5106:32;;;;1312:17116;;5106:32;1248:14:1;5106:32:66;;1312:17116;5106:32;;1312:17116;4395:10;1248:14:1;;;1671:64:0;5106:32:66;;1248:14:1;5106:32:66;;1312:17116;5106:32;;;;;;;;1312:17116;1248:14:1;1312:17116:66;5156:13;1248:14:1;1312:17116:66;;5148:34;;;;1312:17116;;5148:34;1248:14:1;5148:34:66;;1312:17116;5148:34;;1312:17116;4395:10;1248:14:1;;;1671:64:0;5148:34:66;;1248:14:1;5148:34:66;;1312:17116;5148:34;;;;;;;;1312:17116;5192:34;;1312:17116;5192:34;;;;1312:17116;;;1248:14:1;5192:34:66;;4724:4;1312:17116;5192:34;;1312:17116;4395:10;1248:14:1;;;1671:64:0;5192:34:66;;1248:14:1;5192:34:66;;1312:17116;5192:34;;;;;;;;1312:17116;1248:14:1;;1312:17116:66;4295:75;1312:17116;5396:13;1248:14:1;1312:17116:66;;;5396:21;;;;1248:14:1;5396:21:66;;;;;;;;5353:65;5396:21;;;;;1312:17116;1248:14:1;;;:::i;:::-;5353:65:66;:::i;:::-;1312:17116;5632:14;1248::1;1312:17116:66;;;5502:145;;;;;;;;;;;;;;;;;;;;;4724:4;5502:145;;;1312:17116;;;;4295:75;1248:14:1;;;;;4968:13:66;1248:14:1;;;;;;;;;;;;4724:4:66;1248:14:1;;-1:-1:-1;1248:14:1;;;;;;5502:145:66;;;;;;1248:14:1;;1312:17116:66;5502:145;;;1248:14:1;;4295:75:66;4695:15;1248:14:1;;;;;;;;;1312:17116:66;1248:14:1;;;;;;5502:145:66;;;;;;1248:14:1;;;5502:145:66;;;1248:14:1;;4295:75:66;4785:12;1248:14:1;;;;;;;4785:12:66;1248:14:1;;;;;;;;;;;5502:145:66;;;;;;1248:14:1;;;5502:145:66;;;1248:14:1;;4295:75:66;5592:17;1248:14:1;;;;;;;;;1312:17116:66;1248:14:1;;;;;;5502:145:66;;;;;;1248:14:1;;;5502:145:66;;;1248:14:1;;4295:75:66;4912:19;1248:14:1;;;;;;;4912:19:66;1312:17116;1248:14:1;;;1312:17116:66;1248:14:1;;;;;;-1:-1:-1;;;5502:145:66;;;1248:14:1;;1312:17116:66;5502:145;;;;;;;;;;1312:17116;;5683:24;5489:158;1248:14:1;;;;;;;5489:158:66;1248:14:1;;1312:17116:66;5673:7;1248:14:1;1312:17116:66;;;;5683:24;:::i;:::-;5657:51;1312:17116;5657:51;;;;;1312:17116;;;;;5657:51;;;;;1248:14:1;5657:51:66;;1312:17116;5657:51;;;:::i;:::-;;;;1312:17116;5657:51;;;;;;;;1248:14:1;;;1312:17116:66;5673:7;1248:14:1;1312:17116:66;4295:75;1248:14:1;;5489:158:66;1248:14:1;;;;;;5489:158:66;1248:14:1;1312:17116:66;;5804:75;;;;;1248:14:1;5804:75:66;;5835:42;1312:17116;5804:75;;1312:17116;;;5804:75;;;;;;5776:104;5804:75;;;;;1248:14:1;;;;:::i;5776:104:66:-;1312:17116;4295:75;1312:17116;5396:13;1248:14:1;1312:17116:66;;;5933:21;;;;1248:14:1;5933:21:66;;;;;;;;5890:65;5933:21;;;;;1248:14:1;;;:::i;5890:65:66:-;1312:17116;;6033:11;;;;;5502:145;6033:11;;;;;;;;;;;;;;;;;;;;;;;;;1312:17116;;6277:22;6022;1248:14:1;;;;;;;6022:22:66;1248:14:1;;1312:17116:66;1248:14:1;;1312:17116:66;;;;6277:22;:::i;:::-;6247:53;1312:17116;6247:53;;;;;1312:17116;;;;;6247:53;;;;;1248:14:1;6247:53:66;;1312:17116;6247:53;;;:::i;:::-;;;;1312:17116;6247:53;;;;;;;;1248:14:1;;1312:17116:66;6326:13;1248:14:1;1312:17116:66;6342:22;1312:17116;6022:22;1248:14:1;1312:17116:66;6342:22;:::i;:::-;6310:55;1312:17116;6310:55;;;;;1312:17116;;;;;6310:55;;;;;1248:14:1;6310:55:66;;1312:17116;6310:55;;;:::i;:::-;;;;1312:17116;6310:55;;;;;;;;1248:14:1;;1312:17116:66;6391:9;1248:14:1;1312:17116:66;6403:22;1312:17116;6022:22;1248:14:1;1312:17116:66;6403:22;:::i;:::-;6375:51;1312:17116;6375:51;;;;;1312:17116;;;;;6375:51;;;;;1248:14:1;6375:51:66;;1312:17116;6375:51;;;:::i;:::-;;;;1312:17116;6375:51;;;;;;;;1248:14:1;;1312:17116:66;6022:22;1248:14:1;1312:17116:66;6463:23;1312:17116;6391:9;1248:14:1;1312:17116:66;6463:23;:::i;:::-;6436:51;1312:17116;6436:51;;;;;1312:17116;;;;;6436:51;;;;;1248:14:1;6436:51:66;;1312:17116;6436:51;;;:::i;:::-;;;;1312:17116;6436:51;;;;;;;;1248:14:1;;;1312:17116:66;6391:9;1248:14:1;1312:17116:66;1248:14:1;6022:22:66;1248:14:1;;;6022:22:66;1248:14:1;;4295:75:66;1312:17116;5489:158;1248:14:1;1312:17116:66;;;6563:75;;;;1248:14:1;6563:75:66;;5835:42;1312:17116;6563:75;;1312:17116;6563:75;;;;;;6535:104;6563:75;;;;;1248:14:1;;;:::i;6535:104:66:-;1248:14:1;1312:17116:66;5396:13;1248:14:1;1312:17116:66;;;6692:21;1248:14:1;6692:21:66;;4295:75;6692:21;1312:17116;6692:21;;;;;;;;;4295:75;6692:21;6649:65;6692:21;;;;;1248:14:1;;;:::i;6649:65:66:-;1248:14:1;1312:17116:66;;7093:29;;;;1248:14:1;7093:29:66;;;1312:17116;7093:29;;1671:64:0;7093:29:66;;;;;;1312:17116;7093:29;;;;;1248:14:1;1312:17116:66;;1248:14:1;7067:56:66;1248:14:1;;;7067:56:66;1248:14:1;1312:17116:66;;7415:16;;;;;;;;;;5502:145;7415:16;;;;;;;;;;;;;;;;;;;;1312:17116;;1248:14:1;7402:29:66;1248:14:1;;;;;;7402:29:66;1248:14:1;1312:17116:66;;7470:24;;;:::i;:::-;7441:54;1312:17116;7441:54;;;;;1312:17116;;;;;7441:54;;;;;1248:14:1;7441:54:66;;1312:17116;7441:54;;;:::i;:::-;;;;1312:17116;7441:54;;;;;;;;1248:14:1;;1312:17116:66;7402:29;1248:14:1;1312:17116:66;;7505:40;;;;1312:17116;;7505:40;1248:14:1;7505:40:66;;1312:17116;7505:40;;1312:17116;4395:10;1248:14:1;;;1671:64:0;7505:40:66;;1248:14:1;7505:40:66;;1312:17116;7505:40;;;;;;;;1248:14:1;;1312:17116:66;7402:29;1248:14:1;1312:17116:66;;7614:29;;;;1312:17116;;7614:29;1248:14:1;7614:29:66;;1312:17116;7614:29;;1312:17116;7614:29;;1248:14:1;7614:29:66;;1312:17116;7614:29;;;;;;;;1248:14:1;;4295:75:66;1312:17116;5396:13;1248:14:1;1312:17116:66;1248:14:1;1312:17116:66;;7834:29;;;;1248:14:1;7834:29:66;;;1312:17116;7834:29;;1671:64:0;7834:29:66;;;;;;1312:17116;7834:29;;;;;1248:14:1;1312:17116:66;;1248:14:1;7811:53:66;1248:14:1;;;7811:53:66;1248:14:1;1312:17116:66;;7834:29;;;;4295:75;7834:29;4295:75;7834:29;;;;;;;:::i;:::-;;;;7614;;;;:::i;:::-;1312:17116;;7614:29;;;;;1312:17116;;7505:40;;;;:::i;:::-;1312:17116;;7505:40;;;;7441:54;;;;:::i;:::-;1312:17116;;7441:54;;;;;1312:17116;;;7415:16;1248:14:1;1671:64:0;;;;;1312:17116:66;1671:64:0;;7093:29:66;;;;4295:75;7093:29;4295:75;7093:29;;;;;;;:::i;:::-;;;;6692:21;;;;;;;;;;;;;;:::i;:::-;;;;6563:75;;;;4295;6563;4295;6563;;;;;;;:::i;:::-;;;;6436:51;;;;:::i;:::-;1312:17116;;6436:51;;;;6375;;;;:::i;:::-;1312:17116;;6375:51;;;;6310:55;;;;:::i;:::-;1312:17116;;6310:55;;;;6247:53;;;;:::i;:::-;1312:17116;;6247:53;;;;6033:11;1248:14:1;1671:64:0;;;;;1312:17116:66;1671:64:0;;5933:21:66;;;;4295:75;5933:21;4295:75;5933:21;;;;;;;:::i;5657:51::-;;;;:::i;:::-;1312:17116;;5657:51;;;;1248:14:1;;;1312:17116:66;;;;1248:14:1;;-1:-1:-1;4295:75:66;1248:14:1;;;;;;;;;;;;;;;1312:17116:66;;;;1248:14:1;;-1:-1:-1;4295:75:66;1248:14:1;;;;;;;;;;;;;;;1671:64:0;;1248:14:1;;-1:-1:-1;4295:75:66;1248:14:1;;;;;;;;;;;;;;;1312:17116:66;;;;1248:14:1;;-1:-1:-1;4295:75:66;1248:14:1;;;;;;;;;;;;;;;1312:17116:66;;;;1248:14:1;;-1:-1:-1;4295:75:66;1248:14:1;;;;;;;;;;;;5192:34:66;;;;:::i;:::-;1312:17116;;5192:34;;;;5148;;;;:::i;:::-;1312:17116;;5148:34;;;;5106:32;;;;:::i;:::-;1312:17116;;5106:32;;;;1248:14:1;;1312:17116:66;1248:14:1;4912:19:66;1312:17116;1248:14:1;;1312:17116:66;1248:14:1;4626:20:66;;;;:::i;:::-;1312:17116;;4626:20;;;;4592:24;;;;:::i;:::-;1312:17116;;4592:24;;;;;1312:17116;;;;4507:75;;;;4295;4507;4295;4507;;;;;;;:::i;:::-;;;;4466:24;;;;:::i;:::-;1312:17116;;4466:24;;;;4380:26;;;;:::i;:::-;;;;4295:75;;;;;;;;;;;;;;:::i;:::-;;;;1312:17116;;;;;;;;;;;;;;;;3834:77;1312:17116;;;;;1671:64:0;;;;;;;;:::o;:::-;1312:17116:66;1671:64:0;;;;;;;;;;;1312:17116:66;1671:64:0;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;1312:17116:66;1671:64:0;1312:17116:66;;1671:64:0;;;:::i;:::-;;;;-1:-1:-1;1671:64:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;1312:17116:66;;;1671:64:0;;;;;:::o;1819:584::-;1873:7;1312:17116:66;;;;;;;;;;;;;;;1896:14:0:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;1312:17116:66;;;;;2196:43:0;;;;1312:17116:66;;;1671:64:0;1312:17116:66;1671:64:0;;;1312:17116:66;2196:43:0;;;;;:::i;:::-;2086:175;1671:64;1312:17116:66;;2086:175:0;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;1248:14:1:-;;;;;;;;;;1312:17116:66;;;1248:14:1;;;;;:::o;:::-;4785:12:66;1248:14:1;;;;;;4785:12:66;-1:-1:-1;1248:14:1;;;;-1:-1:-1;1248:14:1;:::o;:::-;4695:15:66;1248:14:1;;;;;;;;;;;4695:15:66;1248:14:1;;;;;;1312:17116:66;1248:14:1;4695:15:66;-1:-1:-1;1248:14:1;;;1312:17116:66;;1248:14:1;;;;;;;:::o;:::-;4968:13:66;1248:14:1;;;;;;;;;;;4968:13:66;1248:14:1;;;;;;1312:17116:66;1248:14:1;4968:13:66;-1:-1:-1;1248:14:1;;;1312:17116:66;;1248:14:1;;;;;;;:::o;:::-;1671:64:0;1312:17116:66;1671:64:0;;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;;;;;:::o;:::-;;;;-1:-1:-1;1671:64:0;;;:::i;:::-;1312:17116:66;1671:64:0;1312:17116:66;;1671:64:0;;;:::i;:::-;;;;1248:14:1;;;;;:::o;:::-;;1671:64:0;;1248:14:1;;;1671:64:0;;1248:14:1;;;;;;;;;;;;:::i;:::-;1671:64:0;;1248:14:1;;;:::o;:::-;;;1312:17116:66;1248:14:1;;;1312:17116:66;;;1248:14:1;;;;;;;;:::i;:::-;1671:64:0;1312:17116:66;1671:64:0;;;;:::i;:::-;1248:14:1;1671:64:0;;1248:14:1;;;;;:::o;7508:145:14:-;-1:-1:-1;7508:145:14;;;;7591:54;1312:17116:66;;7591:54:14;;1312:17116:66;;7591:54:14;;;;;;;1312:17116:66;7591:54:14;;;1312:17116:66;;;;;;:::i;:::-;;;;;;;7591:54:14;;;;;;;;:::i;:::-;1671:64:0;852:159:14;591:42;852:159;;;7508:145::o;1312:17116:66:-;1671:64:0;1312:17116:66;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;10053:9;1312:17116;;1671:64:0;1312:17116:66:o;:::-;;;;;1671:64:0;;1248:14:1;;;;1312:17116:66;;;;;;;;;;;1671:64:0;;;;:::i;:::-;1312:17116:66;1671:64:0;;1312:17116:66;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1248:14:1;1312:17116:66;1248:14:1;;;1312:17116:66;;1248:14:1;1312:17116:66;;;;;;:::i;2410:424:0:-;2939:104;;;2445:359;;2410:424;1312:17116:66;;;2928:1:0;1312:17116:66;;;2928:1:0;1312:17116:66;2410:424:0:o;2445:359::-;1312:17116:66;;2645:67:0;;;;1312:17116:66;;;;1671:64:0;1312:17116:66;;;1671:64:0;2705:4;1312:17116:66;;;1671:64:0;1312:17116:66;2645:67:0;;1312:17116:66;1671:64:0;;;;;;;;;;;;-1:-1:-1;1671:64:0;2534:196;;1671:64;;;;1312:17116:66;1671:64:0;2534:196;;;1671:64;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;5469:178;9577:9:66;5545:6:0;;;;;5541:100;;;5469:178;;;;;:::o;5541:100::-;5572:30;;1312:17116:66;;;;5572:30:0;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;5255:203;1312:17116:66;;5286:41:0;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;5286:41:0;1312:17116:66;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;1671:64:0;5346:31;;;;;;;;1312:17116:66;;;;;;;;;;;;;1248:14:1;;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;;;;1671:64:0;5396:31;;;;;:::i;:::-;5255:203;;;;;5469:178;;;5545:6;;;;5541:100;;;5469:178;;;;:::o;7020:::-;10053:9:66;7096:6:0;;;;;7092:100;;;7020:178;;;;:::o;7092:100::-;7123:30;;1312:17116:66;;;;7123:30:0;;;;;:::i;:::-;;;;6809:200;;7092:100;;;6809:200;1312:17116:66;;;;6840:40:0;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;1248:14:1;;;1312:17116:66;;;;;;6840:40:0;1312:17116:66;;;;;;;;;;1248:14:1;1312:17116:66;;1248:14:1;;1312:17116:66;;;;1671:64:0;6899:30;;;;;1312:17116:66;;;;;;;;;1248:14:1;1312:17116:66;;1248:14:1;;1312:17116:66;;;;1671:64:0;6948:30;;;:::i;16255:93:5:-;11002:6:66;16318:15:5;1312:17116:66;16318:15:5;;1312:17116:66;;;;16310:31:5;;;;;;-1:-1:-1;1312:17116:66;16085:59:5;1312:17116:66;;;;16310:31:5;;;;;1248:14:1;16310:31:5;;;;;1671:64:0;16310:31:5;;;;;;;;16255:93;:::o;16310:31::-;;;;:::i;:::-;16255:93::o;16310:31::-;1312:17116:66;;1248:14:1;-1:-1:-1;1248:14:1;;;;;6108:121:14;-1:-1:-1;6108:121:14;;1312:17116:66;;6179:42:14;;1312:17116:66;6179:42:14;;;;;;;;;;;1312:17116:66;;;;;;:::i;:::-;6179:42:14;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "compliantVault()": "4676077e",
    "convexBooster()": "2cdacb50",
    "convexFraxVoterProxy()": "2ebe9869",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "distributor()": "bfe10928",
    "failed()": "ba414fa6",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFarm()": "6fa89364",
    "fxsToken()": "09dacc04",
    "nonCompliantVault()": "6f539c2e",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testEnd2End()": "185a8d73",
    "testOnLockReceivedCompliance()": "784b90d2",
    "testOnLockReceivedNonCompliance()": "4c9e9f0d",
    "vaultImpl()": "ec1e31a0",
    "vaultOwner()": "1f52692b",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"contract Booster\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexFraxVoterProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCompliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEnd2End\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOnLockReceivedCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOnLockReceivedNonCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiverOwner()\":{\"notice\":\"The receiving vault owner - IS A CONTRACT\"},\"senderOwner()\":{\"notice\":\"The sending vault owner - IS NOT A CONTRACT\"},\"senderVault()\":{\"notice\":\"The sending vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol\":{\"keccak256\":\"0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15\",\"dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol\":{\"keccak256\":\"0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9\",\"dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol\":{\"keccak256\":\"0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613\",\"dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol\":{\"keccak256\":\"0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b\",\"dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol\":{\"keccak256\":\"0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c\",\"dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol\":{\"keccak256\":\"0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94\",\"dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol\":{\"keccak256\":\"0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47\",\"dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b\",\"dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a\",\"dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol\":{\"keccak256\":\"0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763\",\"dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d\",\"dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol\":{\"keccak256\":\"0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78\",\"dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol\":{\"keccak256\":\"0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0\",\"dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexBoosterImprovedInitializer.sol\":{\"keccak256\":\"0xfb241568753babda66bdba39ba24c60d28d2cd0edccaf3d83251d14406db9ff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b72c3d9f98289ce07d73500f615f28624514eff36db00b68d6b406789bdd588\",\"dweb:/ipfs/QmXWgaWGYxeC5XmbXFo96zLkxiDVABc3nbZ2wn2mDZqfPU\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0x007eafaf7d477ad95b226544a9fb65928f33e113dade1510da35eeff7a694ef5\",\"urls\":[\"bzz-raw://e6124baa75da99471be2c78415169e20fa1f458d000230e4f6cdb0d8a066d0b7\",\"dweb:/ipfs/QmU2nUTvyXL41FnRPYPj8pA5kCCDRKUPjx94KtGGbd1PV3\"]},\"src/TransferrableConvexFrxEthFarm.sol\":{\"keccak256\":\"0x35bb15c8dfc9890d6435ecf7f3e364529e4ed7031acda7e09781e836417ba021\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ab7ad0a4280610d8043ea3ad09e6d5fde7bd15f901218815494f557428f9ef5\",\"dweb:/ipfs/QmYoe3GmB4Z5xpCibRKsVqJNrmDnVuSvbpZcq1bFbPYpsD\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0\",\"dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0x841120c46dd52d64d1c039dc4cf429108885baeb9e4820fe0738319951073a32\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e69f45a23af4c8cd6abd83a48214ca901fa4f45d4d2599d2813109a40ab180d6\",\"dweb:/ipfs/Qmdo7jkmgokaSyCTg12odsmK7PP2sSzr9TbkwaHUjqLtXq\"]},\"test/mocks/MockVaultOwner.sol\":{\"keccak256\":\"0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226\",\"dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "contract Booster",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexFraxVoterProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonCompliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEnd2End"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOnLockReceivedCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOnLockReceivedNonCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultImpl",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiverOwner()": {
            "notice": "The receiving vault owner - IS A CONTRACT"
          },
          "senderOwner()": {
            "notice": "The sending vault owner - IS NOT A CONTRACT"
          },
          "senderVault()": {
            "notice": "The sending vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol": {
        "keccak256": "0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e",
        "urls": [
          "bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78",
          "dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol": {
        "keccak256": "0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7",
        "urls": [
          "bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb",
          "dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol": {
        "keccak256": "0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd",
        "urls": [
          "bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15",
          "dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol": {
        "keccak256": "0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d",
        "urls": [
          "bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9",
          "dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol": {
        "keccak256": "0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a",
        "urls": [
          "bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613",
          "dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol": {
        "keccak256": "0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c",
        "urls": [
          "bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89",
          "dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol": {
        "keccak256": "0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89",
        "urls": [
          "bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b",
          "dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol": {
        "keccak256": "0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7",
        "urls": [
          "bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c",
          "dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol": {
        "keccak256": "0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665",
        "urls": [
          "bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94",
          "dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol": {
        "keccak256": "0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff",
        "urls": [
          "bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47",
          "dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3",
        "urls": [
          "bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b",
          "dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c",
        "urls": [
          "bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a",
          "dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol": {
        "keccak256": "0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b",
        "urls": [
          "bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763",
          "dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol": {
        "keccak256": "0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285",
        "urls": [
          "bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d",
          "dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol": {
        "keccak256": "0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4",
        "urls": [
          "bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78",
          "dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol": {
        "keccak256": "0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d",
        "urls": [
          "bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0",
          "dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexBoosterImprovedInitializer.sol": {
        "keccak256": "0xfb241568753babda66bdba39ba24c60d28d2cd0edccaf3d83251d14406db9ff1",
        "urls": [
          "bzz-raw://8b72c3d9f98289ce07d73500f615f28624514eff36db00b68d6b406789bdd588",
          "dweb:/ipfs/QmXWgaWGYxeC5XmbXFo96zLkxiDVABc3nbZ2wn2mDZqfPU"
        ],
        "license": "MIT"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0x007eafaf7d477ad95b226544a9fb65928f33e113dade1510da35eeff7a694ef5",
        "urls": [
          "bzz-raw://e6124baa75da99471be2c78415169e20fa1f458d000230e4f6cdb0d8a066d0b7",
          "dweb:/ipfs/QmU2nUTvyXL41FnRPYPj8pA5kCCDRKUPjx94KtGGbd1PV3"
        ],
        "license": null
      },
      "src/TransferrableConvexFrxEthFarm.sol": {
        "keccak256": "0x35bb15c8dfc9890d6435ecf7f3e364529e4ed7031acda7e09781e836417ba021",
        "urls": [
          "bzz-raw://2ab7ad0a4280610d8043ea3ad09e6d5fde7bd15f901218815494f557428f9ef5",
          "dweb:/ipfs/QmYoe3GmB4Z5xpCibRKsVqJNrmDnVuSvbpZcq1bFbPYpsD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50",
        "urls": [
          "bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0",
          "dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0x841120c46dd52d64d1c039dc4cf429108885baeb9e4820fe0738319951073a32",
        "urls": [
          "bzz-raw://e69f45a23af4c8cd6abd83a48214ca901fa4f45d4d2599d2813109a40ab180d6",
          "dweb:/ipfs/Qmdo7jkmgokaSyCTg12odsmK7PP2sSzr9TbkwaHUjqLtXq"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockVaultOwner.sol": {
        "keccak256": "0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec",
        "urls": [
          "bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226",
          "dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 48853,
    "exportedSymbols": {
      "Address": [
        35396
      ],
      "Booster": [
        37092
      ],
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "FRAXStablecoin": [
        32902
      ],
      "FraxFarmERC20TransfersTest": [
        48852
      ],
      "FraxUnifiedFarm_ERC20_V2": [
        46777
      ],
      "IDeposits": [
        47354
      ],
      "IERC20": [
        35506
      ],
      "IERC20Permit": [
        35430
      ],
      "IFraxFarmERC20": [
        47209
      ],
      "IFraxFarmTransfers": [
        47136
      ],
      "IFraxGaugeController": [
        35066
      ],
      "IPoolRegistry": [
        35928
      ],
      "IProxyOwner": [
        35788
      ],
      "IProxyVault": [
        35845
      ],
      "IStaker": [
        36000
      ],
      "ITransferChecker": [
        35855
      ],
      "IVaultType": [
        35861
      ],
      "SafeERC20": [
        35782
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        40290
      ],
      "VaultOwner": [
        48892
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:18390:66",
    "nodes": [
      {
        "id": 47291,
        "nodeType": "PragmaDirective",
        "src": "39:24:66",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 47292,
        "nodeType": "ImportDirective",
        "src": "65:28:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47293,
        "nodeType": "ImportDirective",
        "src": "94:26:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47295,
        "nodeType": "ImportDirective",
        "src": "205:124:66",
        "nodes": [],
        "absolutePath": "src/TransferrableConvexFrxEthFarm.sol",
        "file": "../src/TransferrableConvexFrxEthFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 46778,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47294,
              "name": "FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46777,
              "src": "213:38:66",
              "typeDescriptions": {}
            },
            "local": "FraxUnifiedFarm_ERC20_V2",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47297,
        "nodeType": "ImportDirective",
        "src": "330:80:66",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 40291,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47296,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40290,
              "src": "338:18:66",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47299,
        "nodeType": "ImportDirective",
        "src": "411:54:66",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol",
        "file": "@frax/../Frax/Frax.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 32903,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47298,
              "name": "FRAXStablecoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32902,
              "src": "419:14:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47302,
        "nodeType": "ImportDirective",
        "src": "466:77:66",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 47290,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47300,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47136,
              "src": "474:18:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47301,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47209,
              "src": "494:14:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47303,
        "nodeType": "ImportDirective",
        "src": "544:61:66",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 35067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47305,
        "nodeType": "ImportDirective",
        "src": "606:71:66",
        "nodes": [],
        "absolutePath": "test/mocks/MockVaultOwner.sol",
        "file": "@mocks/MockVaultOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 48893,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47304,
              "name": "MockVaultOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48892,
              "src": "614:14:66",
              "typeDescriptions": {}
            },
            "local": "VaultOwner",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47306,
        "nodeType": "ImportDirective",
        "src": "678:53:66",
        "nodes": [],
        "absolutePath": "src/ConvexBoosterImprovedInitializer.sol",
        "file": "../src/ConvexBoosterImprovedInitializer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48853,
        "sourceUnit": 37093,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47354,
        "nodeType": "ContractDefinition",
        "src": "852:458:66",
        "nodes": [
          {
            "id": 47318,
            "nodeType": "FunctionDefinition",
            "src": "878:104:66",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "887:13:66",
            "parameters": {
              "id": 47314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47311,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "919:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47318,
                  "src": "901:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47308,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "901:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 47310,
                    "length": {
                      "hexValue": "32",
                      "id": 47309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "909:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "901:10:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47313,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "937:16:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47318,
                  "src": "929:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:54:66"
            },
            "returnParameters": {
              "id": 47317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47316,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47318,
                  "src": "973:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:9:66"
            },
            "scope": 47354,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47325,
            "nodeType": "FunctionDefinition",
            "src": "987:68:66",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "996:9:66",
            "parameters": {
              "id": 47321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47320,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1014:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47325,
                  "src": "1006:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:17:66"
            },
            "returnParameters": {
              "id": 47324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47325,
                  "src": "1046:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:9:66"
            },
            "scope": 47354,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47334,
            "nodeType": "FunctionDefinition",
            "src": "1060:74:66",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1069:7:66",
            "parameters": {
              "id": 47330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47327,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1085:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47334,
                  "src": "1077:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47329,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1102:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47334,
                  "src": "1094:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:33:66"
            },
            "returnParameters": {
              "id": 47333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47334,
                  "src": "1128:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:6:66"
            },
            "scope": 47354,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47339,
            "nodeType": "FunctionDefinition",
            "src": "1139:43:66",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1148:7:66",
            "parameters": {
              "id": 47337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47336,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1164:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47339,
                  "src": "1156:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:17:66"
            },
            "returnParameters": {
              "id": 47338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:66"
            },
            "scope": 47354,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47346,
            "nodeType": "FunctionDefinition",
            "src": "1187:56:66",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1196:7:66",
            "parameters": {
              "id": 47344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47341,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1212:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47346,
                  "src": "1204:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47343,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1229:3:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47346,
                  "src": "1221:11:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:30:66"
            },
            "returnParameters": {
              "id": 47345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:66"
            },
            "scope": 47354,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47353,
            "nodeType": "FunctionDefinition",
            "src": "1248:60:66",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "1257:10:66",
            "parameters": {
              "id": 47351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47348,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1276:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47353,
                  "src": "1268:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47350,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "1289:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 47353,
                  "src": "1284:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1267:31:66"
            },
            "returnParameters": {
              "id": 47352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1307:0:66"
            },
            "scope": 47354,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 47307,
          "nodeType": "StructuredDocumentation",
          "src": "731:120:66",
          "text": "note: The new initializer was removed due to issues etching, values hardcoded in to the vault code for testing only"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          47354
        ],
        "name": "IDeposits",
        "nameLocation": "862:9:66",
        "scope": 48853,
        "usedErrors": []
      },
      {
        "id": 48852,
        "nodeType": "ContractDefinition",
        "src": "1312:17116:66",
        "nodes": [
          {
            "id": 47359,
            "nodeType": "VariableDeclaration",
            "src": "1362:42:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1394:10:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 47358,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47357,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "1362:24:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46777,
                "src": "1362:24:66"
              },
              "referencedDeclaration": 46777,
              "src": "1362:24:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47362,
            "nodeType": "VariableDeclaration",
            "src": "1410:21:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1423:8:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 47361,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47360,
                "name": "Vault",
                "nameLocations": [
                  "1410:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40290,
                "src": "1410:5:66"
              },
              "referencedDeclaration": 40290,
              "src": "1410:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47365,
            "nodeType": "VariableDeclaration",
            "src": "1483:28:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f52692b",
            "mutability": "mutable",
            "name": "vaultOwner",
            "nameLocation": "1501:10:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 47364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47363,
                "name": "VaultOwner",
                "nameLocations": [
                  "1483:10:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48892,
                "src": "1483:10:66"
              },
              "referencedDeclaration": 48892,
              "src": "1483:10:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47367,
            "nodeType": "VariableDeclaration",
            "src": "1518:20:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1533:5:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47366,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1518:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47369,
            "nodeType": "VariableDeclaration",
            "src": "1544:18:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1559:3:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47368,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1544:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47372,
            "nodeType": "VariableDeclaration",
            "src": "1573:66:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1588:6:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47370,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1573:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 47371,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1597:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 47375,
            "nodeType": "VariableDeclaration",
            "src": "1645:69:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1660:9:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47373,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1645:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 47374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1672:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 47381,
            "nodeType": "VariableDeclaration",
            "src": "1747:84:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "1762:15:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47376,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1747:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 47379,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1788:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47378,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1780:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47377,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1780:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47380,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1780:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47384,
            "nodeType": "VariableDeclaration",
            "src": "1837:74:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "1852:14:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47382,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1837:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 47383,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1869:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 47390,
            "nodeType": "VariableDeclaration",
            "src": "1964:110:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "1996:7:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 47386,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47385,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "1964:24:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46777,
                "src": "1964:24:66"
              },
              "referencedDeclaration": 46777,
              "src": "1964:24:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 47388,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2031:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47387,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46777,
                "src": "2006:24:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                }
              },
              "id": 47389,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2006:68:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47396,
            "nodeType": "VariableDeclaration",
            "src": "2098:82:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "2113:13:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2098:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 47394,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2137:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47393,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2129:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47392,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2129:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47395,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2129:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47402,
            "nodeType": "VariableDeclaration",
            "src": "2186:88:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "2201:19:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47397,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2186:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 47400,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2231:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47399,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2223:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47398,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2223:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47401,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2223:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47408,
            "nodeType": "VariableDeclaration",
            "src": "2280:81:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "2295:12:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47403,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2280:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 47406,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2318:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47405,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2310:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47404,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2310:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47407,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2310:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47414,
            "nodeType": "VariableDeclaration",
            "src": "2367:83:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "2382:14:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47409,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2367:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 47412,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2407:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47411,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2399:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47410,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2399:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47413,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2399:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47417,
            "nodeType": "VariableDeclaration",
            "src": "2456:71:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "2471:11:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47415,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2456:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
              "id": 47416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2485:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
            },
            "visibility": "public"
          },
          {
            "id": 47423,
            "nodeType": "VariableDeclaration",
            "src": "2600:82:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "2615:13:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Booster_$37092",
              "typeString": "contract Booster"
            },
            "typeName": {
              "id": 47419,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47418,
                "name": "Booster",
                "nameLocations": [
                  "2600:7:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37092,
                "src": "2600:7:66"
              },
              "referencedDeclaration": 37092,
              "src": "2600:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$37092",
                "typeString": "contract Booster"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 47421,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2639:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47420,
                "name": "Booster",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 37092,
                "src": "2631:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Booster_$37092_$",
                  "typeString": "type(contract Booster)"
                }
              },
              "id": 47422,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2631:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$37092",
                "typeString": "contract Booster"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47429,
            "nodeType": "VariableDeclaration",
            "src": "2706:87:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "2721:18:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47424,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2706:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 47427,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2750:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47426,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2742:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47425,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2742:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47428,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2742:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47435,
            "nodeType": "VariableDeclaration",
            "src": "2858:89:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "2ebe9869",
            "mutability": "mutable",
            "name": "convexFraxVoterProxy",
            "nameLocation": "2873:20:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47430,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2858:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835394346434433383437343665633330333532393944393037383242653036356534363638303042",
                  "id": 47433,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2904:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x59CFCD384746ec3035299D90782Be065e466800B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47432,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2896:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47431,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2896:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47434,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2896:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47442,
            "nodeType": "VariableDeclaration",
            "src": "3139:76:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 47436,
              "nodeType": "StructuredDocumentation",
              "src": "3105:29:66",
              "text": "@notice The sending vault"
            },
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "3152:11:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 47438,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47437,
                "name": "Vault",
                "nameLocations": [
                  "3139:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40290,
                "src": "3139:5:66"
              },
              "referencedDeclaration": 40290,
              "src": "3139:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 47440,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3172:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47439,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 40290,
                "src": "3166:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40290_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 47441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3166:49:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47449,
            "nodeType": "VariableDeclaration",
            "src": "3281:80:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 47443,
              "nodeType": "StructuredDocumentation",
              "src": "3221:55:66",
              "text": "@notice The sending vault owner - IS NOT A CONTRACT"
            },
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "3296:11:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47444,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3281:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 47447,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3318:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47446,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3310:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47445,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3310:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3310:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47455,
            "nodeType": "VariableDeclaration",
            "src": "3367:78:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "3380:13:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 47451,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47450,
                "name": "Vault",
                "nameLocations": [
                  "3367:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40290,
                "src": "3367:5:66"
              },
              "referencedDeclaration": 40290,
              "src": "3367:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 47453,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3402:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47452,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 40290,
                "src": "3396:5:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40290_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 47454,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3396:49:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47462,
            "nodeType": "VariableDeclaration",
            "src": "3509:82:66",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 47456,
              "nodeType": "StructuredDocumentation",
              "src": "3451:53:66",
              "text": "@notice The receiving vault owner - IS A CONTRACT"
            },
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "3524:13:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47457,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3509:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 47460,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3548:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47459,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3540:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47458,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3540:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47461,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3540:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47465,
            "nodeType": "VariableDeclaration",
            "src": "3597:30:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f539c2e",
            "mutability": "mutable",
            "name": "nonCompliantVault",
            "nameLocation": "3610:17:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 47464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47463,
                "name": "Vault",
                "nameLocations": [
                  "3597:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40290,
                "src": "3597:5:66"
              },
              "referencedDeclaration": 40290,
              "src": "3597:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47468,
            "nodeType": "VariableDeclaration",
            "src": "3633:27:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "4676077e",
            "mutability": "mutable",
            "name": "compliantVault",
            "nameLocation": "3646:14:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 47467,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47466,
                "name": "Vault",
                "nameLocations": [
                  "3633:5:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40290,
                "src": "3633:5:66"
              },
              "referencedDeclaration": 40290,
              "src": "3633:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47474,
            "nodeType": "VariableDeclaration",
            "src": "3666:78:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec1e31a0",
            "mutability": "mutable",
            "name": "vaultImpl",
            "nameLocation": "3681:9:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47469,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3666:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830336662383534334539333336323462343561626464333139383735343863304439383932463037",
                  "id": 47472,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3701:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x03fb8543E933624b45abdd31987548c0D9892F07"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47471,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3693:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47470,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3693:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47473,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3693:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47477,
            "nodeType": "VariableDeclaration",
            "src": "3751:69:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "3766:9:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47475,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3751:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 47476,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3778:42:66",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 47483,
            "nodeType": "VariableDeclaration",
            "src": "3834:77:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "3849:8:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47478,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3834:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 47481,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3868:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47480,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3860:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47479,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3860:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3860:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47489,
            "nodeType": "VariableDeclaration",
            "src": "3924:77:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "3939:8:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3924:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 47487,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3958:42:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 47486,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3950:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47485,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3950:7:66",
                  "typeDescriptions": {}
                }
              },
              "id": 47488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3950:51:66",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47492,
            "nodeType": "VariableDeclaration",
            "src": "4027:31:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "4045:13:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 47490,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4027:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47491,
              "nodeType": "ArrayTypeName",
              "src": "4027:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47495,
            "nodeType": "VariableDeclaration",
            "src": "4064:33:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "4082:15:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 47493,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4064:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47494,
              "nodeType": "ArrayTypeName",
              "src": "4064:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47498,
            "nodeType": "VariableDeclaration",
            "src": "4103:30:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "4121:12:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 47496,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4103:7:66",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 47497,
              "nodeType": "ArrayTypeName",
              "src": "4103:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47501,
            "nodeType": "VariableDeclaration",
            "src": "4139:35:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "4157:17:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 47499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4139:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47500,
              "nodeType": "ArrayTypeName",
              "src": "4139:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47504,
            "nodeType": "VariableDeclaration",
            "src": "4180:37:66",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "4198:19:66",
            "scope": 48852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 47502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4180:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 47503,
              "nodeType": "ArrayTypeName",
              "src": "4180:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47848,
            "nodeType": "FunctionDefinition",
            "src": "4224:3824:66",
            "nodes": [],
            "body": {
              "id": 47847,
              "nodeType": "Block",
              "src": "4248:3800:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47507,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47367,
                      "src": "4287:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 47510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4303:66:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 47508,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4295:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 47509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4298:4:66",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4295:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 47511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4295:75:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4287:83:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47513,
                  "nodeType": "ExpressionStatement",
                  "src": "4287:83:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47517,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47367,
                        "src": "4388:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4395:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47514,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4380:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4383:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4380:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4380:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47520,
                  "nodeType": "ExpressionStatement",
                  "src": "4380:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47524,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47367,
                        "src": "4475:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 47525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4482:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 47521,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4466:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4469:5:66",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4466:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 47526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47527,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:24:66"
                },
                {
                  "expression": {
                    "id": 47533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47528,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47369,
                      "src": "4501:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 47531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4515:66:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 47529,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4507:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 47530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4510:4:66",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4507:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 47532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4507:75:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4501:81:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47534,
                  "nodeType": "ExpressionStatement",
                  "src": "4501:81:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47538,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47369,
                        "src": "4600:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4605:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47535,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4592:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4595:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4592:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47541,
                  "nodeType": "ExpressionStatement",
                  "src": "4592:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47545,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47369,
                        "src": "4635:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 47546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4640:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 47542,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4626:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4629:5:66",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4626:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 47547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:20:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47548,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:20:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47554,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4724:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 47553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4716:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4716:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4716:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47549,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47495,
                        "src": "4695:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 47551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4711:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4695:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 47556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4695:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47557,
                  "nodeType": "ExpressionStatement",
                  "src": "4695:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47563,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4769:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 47562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4761:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47561,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4761:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4761:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47558,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47495,
                        "src": "4740:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 47560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4756:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4740:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 47565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4740:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47566,
                  "nodeType": "ExpressionStatement",
                  "src": "4740:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3132333435",
                        "id": 47570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        },
                        "value": "12345"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        }
                      ],
                      "expression": {
                        "id": 47567,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47498,
                        "src": "4785:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 47569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4798:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4785:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 47571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4785:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47572,
                  "nodeType": "ExpressionStatement",
                  "src": "4785:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3234363930",
                        "id": 47576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4866:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        },
                        "value": "24690"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        }
                      ],
                      "expression": {
                        "id": 47573,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47498,
                        "src": "4848:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 47575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4861:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4848:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 47577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:24:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47578,
                  "nodeType": "ExpressionStatement",
                  "src": "4848:24:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47584,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47417,
                            "src": "4945:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4937:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4937:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4937:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47579,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47504,
                        "src": "4912:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 47581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4932:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4912:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 47586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4912:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47587,
                  "nodeType": "ExpressionStatement",
                  "src": "4912:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47593,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47483,
                            "src": "4995:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4987:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47591,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4987:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4987:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47588,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47492,
                        "src": "4968:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 47590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4982:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4968:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 47595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4968:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47596,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47602,
                            "name": "cvxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47489,
                            "src": "5042:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5034:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5034:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5034:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47597,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47492,
                        "src": "5015:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 47599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5029:4:66",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5015:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 47604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5015:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47605,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47609,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47449,
                        "src": "5114:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5127:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47606,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5106:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5109:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5106:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5106:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47612,
                  "nodeType": "ExpressionStatement",
                  "src": "5106:32:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47616,
                        "name": "receiverOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47462,
                        "src": "5156:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47613,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5148:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5151:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5148:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5148:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47619,
                  "nodeType": "ExpressionStatement",
                  "src": "5148:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47625,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5208:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 47624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5200:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5200:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5200:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5215:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47620,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5192:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5195:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5192:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5192:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47629,
                  "nodeType": "ExpressionStatement",
                  "src": "5192:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e766578426f6f73746572566f74657250726f7879536574",
                        "id": 47633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        "value": "ConvexBoosterVoterProxySet"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47634,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47423,
                            "src": "5396:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          },
                          "id": 47635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5410:5:66",
                          "memberName": "proxy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36012,
                          "src": "5396:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5396:21:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47630,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5353:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5362:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "5353:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47638,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:65:66"
                },
                {
                  "expression": {
                    "id": 47654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47639,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47359,
                      "src": "5489:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 47645,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5539:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$48852",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 47644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5531:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47643,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5531:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5531:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 47647,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47492,
                          "src": "5546:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 47648,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47495,
                          "src": "5561:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 47649,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47498,
                          "src": "5578:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 47650,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47501,
                          "src": "5592:17:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 47651,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47504,
                          "src": "5611:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 47652,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47384,
                          "src": "5632:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5502:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                        },
                        "typeName": {
                          "id": 47641,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47640,
                            "name": "FraxUnifiedFarm_ERC20_V2",
                            "nameLocations": [
                              "5506:24:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46777,
                            "src": "5506:24:66"
                          },
                          "referencedDeclaration": 46777,
                          "src": "5506:24:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        }
                      },
                      "id": 47653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5502:145:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "src": "5489:158:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                      "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                    }
                  },
                  "id": 47655,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:158:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47661,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47390,
                            "src": "5673:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 47660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5665:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47659,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5665:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5665:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47665,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47359,
                              "src": "5691:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            ],
                            "id": 47664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5683:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47663,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5683:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5683:19:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5703:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5683:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47656,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5657:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5660:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5657:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5657:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47669,
                  "nodeType": "ExpressionStatement",
                  "src": "5657:51:66"
                },
                {
                  "expression": {
                    "id": 47674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47670,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47359,
                      "src": "5719:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47672,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "5757:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        ],
                        "id": 47671,
                        "name": "FraxUnifiedFarm_ERC20_V2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46777,
                        "src": "5732:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777_$",
                          "typeString": "type(contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                        }
                      },
                      "id": 47673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5732:33:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "src": "5719:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                      "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                    }
                  },
                  "id": 47675,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "47657450726f7879466f72",
                        "id": 47679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5789:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        "value": "GetProxyFor"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                                "id": 47684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5835:42:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5827:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47682,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5827:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5827:51:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47680,
                            "name": "frxEthFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47359,
                            "src": "5804:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 47681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5815:11:66",
                          "memberName": "getProxyFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43790,
                          "src": "5804:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 47686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5804:75:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47676,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5776:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5785:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "5776:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5776:104:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47688,
                  "nodeType": "ExpressionStatement",
                  "src": "5776:104:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e766578426f6f73746572566f74657250726f7879536574",
                        "id": 47692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5903:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        "value": "ConvexBoosterVoterProxySet"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47693,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47423,
                            "src": "5933:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          },
                          "id": 47694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5947:5:66",
                          "memberName": "proxy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36012,
                          "src": "5933:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5933:21:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47689,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5890:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5899:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "5890:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5890:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47697,
                  "nodeType": "ExpressionStatement",
                  "src": "5890:65:66"
                },
                {
                  "expression": {
                    "id": 47703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47698,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47362,
                      "src": "6022:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6033:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$40290_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 47700,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47699,
                            "name": "Vault",
                            "nameLocations": [
                              "6037:5:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40290,
                            "src": "6037:5:66"
                          },
                          "referencedDeclaration": 40290,
                          "src": "6037:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 47702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6033:11:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "6022:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 47704,
                  "nodeType": "ExpressionStatement",
                  "src": "6022:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47710,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47442,
                            "src": "6263:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 47709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6255:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47708,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6255:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6255:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47714,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47362,
                              "src": "6285:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 47713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6277:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47712,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6277:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6277:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6295:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6277:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47705,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6247:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6250:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6247:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6247:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47718,
                  "nodeType": "ExpressionStatement",
                  "src": "6247:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47724,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47455,
                            "src": "6326:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 47723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6318:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47722,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6318:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6318:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47728,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47362,
                              "src": "6350:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 47727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6342:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6342:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6360:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6342:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47719,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6310:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6313:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6310:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:55:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47732,
                  "nodeType": "ExpressionStatement",
                  "src": "6310:55:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47738,
                            "name": "vaultImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47474,
                            "src": "6391:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6383:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47736,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6383:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6383:18:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47742,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47362,
                              "src": "6411:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 47741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6403:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47740,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6403:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6403:17:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6421:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6403:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47733,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6375:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6378:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6375:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47746,
                  "nodeType": "ExpressionStatement",
                  "src": "6375:51:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47752,
                            "name": "cvxVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47362,
                            "src": "6452:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 47751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6444:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6444:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6444:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47756,
                              "name": "vaultImpl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47474,
                              "src": "6471:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 47755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6463:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47754,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6463:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6463:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6482:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6463:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47747,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6436:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6439:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6436:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6436:51:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47760,
                  "nodeType": "ExpressionStatement",
                  "src": "6436:51:66"
                },
                {
                  "expression": {
                    "id": 47765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47761,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47362,
                      "src": "6497:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47763,
                          "name": "vaultImpl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47474,
                          "src": "6514:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47762,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40290,
                        "src": "6508:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40290_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 47764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6508:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "6497:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 47766,
                  "nodeType": "ExpressionStatement",
                  "src": "6497:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "47657450726f7879466f72",
                        "id": 47770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6548:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        "value": "GetProxyFor"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                                "id": 47775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6594:42:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6586:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47773,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6586:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6586:51:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47771,
                            "name": "frxEthFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47359,
                            "src": "6563:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 47772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6574:11:66",
                          "memberName": "getProxyFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43790,
                          "src": "6563:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 47777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6563:75:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ce48796550e4928823565182dd6609f5b0d63f9917e09883178c446c754a815",
                          "typeString": "literal_string \"GetProxyFor\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47767,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6535:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6544:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6535:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6535:104:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47779,
                  "nodeType": "ExpressionStatement",
                  "src": "6535:104:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e766578426f6f73746572566f74657250726f7879536574",
                        "id": 47783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6662:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        "value": "ConvexBoosterVoterProxySet"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47784,
                            "name": "convexBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47423,
                            "src": "6692:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Booster_$37092",
                              "typeString": "contract Booster"
                            }
                          },
                          "id": 47785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6706:5:66",
                          "memberName": "proxy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36012,
                          "src": "6692:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6692:21:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5a1f3297e4ceb01f8fb63e3416e1a8da6f424779daeb04334b0fb9c78d44d500",
                          "typeString": "literal_string \"ConvexBoosterVoterProxySet\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47780,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6649:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6658:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6649:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:65:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47788,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:65:66"
                },
                {
                  "expression": {
                    "id": 47796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47789,
                      "name": "nonCompliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47465,
                      "src": "7067:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 47793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7119:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 47791,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47423,
                              "src": "7093:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 47792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7107:11:66",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36936,
                            "src": "7093:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 47794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7093:29:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47790,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40290,
                        "src": "7087:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40290_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 47795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7087:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "7067:56:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 47797,
                  "nodeType": "ExpressionStatement",
                  "src": "7067:56:66"
                },
                {
                  "expression": {
                    "id": 47803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47798,
                      "name": "vaultOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47365,
                      "src": "7402:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7415:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockVaultOwner_$48892_$",
                          "typeString": "function () returns (contract MockVaultOwner)"
                        },
                        "typeName": {
                          "id": 47800,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47799,
                            "name": "VaultOwner",
                            "nameLocations": [
                              "7419:10:66"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48892,
                            "src": "7419:10:66"
                          },
                          "referencedDeclaration": 48892,
                          "src": "7419:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                            "typeString": "contract MockVaultOwner"
                          }
                        }
                      },
                      "id": 47802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7415:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "src": "7402:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                      "typeString": "contract MockVaultOwner"
                    }
                  },
                  "id": 47804,
                  "nodeType": "ExpressionStatement",
                  "src": "7402:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47810,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47365,
                            "src": "7457:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 47809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7449:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7449:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7449:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47814,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47365,
                              "src": "7478:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 47813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7470:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47812,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7470:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7470:19:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7490:4:66",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7470:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47805,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7441:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7444:4:66",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7441:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 47817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7441:54:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47818,
                  "nodeType": "ExpressionStatement",
                  "src": "7441:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47824,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47365,
                            "src": "7521:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 47823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7513:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7513:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7513:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 47826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7534:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 47819,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7505:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7508:4:66",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "7505:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 47827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7505:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47828,
                  "nodeType": "ExpressionStatement",
                  "src": "7505:40:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47834,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47365,
                            "src": "7631:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$48892",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 47833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7623:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7623:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7623:19:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47829,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7614:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7617:5:66",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8607,
                      "src": "7614:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 47836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7614:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47837,
                  "nodeType": "ExpressionStatement",
                  "src": "7614:29:66"
                },
                {
                  "expression": {
                    "id": 47845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47838,
                      "name": "compliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47468,
                      "src": "7811:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 47842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7860:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 47840,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47423,
                              "src": "7834:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$37092",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 47841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7848:11:66",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36936,
                            "src": "7834:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 47843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7834:29:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47839,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40290,
                        "src": "7828:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$40290_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 47844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7828:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "7811:53:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 47846,
                  "nodeType": "ExpressionStatement",
                  "src": "7811:53:66"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4233:5:66",
            "parameters": {
              "id": 47505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4238:2:66"
            },
            "returnParameters": {
              "id": 47506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4248:0:66"
            },
            "scope": 48852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47903,
            "nodeType": "StructDefinition",
            "src": "8127:1031:66",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 47850,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "8160:6:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8154:12:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 47849,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "8154:5:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47852,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "8184:6:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8176:14:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47851,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8176:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47854,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "8208:12:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8200:20:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47853,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8200:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47856,
                "mutability": "mutable",
                "name": "senderBaseLockedLiquidity",
                "nameLocation": "8238:25:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8230:33:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47855,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8230:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47858,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "8281:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8273:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47857,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8273:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47860,
                "mutability": "mutable",
                "name": "senderInitialLockedLiquidity",
                "nameLocation": "8312:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8304:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47859,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8304:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47862,
                "mutability": "mutable",
                "name": "receiverInitialLockedLiquidity",
                "nameLocation": "8358:30:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8350:38:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47861,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8350:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47864,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "8406:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8398:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47863,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8398:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47866,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "8443:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8435:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47865,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8435:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47868,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "8480:20:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8472:28:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47867,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8472:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47870,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "8518:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8510:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47869,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8510:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47872,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "8557:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8549:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47871,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8549:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47874,
                "mutability": "mutable",
                "name": "senderLock",
                "nameLocation": "8596:10:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8588:18:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47873,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8588:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47876,
                "mutability": "mutable",
                "name": "receiverLock1",
                "nameLocation": "8624:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8616:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47875,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8616:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47878,
                "mutability": "mutable",
                "name": "receiverLock2",
                "nameLocation": "8655:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8647:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47877,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8647:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47880,
                "mutability": "mutable",
                "name": "receiverLock3",
                "nameLocation": "8686:13:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8678:21:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47879,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8678:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47882,
                "mutability": "mutable",
                "name": "senderPostTransfer1Balance",
                "nameLocation": "8717:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8709:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47881,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8709:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47884,
                "mutability": "mutable",
                "name": "senderPostTransfer2Balance",
                "nameLocation": "8761:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8753:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47883,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8753:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47886,
                "mutability": "mutable",
                "name": "senderPreTransfer3",
                "nameLocation": "8805:18:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8797:26:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47885,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8797:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47888,
                "mutability": "mutable",
                "name": "receiverPostTransfer1Balance",
                "nameLocation": "8841:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8833:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47887,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8833:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47890,
                "mutability": "mutable",
                "name": "receiverPostTransfer2Balance",
                "nameLocation": "8887:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8879:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47889,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8879:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47892,
                "mutability": "mutable",
                "name": "receiverPreTransfer3",
                "nameLocation": "8933:20:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8925:28:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47891,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8925:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47894,
                "mutability": "mutable",
                "name": "senderPostTransfer3Balance",
                "nameLocation": "8971:26:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "8963:34:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47893,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8963:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47896,
                "mutability": "mutable",
                "name": "receiverPostTransfer3Balance",
                "nameLocation": "9015:28:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "9007:36:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47895,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9007:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47898,
                "mutability": "mutable",
                "name": "senderPostTransfer3",
                "nameLocation": "9061:19:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "9053:27:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9053:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47900,
                "mutability": "mutable",
                "name": "receiverPostTransfer3",
                "nameLocation": "9098:21:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "9090:29:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47899,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9090:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47902,
                "mutability": "mutable",
                "name": "transferAmount",
                "nameLocation": "9137:14:66",
                "nodeType": "VariableDeclaration",
                "scope": 47903,
                "src": "9129:22:66",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47901,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "9129:7:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "8134:9:66",
            "scope": 48852,
            "visibility": "public"
          },
          {
            "id": 48541,
            "nodeType": "FunctionDefinition",
            "src": "9164:6425:66",
            "nodes": [],
            "body": {
              "id": 48540,
              "nodeType": "Block",
              "src": "9194:6395:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47908,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "9221:1:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48540,
                      "src": "9204:18:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 47907,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 47906,
                          "name": "TestState",
                          "nameLocations": [
                            "9204:9:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47903,
                          "src": "9204:9:66"
                        },
                        "referencedDeclaration": 47903,
                        "src": "9204:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47909,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9204:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 47911,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47442,
                            "src": "9310:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 47912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9322:14:66",
                          "memberName": "stakingAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38441,
                          "src": "9310:26:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9310:28:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47916,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47390,
                            "src": "9348:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 47915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9340:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9340:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9340:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374616b696e672061646472657373",
                        "id": 47918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9358:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        },
                        "value": "invalid staking address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        }
                      ],
                      "id": 47910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "9301:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 47919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9301:83:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47920,
                  "nodeType": "ExpressionStatement",
                  "src": "9301:83:66"
                },
                {
                  "expression": {
                    "id": 47925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 47921,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "9395:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 47923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9397:14:66",
                      "memberName": "transferAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47902,
                      "src": "9395:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 47924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9414:8:66",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000"
                      },
                      "value": "10"
                    },
                    "src": "9395:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47926,
                  "nodeType": "ExpressionStatement",
                  "src": "9395:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47930,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47449,
                        "src": "9498:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47927,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9484:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9487:10:66",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "9484:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 47931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47932,
                  "nodeType": "ExpressionStatement",
                  "src": "9484:26:66"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 47942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9612:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 47940,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9588:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 47941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9592:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9588:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 47943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9588:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 47933,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47408,
                          "src": "9552:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9565:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9552:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 47939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 47938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 47936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9577:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 47937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9582:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "9577:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "9552:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 47944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9552:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 47945,
                  "nodeType": "ExpressionStatement",
                  "src": "9552:72:66"
                },
                {
                  "expression": {
                    "id": 47958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 47946,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "9636:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 47948,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "9638:6:66",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47850,
                          "src": "9636:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 47949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9634:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 47954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9684:20:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "id": 47955,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47449,
                              "src": "9706:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 47952,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9660:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 47953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9664:19:66",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "9660:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 47956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9660:58:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 47950,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47372,
                          "src": "9648:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9655:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9648:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 47957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9648:71:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "9634:85:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47959,
                  "nodeType": "ExpressionStatement",
                  "src": "9634:85:66"
                },
                {
                  "expression": {
                    "id": 47971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 47960,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "9729:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 47962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9731:6:66",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47852,
                      "src": "9729:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 47965,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "9751:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 47966,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9753:6:66",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47850,
                          "src": "9751:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 47968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9762:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47967,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9762:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 47969,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9761:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 47963,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "9740:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 47964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9744:6:66",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "9740:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9740:31:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9729:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47972,
                  "nodeType": "ExpressionStatement",
                  "src": "9729:42:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47974,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "9790:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 47975,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9792:6:66",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47852,
                        "src": "9790:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 47976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9800:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 47977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9812:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 47973,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9781:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 47978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9781:60:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47979,
                  "nodeType": "ExpressionStatement",
                  "src": "9781:60:66"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 47987,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47396,
                        "src": "9936:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9956:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47989,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9956:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 47988,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9951:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9951:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 47992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9965:3:66",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9951:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47983,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47372,
                                "src": "9919:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9911:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47981,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9911:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9911:15:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47980,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "9901:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 47985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9901:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 47986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9928:7:66",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47334,
                      "src": "9901:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9901:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47994,
                  "nodeType": "ExpressionStatement",
                  "src": "9901:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10027:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10019:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47999,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10019:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10019:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 48005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10039:10:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 48004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10031:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48003,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10031:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10031:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48007,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10018:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10053:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 47996,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47396,
                            "src": "9989:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47995,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "9979:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 47997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9979:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 47998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10004:13:66",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47318,
                      "src": "9979:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9979:84:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48010,
                  "nodeType": "ExpressionStatement",
                  "src": "9979:84:66"
                },
                {
                  "expression": {
                    "id": 48020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48011,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10073:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10075:6:66",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47852,
                      "src": "10073:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48018,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47449,
                          "src": "10115:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 48015,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47375,
                              "src": "10094:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48014,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47354,
                            "src": "10084:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 48016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10084:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$47354",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 48017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10105:9:66",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47325,
                        "src": "10084:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10084:43:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10073:54:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48021,
                  "nodeType": "ExpressionStatement",
                  "src": "10073:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48023,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "10146:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10148:6:66",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47852,
                        "src": "10146:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10156:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 48026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10167:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 48022,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "10137:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10137:70:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48028,
                  "nodeType": "ExpressionStatement",
                  "src": "10137:70:66"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 48039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48029,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10347:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48031,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10349:12:66",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47854,
                      "src": "10347:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48036,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "10401:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10393:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10393:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10393:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48032,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "10364:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10372:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "10364:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10364:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10347:67:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48040,
                  "nodeType": "ExpressionStatement",
                  "src": "10347:67:66"
                },
                {
                  "expression": {
                    "id": 48051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48041,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10424:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10426:25:66",
                      "memberName": "senderBaseLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47856,
                      "src": "10424:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48048,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "10488:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10480:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48046,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10480:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10480:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48044,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "10454:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10462:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "10454:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10454:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10424:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48052,
                  "nodeType": "ExpressionStatement",
                  "src": "10424:77:66"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "id": 48068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48053,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10545:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10547:10:66",
                      "memberName": "senderLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47874,
                      "src": "10545:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 48058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10591:9:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 48065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 48063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 48061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 48059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10603:2:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 48060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10606:2:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "10603:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 48062,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10609:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "10603:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 48064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10612:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "10603:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 48066,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10602:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 48056,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "10560:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10572:18:66",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39365,
                        "src": "10560:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 48067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10560:57:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10545:72:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48069,
                  "nodeType": "ExpressionStatement",
                  "src": "10545:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e6465724c6f636b",
                        "id": 48073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10640:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34ffdf973afb1e116327e4c56fa647c4373056b8fb7126fd48736c0bb66fef50",
                          "typeString": "literal_string \"senderLock\""
                        },
                        "value": "senderLock"
                      },
                      {
                        "expression": {
                          "id": 48074,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "10654:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10656:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47874,
                        "src": "10654:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_34ffdf973afb1e116327e4c56fa647c4373056b8fb7126fd48736c0bb66fef50",
                          "typeString": "literal_string \"senderLock\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48070,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10627:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10636:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10627:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 48076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48077,
                  "nodeType": "ExpressionStatement",
                  "src": "10627:40:66"
                },
                {
                  "expression": {
                    "id": 48088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48078,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10677:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48080,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10679:13:66",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47858,
                      "src": "10677:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48085,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "10732:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10724:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48083,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10724:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10724:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48081,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "10695:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10703:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "10695:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10695:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10677:68:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48089,
                  "nodeType": "ExpressionStatement",
                  "src": "10677:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48091,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "10764:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48092,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10766:13:66",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47858,
                        "src": "10764:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48093,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "10781:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10783:12:66",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47854,
                          "src": "10781:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10798:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10781:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 48097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10801:36:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 48090,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10755:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10755:83:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48099,
                  "nodeType": "ExpressionStatement",
                  "src": "10755:83:66"
                },
                {
                  "expression": {
                    "id": 48110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48100,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "10848:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10850:28:66",
                      "memberName": "senderInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47860,
                      "src": "10848:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48107,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "10915:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10907:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10907:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10907:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48103,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "10881:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10889:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "10881:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10881:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10848:80:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48111,
                  "nodeType": "ExpressionStatement",
                  "src": "10848:80:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11002:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48112,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "10997:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10997:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48115,
                  "nodeType": "ExpressionStatement",
                  "src": "10997:12:66"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 48126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48116,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "11089:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11091:20:66",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47868,
                      "src": "11089:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48123,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "11151:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11143:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48121,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11143:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11143:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48119,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "11114:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11122:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "11114:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11114:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11089:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48127,
                  "nodeType": "ExpressionStatement",
                  "src": "11089:77:66"
                },
                {
                  "expression": {
                    "id": 48138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48128,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "11176:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11178:30:66",
                      "memberName": "receiverInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47862,
                      "src": "11176:32:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48135,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "11245:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11237:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11237:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11237:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48131,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "11211:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11219:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "11211:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11211:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11176:84:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48139,
                  "nodeType": "ExpressionStatement",
                  "src": "11176:84:66"
                },
                {
                  "expression": {
                    "id": 48157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 48140,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "11365:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11367:13:66",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47876,
                          "src": "11365:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48143,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11362:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48148,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "11419:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11411:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11411:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11411:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48150,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "11435:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11437:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47874,
                          "src": "11435:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48152,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "11449:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11451:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "11449:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 48154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11467:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 48155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11474:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 48144,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "11384:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11396:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39824,
                        "src": "11384:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 48156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11384:92:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "11362:114:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48158,
                  "nodeType": "ExpressionStatement",
                  "src": "11362:114:66"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 48169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48159,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "11594:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11596:19:66",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47864,
                      "src": "11594:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48166,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "11655:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11647:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48164,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11647:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11647:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48162,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "11618:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11626:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "11618:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11618:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11594:74:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48170,
                  "nodeType": "ExpressionStatement",
                  "src": "11594:74:66"
                },
                {
                  "expression": {
                    "id": 48181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48171,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "11678:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11680:21:66",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47870,
                      "src": "11678:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48178,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "11741:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11733:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48176,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11733:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11733:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48174,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "11704:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11712:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "11704:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11704:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11678:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48182,
                  "nodeType": "ExpressionStatement",
                  "src": "11678:78:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48184,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "11775:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11777:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47864,
                        "src": "11775:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48186,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "11798:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48187,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11800:13:66",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47858,
                        "src": "11798:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 48188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11815:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 48183,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11766:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11766:83:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48190,
                  "nodeType": "ExpressionStatement",
                  "src": "11766:83:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48192,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "11868:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11870:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47870,
                        "src": "11868:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 48194,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47908,
                                "src": "11894:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 48195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11896:20:66",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47868,
                              "src": "11894:22:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 48196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11919:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11894:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48198,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11893:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 48199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11923:34:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 48191,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11859:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11859:99:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48201,
                  "nodeType": "ExpressionStatement",
                  "src": "11859:99:66"
                },
                {
                  "expression": {
                    "id": 48212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48202,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "12012:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12014:26:66",
                      "memberName": "senderPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47882,
                      "src": "12012:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48209,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "12077:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12069:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12069:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12069:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48205,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "12043:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12051:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "12043:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12043:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12012:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48213,
                  "nodeType": "ExpressionStatement",
                  "src": "12012:78:66"
                },
                {
                  "expression": {
                    "id": 48224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48214,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "12100:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12102:28:66",
                      "memberName": "receiverPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47888,
                      "src": "12100:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48221,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "12167:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12159:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48219,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12159:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12159:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48217,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "12133:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12141:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "12133:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12133:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12100:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48225,
                  "nodeType": "ExpressionStatement",
                  "src": "12100:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48227,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "12201:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48228,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12203:26:66",
                        "memberName": "senderPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47882,
                        "src": "12201:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48229,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "12231:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12233:28:66",
                          "memberName": "senderInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47860,
                          "src": "12231:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 48231,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "12264:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48232,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12266:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "12264:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12231:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393830206c6f636b6564",
                        "id": 48234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12282:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        },
                        "value": "sender should have 980 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        }
                      ],
                      "id": 48226,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12192:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12192:122:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48236,
                  "nodeType": "ExpressionStatement",
                  "src": "12192:122:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48238,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "12333:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12335:28:66",
                        "memberName": "receiverPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47888,
                        "src": "12333:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48240,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "12365:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48241,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12367:30:66",
                          "memberName": "receiverInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47862,
                          "src": "12365:32:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 48242,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "12400:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12402:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "12400:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12365:51:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203130206c6f636b6564",
                        "id": 48245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12418:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        },
                        "value": "receiver should have 10 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        }
                      ],
                      "id": 48237,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12324:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12324:127:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48247,
                  "nodeType": "ExpressionStatement",
                  "src": "12324:127:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "12547:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12550:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "12547:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48252,
                  "nodeType": "ExpressionStatement",
                  "src": "12547:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48258,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47455,
                            "src": "12609:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 48257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12601:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12601:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12601:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48260,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "12625:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12627:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47874,
                        "src": "12625:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48262,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "12639:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48263,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12641:14:66",
                        "memberName": "transferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47902,
                        "src": "12639:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12657:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "3639",
                        "id": 48265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12663:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        },
                        "value": "69"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        }
                      ],
                      "expression": {
                        "id": 48253,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47442,
                        "src": "12574:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 48255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12586:14:66",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39824,
                      "src": "12574:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 48266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12574:92:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 48267,
                  "nodeType": "ExpressionStatement",
                  "src": "12574:92:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12727:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48268,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "12722:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12722:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48271,
                  "nodeType": "ExpressionStatement",
                  "src": "12722:12:66"
                },
                {
                  "documentation": "transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48277,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47455,
                                "src": "12887:13:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12879:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48275,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12879:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12879:22:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48273,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47390,
                            "src": "12850:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 48274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12858:20:66",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45304,
                          "src": "12850:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12850:52:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48280,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "12904:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48281,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12906:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47870,
                        "src": "12904:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 48282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12929:46:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 48272,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12841:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12841:135:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48284,
                  "nodeType": "ExpressionStatement",
                  "src": "12841:135:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48290,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47442,
                                "src": "13032:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 48289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13024:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48288,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13024:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13024:20:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48286,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47390,
                            "src": "12995:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 48287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13003:20:66",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45304,
                          "src": "12995:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 48292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12995:50:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48293,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "13047:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13049:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47864,
                        "src": "13047:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 48295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13070:44:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 48285,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12986:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12986:129:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48297,
                  "nodeType": "ExpressionStatement",
                  "src": "12986:129:66"
                },
                {
                  "expression": {
                    "id": 48316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 48298,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "13179:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13181:13:66",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47878,
                          "src": "13179:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48301,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13176:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48306,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "13233:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13225:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13225:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13225:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48308,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "13249:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13251:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47874,
                          "src": "13249:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 48310,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "13263:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13265:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "13263:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 48312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13281:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 48313,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "13287:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13289:13:66",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47876,
                          "src": "13287:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 48302,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "13198:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13210:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39824,
                        "src": "13198:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 48315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13198:105:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "13176:127:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48317,
                  "nodeType": "ExpressionStatement",
                  "src": "13176:127:66"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 48328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48318,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "13411:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13413:19:66",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47866,
                      "src": "13411:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48325,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "13472:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13464:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48323,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13464:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13464:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48321,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "13435:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13443:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "13435:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13435:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13411:74:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48329,
                  "nodeType": "ExpressionStatement",
                  "src": "13411:74:66"
                },
                {
                  "expression": {
                    "id": 48340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48330,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "13495:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13497:21:66",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47872,
                      "src": "13495:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48337,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "13558:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13550:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48335,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13550:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13550:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48333,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "13521:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13529:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "13521:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13521:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13495:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48341,
                  "nodeType": "ExpressionStatement",
                  "src": "13495:78:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48343,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "13592:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13594:19:66",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47866,
                        "src": "13592:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48345,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "13615:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13617:19:66",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47864,
                        "src": "13615:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 48347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13638:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 48342,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13583:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13583:91:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48349,
                  "nodeType": "ExpressionStatement",
                  "src": "13583:91:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48351,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "13693:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13695:21:66",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47872,
                        "src": "13693:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48353,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "13718:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13720:21:66",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47870,
                        "src": "13718:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 48355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13743:37:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 48350,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13684:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13684:97:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48357,
                  "nodeType": "ExpressionStatement",
                  "src": "13684:97:66"
                },
                {
                  "expression": {
                    "id": 48368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48358,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "13835:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13837:26:66",
                      "memberName": "senderPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47884,
                      "src": "13835:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48365,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "13900:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13892:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13892:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13892:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48361,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "13866:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13874:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "13866:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13866:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13835:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48369,
                  "nodeType": "ExpressionStatement",
                  "src": "13835:78:66"
                },
                {
                  "expression": {
                    "id": 48380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48370,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "13923:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13925:28:66",
                      "memberName": "receiverPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47890,
                      "src": "13923:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48377,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "13990:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13982:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48375,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13982:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13982:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48373,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "13956:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13964:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "13956:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13956:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13923:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48381,
                  "nodeType": "ExpressionStatement",
                  "src": "13923:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48383,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "14024:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48384,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14026:26:66",
                        "memberName": "senderPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47884,
                        "src": "14024:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48385,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14054:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14056:26:66",
                          "memberName": "senderPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47882,
                          "src": "14054:28:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 48387,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14085:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48388,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14087:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "14085:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14054:47:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393730206c6f636b6564",
                        "id": 48390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14104:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        },
                        "value": "sender should have 970 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        }
                      ],
                      "id": 48382,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14015:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14015:121:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48392,
                  "nodeType": "ExpressionStatement",
                  "src": "14015:121:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48394,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "14155:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48395,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14157:28:66",
                        "memberName": "receiverPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47890,
                        "src": "14155:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48396,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14187:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14189:28:66",
                          "memberName": "receiverPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47888,
                          "src": "14187:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 48398,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14220:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48399,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14222:14:66",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47902,
                          "src": "14220:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14187:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203230206c6f636b6564",
                        "id": 48401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14238:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        },
                        "value": "receiver should have 20 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        }
                      ],
                      "id": 48393,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14146:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14146:125:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48403,
                  "nodeType": "ExpressionStatement",
                  "src": "14146:125:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48404,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "14355:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14358:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "14355:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14355:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48408,
                  "nodeType": "ExpressionStatement",
                  "src": "14355:17:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48414,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47369,
                            "src": "14417:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14409:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14409:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14409:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48416,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "14423:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14425:10:66",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47874,
                        "src": "14423:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 48418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14437:8:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 48419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14447:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 48420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14454:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 48409,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47442,
                        "src": "14382:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 48411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14394:14:66",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39824,
                      "src": "14382:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 48421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14382:74:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 48422,
                  "nodeType": "ExpressionStatement",
                  "src": "14382:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14564:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48423,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "14559:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14559:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48426,
                  "nodeType": "ExpressionStatement",
                  "src": "14559:12:66"
                },
                {
                  "expression": {
                    "id": 48437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48427,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "14581:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48429,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14583:18:66",
                      "memberName": "senderPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47886,
                      "src": "14581:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48434,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "14641:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14633:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48432,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14633:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14633:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48430,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "14604:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14612:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "14604:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14604:50:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14581:73:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48438,
                  "nodeType": "ExpressionStatement",
                  "src": "14581:73:66"
                },
                {
                  "expression": {
                    "id": 48449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48439,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "14664:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14666:20:66",
                      "memberName": "receiverPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47892,
                      "src": "14664:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48446,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "14726:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14718:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48444,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14718:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14718:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48442,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "14689:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14697:20:66",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45304,
                        "src": "14689:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14689:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14664:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48450,
                  "nodeType": "ExpressionStatement",
                  "src": "14664:77:66"
                },
                {
                  "expression": {
                    "id": 48479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 48451,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14754:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48453,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "14756:13:66",
                          "memberName": "receiverLock3",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47880,
                          "src": "14754:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48454,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14751:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48459,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "14808:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14800:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14800:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14800:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48461,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14824:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48462,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14826:10:66",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47874,
                          "src": "14824:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 48467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 48463,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47908,
                                    "src": "14839:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 48464,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14841:28:66",
                                  "memberName": "senderInitialLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47860,
                                  "src": "14839:30:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 48465,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47908,
                                    "src": "14872:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 48466,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14874:25:66",
                                  "memberName": "senderBaseLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47856,
                                  "src": "14872:27:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14839:60:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 48471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 48468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14903:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 48469,
                                        "name": "t",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47908,
                                        "src": "14907:1:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                        }
                                      },
                                      "id": 48470,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14909:14:66",
                                      "memberName": "transferAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 47902,
                                      "src": "14907:16:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14903:20:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 48472,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14902:22:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14839:85:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 48474,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14838:87:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 48475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14927:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 48476,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47908,
                            "src": "14933:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 48477,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14935:13:66",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47878,
                          "src": "14933:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 48455,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "14773:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14785:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39824,
                        "src": "14773:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 48478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14773:176:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14751:198:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48480,
                  "nodeType": "ExpressionStatement",
                  "src": "14751:198:66"
                },
                {
                  "expression": {
                    "id": 48491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48481,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "15003:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15005:26:66",
                      "memberName": "senderPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47894,
                      "src": "15003:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48488,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47442,
                              "src": "15068:11:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15060:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15060:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15060:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48484,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "15034:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15042:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "15034:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15034:47:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15003:78:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48492,
                  "nodeType": "ExpressionStatement",
                  "src": "15003:78:66"
                },
                {
                  "expression": {
                    "id": 48503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48493,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47908,
                        "src": "15091:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 48495,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15093:28:66",
                      "memberName": "receiverPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47896,
                      "src": "15091:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48500,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47455,
                              "src": "15158:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15150:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48498,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15150:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15150:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48496,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "15124:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$46777",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 48497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15132:17:66",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43616,
                        "src": "15124:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15124:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15091:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48504,
                  "nodeType": "ExpressionStatement",
                  "src": "15091:82:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48506,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "15192:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48507,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15194:26:66",
                        "memberName": "senderPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47894,
                        "src": "15192:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48508,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "15222:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48509,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15224:25:66",
                        "memberName": "senderBaseLockedLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47856,
                        "src": "15222:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "616c6c206f662073656e6465722773206c6f636b6564206c69717569646974792073686f756c64206265206261636b20746f2062617365206c6576656c",
                        "id": 48510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15251:63:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        },
                        "value": "all of sender's locked liquidity should be back to base level"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        }
                      ],
                      "id": 48505,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15183:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15183:132:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48512,
                  "nodeType": "ExpressionStatement",
                  "src": "15183:132:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48514,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47908,
                          "src": "15334:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 48515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15336:28:66",
                        "memberName": "receiverPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47896,
                        "src": "15334:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 48516,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47908,
                                "src": "15367:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 48517,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15369:30:66",
                              "memberName": "receiverInitialLockedLiquidity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47862,
                              "src": "15367:32:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 48522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 48518,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 47908,
                                      "src": "15403:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 48519,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15405:28:66",
                                    "memberName": "senderInitialLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 47860,
                                    "src": "15403:30:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 48520,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 47908,
                                      "src": "15436:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$47903_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 48521,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15438:25:66",
                                    "memberName": "senderBaseLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 47856,
                                    "src": "15436:27:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15403:60:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 48523,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15402:62:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15367:97:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48525,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15366:99:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64206861766520616c6c206f662073656e6465722773206c6f636b6564",
                        "id": 48526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15467:45:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        },
                        "value": "receiver should have all of sender's locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        }
                      ],
                      "id": 48513,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15325:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15325:188:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48528,
                  "nodeType": "ExpressionStatement",
                  "src": "15325:188:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48529,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "15524:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15527:9:66",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "15524:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15524:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48533,
                  "nodeType": "ExpressionStatement",
                  "src": "15524:14:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4532452054657374205375636365737321",
                        "id": 48537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15562:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        },
                        "value": "E2E Test Success!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        }
                      ],
                      "expression": {
                        "id": 48534,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "15549:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15558:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "15549:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15549:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48539,
                  "nodeType": "ExpressionStatement",
                  "src": "15549:33:66"
                }
              ]
            },
            "functionSelector": "185a8d73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEnd2End",
            "nameLocation": "9173:11:66",
            "parameters": {
              "id": 47904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9184:2:66"
            },
            "returnParameters": {
              "id": 47905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9194:0:66"
            },
            "scope": 48852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48697,
            "nodeType": "FunctionDefinition",
            "src": "15595:1428:66",
            "nodes": [],
            "body": {
              "id": 48696,
              "nodeType": "Block",
              "src": "15645:1378:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48547,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47449,
                        "src": "15669:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48544,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "15655:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15658:10:66",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "15655:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15655:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48549,
                  "nodeType": "ExpressionStatement",
                  "src": "15655:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 48559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15752:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 48557,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15728:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15732:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15728:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 48560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15728:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 48550,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47408,
                          "src": "15692:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15705:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "15692:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 48556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 48555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 48553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15717:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 48554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15722:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "15717:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "15692:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 48561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15692:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 48562,
                  "nodeType": "ExpressionStatement",
                  "src": "15692:72:66"
                },
                {
                  "assignments": [
                    null,
                    48564
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 48564,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "15789:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48696,
                      "src": "15776:19:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48563,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15776:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48573,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 48569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15835:20:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 48570,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47449,
                            "src": "15857:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48567,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15811:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15815:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15811:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 48571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15811:58:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48565,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47372,
                        "src": "15799:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 48566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15806:4:66",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "15799:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 48572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15799:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15774:96:66"
                },
                {
                  "assignments": [
                    48575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48575,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "15888:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48696,
                      "src": "15880:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48574,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15880:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48583,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48578,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48564,
                        "src": "15908:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 48580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15917:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 48579,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15917:7:66",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 48581,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15916:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 48576,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15897:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "15901:6:66",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "15897:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 48582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15897:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15880:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48585,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48575,
                        "src": "15945:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 48586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15953:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 48587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15965:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 48584,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15936:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15936:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48589,
                  "nodeType": "ExpressionStatement",
                  "src": "15936:58:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48597,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47396,
                        "src": "16088:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16108:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48599,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16108:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 48598,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "16103:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16103:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 48602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "16117:3:66",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "16103:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48593,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47372,
                                "src": "16071:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16063:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48591,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16063:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16063:15:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48590,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "16053:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16053:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16080:7:66",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47334,
                      "src": "16053:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 48603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16053:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48604,
                  "nodeType": "ExpressionStatement",
                  "src": "16053:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16179:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16171:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48609,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16171:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16171:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 48615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16191:10:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 48614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16183:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48613,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16183:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16183:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48617,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16170:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16205:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48606,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47396,
                            "src": "16141:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48605,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "16131:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16131:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16156:13:66",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47318,
                      "src": "16131:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16131:84:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48620,
                  "nodeType": "ExpressionStatement",
                  "src": "16131:84:66"
                },
                {
                  "expression": {
                    "id": 48628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48621,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48575,
                      "src": "16225:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48626,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47449,
                          "src": "16265:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 48623,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47375,
                              "src": "16244:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48622,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47354,
                            "src": "16234:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 48624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16234:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$47354",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 48625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16255:9:66",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47325,
                        "src": "16234:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16234:43:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16225:52:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48629,
                  "nodeType": "ExpressionStatement",
                  "src": "16225:52:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48631,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48575,
                        "src": "16296:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16304:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 48633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16315:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 48630,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "16287:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16287:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48635,
                  "nodeType": "ExpressionStatement",
                  "src": "16287:68:66"
                },
                {
                  "assignments": [
                    48637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48637,
                      "mutability": "mutable",
                      "name": "senderLockId",
                      "nameLocation": "16406:12:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48696,
                      "src": "16398:20:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16398:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48650,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 48640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16452:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 48647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 48645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 48643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 48641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16464:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 48642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16467:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "16464:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 48644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16470:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "16464:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 48646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16473:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "16464:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 48648,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16463:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 48638,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47442,
                        "src": "16421:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 48639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16433:18:66",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39365,
                      "src": "16421:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16421:57:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16398:80:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16494:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48651,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "16489:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16489:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48654,
                  "nodeType": "ExpressionStatement",
                  "src": "16489:12:66"
                },
                {
                  "assignments": [
                    48656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48656,
                      "mutability": "mutable",
                      "name": "receiverLockId",
                      "nameLocation": "16598:14:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48696,
                      "src": "16590:22:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16590:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48658,
                  "initialValue": {
                    "hexValue": "3639",
                    "id": 48657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16615:2:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_69_by_1",
                      "typeString": "int_const 69"
                    },
                    "value": "69"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16590:27:66"
                },
                {
                  "documentation": "Test sending to a non-compliant vault owner ///// ",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48659,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16691:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16694:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "16691:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16691:17:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48663,
                  "nodeType": "ExpressionStatement",
                  "src": "16691:17:66"
                },
                {
                  "expression": {
                    "id": 48677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 48664,
                          "name": "receiverLockId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48656,
                          "src": "16721:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48665,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16718:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48670,
                              "name": "nonCompliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47465,
                              "src": "16774:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16766:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48668,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16766:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16766:26:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 48672,
                          "name": "senderLockId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48637,
                          "src": "16794:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 48673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16808:8:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 48674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16818:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 48675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16825:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 48666,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "16739:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16751:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39824,
                        "src": "16739:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 48676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16739:88:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16718:109:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48678,
                  "nodeType": "ExpressionStatement",
                  "src": "16718:109:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48679,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16838:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16841:9:66",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "16838:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16838:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48683,
                  "nodeType": "ExpressionStatement",
                  "src": "16838:14:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48685,
                        "name": "receiverLockId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48656,
                        "src": "16872:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3639",
                        "id": 48686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16888:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        },
                        "value": "69"
                      },
                      {
                        "hexValue": "72656365697665724c6f636b49642073686f756c64206e6f742068617665206368616e676564",
                        "id": 48687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16892:40:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f4713bf9a12d2b3a66f9c07700e838488f6f78b2c54973e15d056b829230ba7",
                          "typeString": "literal_string \"receiverLockId should not have changed\""
                        },
                        "value": "receiverLockId should not have changed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f4713bf9a12d2b3a66f9c07700e838488f6f78b2c54973e15d056b829230ba7",
                          "typeString": "literal_string \"receiverLockId should not have changed\""
                        }
                      ],
                      "id": 48684,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16863:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16863:70:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48689,
                  "nodeType": "ExpressionStatement",
                  "src": "16863:70:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d206e6f6e2d636f6d706c69616e74207661756c74204641494c53206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 48693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16957:58:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        },
                        "value": "PASS = non-compliant vault FAILS on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 48690,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16944:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16953:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "16944:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16944:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48695,
                  "nodeType": "ExpressionStatement",
                  "src": "16944:72:66"
                }
              ]
            },
            "functionSelector": "4c9e9f0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOnLockReceivedNonCompliance",
            "nameLocation": "15604:31:66",
            "parameters": {
              "id": 48542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15635:2:66"
            },
            "returnParameters": {
              "id": 48543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15645:0:66"
            },
            "scope": 48852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48851,
            "nodeType": "FunctionDefinition",
            "src": "17029:1397:66",
            "nodes": [],
            "body": {
              "id": 48850,
              "nodeType": "Block",
              "src": "17076:1350:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48705,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47449,
                            "src": "17108:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17100:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17100:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17100:20:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48700,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "17086:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17089:10:66",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "17086:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17086:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48708,
                  "nodeType": "ExpressionStatement",
                  "src": "17086:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 48718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17192:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 48716,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17168:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17172:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "17168:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 48719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17168:35:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 48709,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47408,
                          "src": "17132:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17145:4:66",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "17132:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 48715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 48714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 48712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17157:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 48713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17162:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "17157:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "17132:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 48720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17132:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 48721,
                  "nodeType": "ExpressionStatement",
                  "src": "17132:72:66"
                },
                {
                  "assignments": [
                    null,
                    48723
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 48723,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "17229:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48850,
                      "src": "17216:19:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48722,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17216:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48732,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 48728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17275:20:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 48729,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47449,
                            "src": "17297:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48726,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17251:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17255:19:66",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "17251:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 48730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17251:58:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48724,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47372,
                        "src": "17239:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 48725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17246:4:66",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "17239:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 48731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17239:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17214:96:66"
                },
                {
                  "assignments": [
                    48734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48734,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "17328:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48850,
                      "src": "17320:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48733,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17320:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48742,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48737,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48723,
                        "src": "17348:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 48739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17357:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 48738,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17357:7:66",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 48740,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17356:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 48735,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17337:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "17341:6:66",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "17337:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 48741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17337:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17320:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48744,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48734,
                        "src": "17385:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 48745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17393:10:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 48746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17405:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 48743,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17376:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17376:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48748,
                  "nodeType": "ExpressionStatement",
                  "src": "17376:58:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48756,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47396,
                        "src": "17528:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17548:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48758,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17548:7:66",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 48757,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "17543:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17543:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 48761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "17557:3:66",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "17543:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48752,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47372,
                                "src": "17511:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17503:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48750,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17503:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17503:15:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48749,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "17493:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17493:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17520:7:66",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47334,
                      "src": "17493:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 48762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17493:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48763,
                  "nodeType": "ExpressionStatement",
                  "src": "17493:68:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17619:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17611:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48768,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17611:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17611:10:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 48774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17631:10:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 48773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17623:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 48772,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17623:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17623:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 48776,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17610:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17645:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48765,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47396,
                            "src": "17581:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48764,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47354,
                          "src": "17571:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 48766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17571:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$47354",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 48767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17596:13:66",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47318,
                      "src": "17571:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17571:84:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48779,
                  "nodeType": "ExpressionStatement",
                  "src": "17571:84:66"
                },
                {
                  "expression": {
                    "id": 48787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48780,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48734,
                      "src": "17665:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48785,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47449,
                          "src": "17705:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 48782,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47375,
                              "src": "17684:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48781,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47354,
                            "src": "17674:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$47354_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 48783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17674:20:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$47354",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 48784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17695:9:66",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47325,
                        "src": "17674:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17674:43:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17665:52:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48788,
                  "nodeType": "ExpressionStatement",
                  "src": "17665:52:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48790,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48734,
                        "src": "17736:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 48791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17744:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 48792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17755:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 48789,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "17727:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17727:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48794,
                  "nodeType": "ExpressionStatement",
                  "src": "17727:68:66"
                },
                {
                  "assignments": [
                    48796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48796,
                      "mutability": "mutable",
                      "name": "senderLockId",
                      "nameLocation": "17846:12:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48850,
                      "src": "17838:20:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17838:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48809,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 48799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17892:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 48806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 48804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 48802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 48800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17904:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 48801,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17907:2:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "17904:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 48803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17910:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "17904:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 48805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17913:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "17904:12:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 48807,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17903:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 48797,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47442,
                        "src": "17861:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 48798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17873:18:66",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39365,
                      "src": "17861:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 48808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17861:57:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17838:80:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17936:6:66",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 48810,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "17931:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17931:12:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48813,
                  "nodeType": "ExpressionStatement",
                  "src": "17931:12:66"
                },
                {
                  "assignments": [
                    48815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48815,
                      "mutability": "mutable",
                      "name": "receiverLockId",
                      "nameLocation": "18040:14:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 48850,
                      "src": "18032:22:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48814,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18032:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48817,
                  "initialValue": {
                    "hexValue": "3639",
                    "id": 48816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18057:2:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_69_by_1",
                      "typeString": "int_const 69"
                    },
                    "value": "69"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18032:27:66"
                },
                {
                  "expression": {
                    "id": 48831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 48818,
                          "name": "receiverLockId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48815,
                          "src": "18138:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48819,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18135:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48824,
                              "name": "compliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47468,
                              "src": "18191:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 48823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18183:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48822,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18183:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18183:23:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 48826,
                          "name": "senderLockId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48796,
                          "src": "18208:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 48827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18222:8:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 48828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18232:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 48829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18239:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 48820,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47442,
                          "src": "18156:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$40290",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 48821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18168:14:66",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39824,
                        "src": "18156:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 48830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18156:85:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "18135:106:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48832,
                  "nodeType": "ExpressionStatement",
                  "src": "18135:106:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48833,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "18251:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18254:9:66",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "18251:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18251:14:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48837,
                  "nodeType": "ExpressionStatement",
                  "src": "18251:14:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48839,
                        "name": "receiverLockId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48815,
                        "src": "18285:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18301:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6469646e2774207265736574207468652076616c756520636f72726563746c79",
                        "id": 48841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18304:34:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8c67fdf095c4029bb49a39ad8d189f4677354620cbaa2160507a26f9f30fd55",
                          "typeString": "literal_string \"didn't reset the value correctly\""
                        },
                        "value": "didn't reset the value correctly"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8c67fdf095c4029bb49a39ad8d189f4677354620cbaa2160507a26f9f30fd55",
                          "typeString": "literal_string \"didn't reset the value correctly\""
                        }
                      ],
                      "id": 48838,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18276:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18276:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48843,
                  "nodeType": "ExpressionStatement",
                  "src": "18276:63:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d20636f6d706c69616e74207661756c7420504153534553206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 48847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18363:55:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        },
                        "value": "PASS = compliant vault PASSES on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 48844,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "18350:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 48846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18359:3:66",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "18350:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 48848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18350:69:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48849,
                  "nodeType": "ExpressionStatement",
                  "src": "18350:69:66"
                }
              ]
            },
            "functionSelector": "784b90d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOnLockReceivedCompliance",
            "nameLocation": "17038:28:66",
            "parameters": {
              "id": 48698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17066:2:66"
            },
            "returnParameters": {
              "id": 48699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17076:0:66"
            },
            "scope": 48852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47355,
              "name": "Test",
              "nameLocations": [
                "1351:4:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "1351:4:66"
            },
            "id": 47356,
            "nodeType": "InheritanceSpecifier",
            "src": "1351:4:66"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          40290,
          46777,
          48892
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48852,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "1321:26:66",
        "scope": 48853,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 66
}