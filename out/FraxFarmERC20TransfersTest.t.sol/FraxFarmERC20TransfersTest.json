{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonCompliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEnd2End",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMeetsOnLockReceivedCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNonOnLockReceivedCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "$03410bdb5b6e31ba206af5f1ba44259eff$",
    "sourceMap": "1101:15678:81:-:0;;;;;;-1:-1:-1;1101:15678:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1101:15678:81;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;1101:15678:81;;;;;;;-1:-1:-1;;;;;1101:15678:81;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;1383:42;;;;:::i;:::-;1458;;;;:::i;:::-;1566:51;1574:42;1566:51;;:::i;:::-;1655:42;;;;:::i;:::-;1789:65;;1811:42;1789:65;:::i;:::-;;;:::i;:::-;1909:51;1917:42;1909:51;;:::i;:::-;2003;2011:42;2003:51;;:::i;:::-;2090;2098:42;2090:51;;:::i;:::-;2179;2187:42;2179:51;;:::i;:::-;2601;2609:42;2601:51;;:::i;:::-;2712;2720:42;2712:51;;:::i;:::-;2890:49;;2896:42;2890:49;:::i;:::-;;;:::i;:::-;3034:51;3042:42;3034:51;;:::i;:::-;3120:49;;3126:42;3120:49;:::i;:::-;;;:::i;:::-;3264:51;3272:42;3264:51;;:::i;:::-;3417;3425:42;3417:51;;:::i;:::-;3502:42;;;;:::i;:::-;3584:51;3592:42;3584:51;;:::i;:::-;3674;3682:42;3674:51;;:::i;:::-;3761:42;;;;:::i;:::-;1101:15678::o;365:92:11:-;;320:43;115:1185:1;91:4525:10;15938:4423:5;147:15741;120:3862:4;117:7236:3;;:::i;1101:15678:81:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;715:15435:0:-;1594:4;;;;:::i",
    "linkReferences": {
      "lib/forge-std/src/console2.sol": {
        "console2": [
          {
            "start": 31697,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "$03410bdb5b6e31ba206af5f1ba44259eff$__61209e8484611c66611f6f565b30946120a9866112c2565b9573ffffffffffffffffffffffffffffffffffffffff871673ffffffffffffffffffffffffffffffffffffffff871614806121cb575b6120e890611b5a565b6120f2600061128c565b3b92600093612107612103866105e5565b9190565b11156121b5576020969761215e94939261212f92506121258561128c565b9050611c66611fd0565b6121696121416113a86113a88561128c565b9463c42d8b959261215160405190565b998a988997889660e01b90565b86526004860161202a565b03925af19081156121a8575b600091612180575090565b610396915060203d81116121a1575b612199818361086f565b81019061200d565b503d61218f565b6121b06112f5565b612175565b50945050505050505061039663c42d8b95611c17565b506120e8336121e061125e610429600161128c565b1490506120df565b6104296103966103969290565b610396906121e8565b1561220557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f616c726561647920696e697400000000000000000000000000000000000000006044820152606490fd5b909160c0828403126122bf575b61227b8383611bc0565b926122898160208501611bc0565b926122978260408301611bc0565b926103966122a88460608501611bc0565b936122b68160808601611bc0565b9360a0016112cb565b6122c7600080fd5b612271565b6123b8908392946122dd600061128c565b916122f96000936122f361125e610429876121f5565b146121fe565b6123038184611378565b5061230f866001611378565b61231a846002611378565b612325816003611378565b5060c06123756123496113a873f403c135812408bfbe8713b5a23a04b3d48aae3181565b83631526fe27602061235d6113a88a6112c2565b63e529ee959061236c60405190565b96879260e01b90565b825260049082905afa938415612598575b600094612572575b50906123aa9161239d60405190565b9788958694859360e01b90565b835260048301526024820190565b03925af1908115612565575b600092839261252f575b506123da826006611378565b6123e5836007611378565b6123ee846112c2565b6123f7906112c2565b9563095ea7b3937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9761242960405190565b8080946124368960e01b90565b82528b60048301916124479261132c565b0381865a94602095f19088821560209961247b6113a8611568996124a1986113a8988f96612522575b61250c575b506112c2565b611568888b61248c61155b60405190565b03925af180156124ff575b6124e457506112c2565b926124ae61155b60405190565b03925af180156124d7575b6124c05750565b6117b89060203d811161161b5761160d818361086f565b6124df6112f5565b6124b9565b6124fa90893d811161161b5761160d818361086f565b612475565b6125076112f5565b612497565b6124fa90863d811161161b5761160d818361086f565b61252a6112f5565b612470565b909250612553915060c03d811161255e575b61254b818361086f565b810190612264565b5050509290926123ce565b503d612541565b61256d6112f5565b6123c4565b6123aa929194506125909060203d81116115e0576115d2818361086f565b93909161238e565b6125a06112f5565b612386565b156125ac57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f21617574680000000000000000000000000000000000000000000000000000006044820152606490fd5b90610396929161262d61261e600061128c565b6126273361125e565b146125a5565b90612640929161263b61285b565b612649565b9061037061288e565b9291906000612657816105e5565b8211612669575b5050506103706118da565b60209294506126ce8161267f6113a8600661128c565b3390612698863092612690846112c2565b9485916128c7565b6126c2836126ac6113a86113a8600261128c565b9250636e553f65833b15611515576040516114b7565b83528a60048401611bea565b03925af18015612782575b612766575b506127116126f26113a86113a8600161128c565b916317b18c8961271c61270460405190565b9889968795869460e01b90565b845260048401610566565b03925af1918215612759575b600092612739575b5081388061265e565b61275291925060203d81116115e0576115d2818361086f565b9038612730565b6127616112f5565b612728565b61277c90823d8411611501576114f2818361086f565b386126de565b61278a6112f5565b6126d9565b6103969190600061260b565b6103969081565b610396905461279b565b61039660026105e5565b156127bd57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9061136e565b9061285461039661138f926105e5565b825461281c565b61286560056127a2565b6128796128706127ac565b918214156127b6565b6117b8816005612844565b61039660016105e5565b612879612884565b73ffffffffffffffffffffffffffffffffffffffff9182168152911660208201526060810192916103709160400152565b9061291690612907610370956004956128df866112c2565b506128ed6323b872dd611c17565b936128f760405190565b9788956020870190815201612896565b6020820181038252038361086f565b6129e2565b6129256020611b0d565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b61039661291b565b1561295d57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608490fd5b906129ef6129fe926112c2565b906129f861294e565b91612a32565b8051612a0d61210360006105e5565b11612a155750565b805161037091612a2d916020908183010191016112d8565b612956565b6103969291612a4160006105e5565b91612af2565b15612a4e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608490fd5b3d15612aed57612ae23d611b0d565b903d6000602084013e565b606090565b90600061039694938192612b04606090565b50612b1b612b11306112c2565b8390311015612a47565b60208101905191855af1612b2d612ad3565b91612b99565b15612b3a57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919260609115612bcf5750508151612bb461210360006105e5565b14612bbd575090565b61039690612bca90612bdc565b612b33565b9093926103709250612bff565b3b612bea61210360006105e5565b1190565b602080825261039692910190611e5b565b9150612c09825190565b612c1661210360006105e5565b1115612c255750805190602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081529081906112389060048301612bee565b906103969291612c6e61261e600061128c565b906126409291612c7c61285b565b9291906000612c8a816105e5565b8211612c9b575050506103706118da565b60209294506126ce81612cb16113a8600761128c565b3390612cc2863092612690846112c2565b6126c283612cd66113a86113a8600261128c565b9250637acb7757833b15611515576040516114b7565b61039691906000612c5b565b906103969291612d0b61261e600061128c565b906126409291612d1961285b565b9291906000612d27816105e5565b8211612d38575050506103706118da565b6020929450612d5e82612d4e6113a8600261128c565b33612d58306112c2565b916128c7565b6127116126f26113a86113a8600161128c565b61039691906000612cf8565b9061037091612d8f61261e600061128c565b90612da191612d9c61285b565b612da9565b61037061288e565b90600091612db6836105e5565b8211612dc7575050506103706118da565b8290612dda83612d4e6113a8600261128c565b612dea6113a86113a8600161128c565b6127118363b85efd06833b15612e47575b612e0761155b60405190565b03925af18015612e3a575b612e1d575b8061265e565b81612e3392903d10611501576114f2818361086f565b3880612e17565b612e426112f5565b612e12565b612e4f600080fd5b612dfb565b9061037091612d7d565b9061037091612e7061261e600061128c565b90612da191612e7d61285b565b90600091612e8a836105e5565b8211612e9b575050506103706118da565b8290612edf82612eae6113a8600661128c565b3390612ebf873092612690846112c2565b612ed3836126ac6113a86113a8600261128c565b83528b60048401611bea565b03925af18015612f1c575b612f00575b50612dea6113a86113a8600161128c565b612f1690833d8511611501576114f2818361086f565b38612eef565b612f246112f5565b612eea565b9061037091612e5e565b9061037091612f4561261e600061128c565b90612da191612f5261285b565b90600091612f5f836105e5565b8211612f70575050506103706118da565b8290612edf82612f836113a8600761128c565b3390612f94873092612690846112c2565b612ed383612cd66113a86113a8600261128c565b9061037091612f33565b9061037091612fc461261e600061128c565b90612da191612fd161285b565b600090612fe46113a86113a8600161128c565b6127118363d2fbdc0d833b1561303c575b61300161155b60405190565b03925af1801561302f575b61301957506103706118da565b6130299060006114f2818361086f565b386113ef565b6130376112f5565b61300c565b613044600080fd5b612ff5565b9061037091612fb2565b6103709061306461261e600061128c565b612da19061307061285b565b60206130826113a86113a8600161128c565b9163e44b9fa592611d346000339561309c61155b60405190565b03925af180156130d0575b6130b457506103706118da565b6130cb9060203d81116115e0576115d2818361086f565b6113ef565b6130d86112f5565b6130a7565b61037090613053565b610370906130f761261e600061128c565b612da19061310361285b565b61324260006131186113a86113a8600161128c565b92602063e44b9fa5913095611d3461312f886112c2565b95869561313e61155b60405190565b03925af1801561334e575b613332575b5061315f6113a86113a8600261128c565b906131e26000633969dfb49361317b6113a86113a8600261128c565b906370a0823195602061318d60405190565b80946131998a60e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8916600483015260249082905afa928315613325575b84936132ff575b50836123aa91833b15611515576040516114b7565b03925af180156132f2575b6132dc575b5060206132056113a86113a8600661128c565b9163a9059cbb95611436613219600061128c565b9561322a6113a86113a8600661128c565b925061323560405190565b9788948593849360e01b90565b03915afa9283156132cf575b6000936132a8575b5061156860006020949561326c61155b60405190565b03925af1801561329b575b61328457506103706118da565b6130cb9060203d811161161b5761160d818361086f565b6132a36112f5565b613277565b6020935060006132c761156892863d81116115e0576115d2818361086f565b945050613256565b6132d76112f5565b61324e565b6132ec9060006114f2818361086f565b386131f2565b6132fa6112f5565b6131ed565b6123aa91935061331d859160203d81116115e0576115d2818361086f565b9391506131cd565b61332d6112f5565b6131c6565b6133499060203d81116115e0576115d2818361086f565b61314e565b6133566112f5565b613149565b610370906130e6565b90610370929161337761261e600061128c565b6133b0565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610370929091604091610579906020830152565b600091926133ea836133c86113a86113a8600161128c565b92611a1863a10d3b3391853b156133f5575b6040519889978896879560e01b90565b85526004850161337c565b6133fd600080fd5b6133da565b906103709291613364565b906103709161341f61261e600061128c565b6000906134326113a86113a8600161128c565b6115688363b61aa08c833b15611a4757611a1861155b60405190565b906103709161340d565b906103709161346a61261e600061128c565b60009061347d6113a86113a8600161128c565b6134998363a22cb465833b15611a4757611a1861155b60405190565b845273ffffffffffffffffffffffffffffffffffffffff166004840152151560248301526044820190565b9061037091613458565b906107d195949392916134e461261e600061128c565b906134fa95949392916134f561285b565b613573565b909161037061288e565b919061039690604084820312613528575b61351f8185611302565b93602001611302565b613530600080fd5b613515565b6105796103709461205c60609498979561356c608086019a600087019073ffffffffffffffffffffffffffffffffffffffff169052565b6020850152565b6040946135bd92600092989794959850506135c86135a06113a86113a8600161359b81613f12565b61128c565b94633c62c44f926135b060405190565b9a8b988997889660e01b90565b865260048601613535565b03925af1801561360c575b60009283916135e157509190565b90506107d191925060403d8111613605575b6135fd818361086f565b810190613504565b503d6135f3565b6136146112f5565b6135d3565b6107d1939291906000806134ce565b9092919261363861093882611668565b9381855260208086019202830192818411613676575b915b83831061365d5750505050565b6020809161366b8486611bc0565b815201920191613650565b61367e600080fd5b61364e565b906103969181601f8201121561369f575b602081519101613628565b6136a7600080fd5b613694565b90610396916020818303126136e2575b80519067ffffffffffffffff82116136d5575b01613683565b6136dd600080fd5b6136cf565b6136ea600080fd5b6136bc565b91909160408184031261372b575b61372561370a60406108bc565b9360006137178285611bc0565b908601526020809301611302565b90830152565b613733600080fd5b6136fd565b9092919261374861093882611668565b938185526040602086019202830192818411613788575b915b83831061376e5750505050565b602060409161377d84866136ef565b815201920191613761565b613790600080fd5b61375f565b906103969181601f820112156137b1575b602081519101613738565b6137b9600080fd5b6137a6565b90610396916020818303126137f4575b80519067ffffffffffffffff82116137e7575b01613795565b6137ef600080fd5b6137e1565b6137fc600080fd5b6137ce565b919082018092116118d257565b90611b1a61093883611668565b369037565b906103706138366138308461380e565b93611668565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016020840161381b565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461388f570190565b61090d611895565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90602080916138d4845190565b8110156138e2575b02010190565b6138ea613897565b6138dc565b909291926138ff61093882611668565b93818552604060208601920283019281841161393f575b915b8383106139255750505050565b602060409161393484866136ef565b815201920191613918565b613947600080fd5b613916565b906103969181601f82011215613968575b6020815191016138ef565b613970600080fd5b61395d565b90610396916020818303126139ab575b80519067ffffffffffffffff821161399e575b0161394c565b6139a6600080fd5b613998565b6139b3600080fd5b613985565b6139dd9060006139ce6113a86113a8600161128c565b6312edb24c9061194260405190565b825260049082905afa918215613ecf575b600092613ea8575b50613a8a90613a0b6113a86113a8600161128c565b309390613a2a6000628cc262613a20886112c2565b936113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa908115613e9b575b600091613e82575b506000613a726113a86113a8600261128c565b63b277e8f090613a8160405190565b97889260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa948515613e75575b600095613e52575b50613ae46020613ad56113a86113a8600361128c565b63857cb94a906113bc60405190565b825260049082905afa908115613e45575b600091613e27575b50613b23613b1e613b1583613b10885190565b613801565b88515b90613801565b613820565b908196613b3f613b1e613b3884613b108a5190565b8351613b18565b968792600092613b4e846105e5565b9a5b613b5b6103968b5190565b8c1015613c53578b613c158c8f613bc5613bf88f8f8f908f9561143661199a6113a86113a8613bab8e613bf2613bee82613c129f9b81613be88f9e60209f613bc5613bab8583613bcd94506138c7565b5173ffffffffffffffffffffffffffffffffffffffff1690565b9384926138c7565b9073ffffffffffffffffffffffffffffffffffffffff169052565b506138c7565b5190565b996138c7565b03915afa918215613c46575b600092613c26575b50613801565b52565b50613c1f8c613861565b9b50613b50565b613c3f91925060203d81116115e0576115d2818361086f565b9038613c0c565b613c4e6112f5565b613c04565b92959790939650613c95989a508691949b611436613c776113a86113a8600361128c565b9163dc01f60d9050613c8860405190565b9b8c948593849360e01b90565b03915afa968715613e1a575b600097613df7575b50613cb3856105e5565b995b613cc0610396895190565b8b1015613d555789613d448a613c12613d3e8f613b18613d368f8f8f82613d24613be88d613bcd613d3096613d2a613d1d8d9860209b50613d018a8a6138c7565b51015173ffffffffffffffffffffffffffffffffffffffff1690565b9586945190565b88613801565b906138c7565b51015190565b968795505190565b8d6138c7565b50613d4e8b613861565b9a50613cb5565b919594939950919550613d67836105e5565b985b613d74610396875190565b8a1015613deb5788613dda89613c12613dd48b8f80613b18613dcc8f8f8f9582613dc6613be88f613bcd613d3096613d2a8e613b10613b109f613dbf9060209d50613d018c8c6138c7565b9788965190565b8a613801565b988997505190565b8c6138c7565b50613de48a613861565b9950613d69565b96509650965050505050565b613e1391973d8091833e613e0b818361086f565b810190613975565b9538613ca9565b613e226112f5565b613ca1565b613e3f915060203d81116115e0576115d2818361086f565b38613afd565b613e4d6112f5565b613af5565b613e6e91953d8091833e613e66818361086f565b8101906137be565b9338613abf565b613e7d6112f5565b613ab7565b613e95913d8091833e6117b0818361086f565b38613a5f565b613ea36112f5565b613a57565b613ec890613a8a92933d8091833e613ec0818361086f565b8101906136ac565b91906139f6565b613ed76112f5565b6139ee565b6103706001613f12565b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161037091602090611bfb565b613f93575b613f1f6142a0565b613f65613f466000613f376113a86113a8600161128c565b6312edb24c906113bc60405190565b825260049082905afa908115613f86575b600091613f6d575b506147f2565b610370614598565b613f80913d8091833e613ec0818361086f565b38613f5f565b613f8e6112f5565b613f57565b613fa36113a86113a8600161128c565b61410830613fc4600063c00007b0613fba846112c2565b956113bc60405190565b825273ffffffffffffffffffffffffffffffffffffffff87166004830152602490829084905af19081156141fc575b6000916141e3575b505061403160006140126113a86113a8600261128c565b636b09169590614025836114aa8161128c565b83528b60048401613ee6565b03925af180156141d6575b6141c0575b5073d533a949740bb3306d119cc777fa900ba034cd52906020614063836112c2565b9461406d866112c2565b936370a08231948361407e60405190565b809261408a8960e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa9081156141b3575b600091614196575b506000976140cc896105e5565b8211614180575b5050506140f1734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b90565b926114366140fe856112c2565b9561322a876112c2565b03915afa928315614173575b600093614153575b50614126846105e5565b8311614136575b50505050613f17565b61414a93614144915061128c565b90614209565b3880808061412d565b61416c91935060203d81116115e0576115d2818361086f565b913861411c565b61417b6112f5565b614114565b61418e92506141448961128c565b3880806140d3565b6141ad9150843d81116115e0576115d2818361086f565b386140bf565b6141bb6112f5565b6140b7565b6141d09060006114f2818361086f565b38614041565b6141de6112f5565b61403c565b6141f6913d8091833e6117b0818361086f565b38613ffb565b6142046112f5565b613ff3565b6129166004926129076103709561421f856112c2565b5061422d63a9059cbb611c17565b9261423760405190565b968794602086019081520161132c565b818102929181159184041417156118d257565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8115614294570490565b61429c61425a565b0490565b602073c9acb83ada68413a6aa57007bc720ee2e2b3c46d6142c0816112c2565b6142c9816112c2565b6313114a9d6142e16142da60405190565b9160e01b90565b81528481600481855afa90811561458b575b60009161456e575b5084611436733432b6a60d23ca0dfca7761b7ab56459d9c964d09561431f876112c2565b93614329856112c2565b956370a082319261437c61436e3094614354614344876112c2565b9e8f8d6114368b61142960405190565b03915afa908115614561575b600091614544575b50614247565b61437661108d565b9061428a565b6000996143888b6105e5565b821161446b575b50505050506143ab6143a060405190565b988993849360e01b90565b0381855afa94851561445e575b60009561443e575b506143ca836105e5565b85116143d8575b5050505050565b602093505061156863a9059cbb926143ef8161128c565b936143fc61155b60405190565b03925af18015614431575b614415575b808080806143d1565b61442c9060203d811161161b5761160d818361086f565b61440c565b6144396112f5565b614407565b61445791955060203d81116115e0576115d2818361086f565b93386143c0565b6144666112f5565b6143b8565b61449693889163a9059cbb94505063998cbb439061143661448c600461128c565b9261323560405190565b03915afa928315614537575b60009361450c575b5086916144ca8261156893506144bf60405190565b958694859460e01b90565b03818b8b5af180156144ff575b6144e4575b80808061438f565b6144fa90853d811161161b5761160d818361086f565b6144dc565b6145076112f5565b6144d7565b611568919350916144ca61452d8994853d8111611dd357611dc5818361086f565b94925050916144aa565b61453f6112f5565b6144a2565b61455b91508a3d81116115e0576115d2818361086f565b38614368565b6145696112f5565b614360565b6145859150853d81116115e0576115d2818361086f565b386142fb565b6145936112f5565b6142f3565b6145ad60206113ad6113a86113a8600361128c565b825260049082905afa9081156147e5575b6000916147c7575b506145cd57565b6145fb6145e06113a86113a8600361128c565b3060206370a082316145f1836112c2565b93611cf960405190565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa9283156147ba575b600093614792575b5061465c9160209161143661464b6113a86113a8600161128c565b9163d9f96e8d905061142960405190565b03915afa908115614785575b600091614767575b50600091614680612103846105e5565b1480614756575b6146d7575b506146a1816114976113a86113a8600361128c565b03925af180156146ca575b6146b4575050565b8161037092903d10611501576114f2818361086f565b6146d26112f5565b6146ac565b816146e86113a86113a8600361128c565b6347e7ef2490611568836146fb8161128c565b93833b15614749575b61471061155b60405190565b03925af1801561473c575b1561468c5761473690823d8411611501576114f2818361086f565b3861468c565b6147446112f5565b61471b565b614751600080fd5b614704565b50614760826105e5565b8111614687565b61477f915060203d81116115e0576115d2818361086f565b38614670565b61478d6112f5565b614668565b6020919350916147b161465c93833d81116115e0576115d2818361086f565b93915091614630565b6147c26112f5565b614628565b6147df915060203d811161161b5761160d818361086f565b386145c6565b6147ed6112f5565b6145be565b60006147fd816105e5565b925b61480a610396845190565b8410156148e25761481e613bab85856138c7565b61483b733432b6a60d23ca0dfca7761b7ab56459d9c964d061125e565b03614851575b61484a84613861565b93506147ff565b614869602061140d6113a86113a8613bab89896138c7565b03915afa9081156148d5575b6000916148b7575b50614887836105e5565b8111614894575b50614841565b6148b1906148a86113a8613bab88886138c7565b6141448561128c565b3861488e565b6148cf915060203d81116115e0576115d2818361086f565b3861487d565b6148dd6112f5565b614875565b92505050565b909291926148f861093882611668565b9381855260208086019202830192818411614936575b915b83831061491d5750505050565b6020809161492b848661050f565b815201920191614910565b61493e600080fd5b61490e565b6103969136916148e8565b9161496991613f659361496e575b6149646142a0565b614943565b6147f2565b61497e6113a86113a8600161128c565b600063c00007b091614995823094613a20866112c2565b825273ffffffffffffffffffffffffffffffffffffffff85166004830152602490829084905af1908115614a70575b8391614a57575b50506149dd6113a86113a8600261128c565b636b0916959350614a06836149f18161128c565b95833b15614a4a575b614a1161155b60405190565b845260048401613ee6565b03925af18015614a3d575b614a27575b5061495c565b614a379060006114f2818361086f565b38614a21565b614a456112f5565b614a1c565b614a52600080fd5b6149fa565b614a6a913d8091833e6117b0818361086f565b386149cb565b614a786112f5565b6149c456fea2646970667358221220d1e5311bf8fbc384c4637760c1c60232806dd25f5fe17f7f34f0b31c3d3fd24b64736f6c6343000811003360c0604052346200005c575b620000266200001962000386565b9594909493919362000445565b6040516172ed62000c2b82396080518181816125c501528181612761015281816127fc015261296e015260a0518150506172ed90f35b62000065600080fd5b6200000b565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000a957604052565b620000b362000070565b604052565b90620000cf620000c760405190565b928362000087565b565b6001600160a01b031690565b90565b6001600160a01b0381165b036200006b57565b90505190620000cf82620000e0565b60209081906001600160401b0381116200011b57020190565b6200012562000070565b020190565b90929192620001436200013d8262000102565b620000b8565b938185526020808601920283019281841162000186575b915b8383106200016a5750505050565b602080916200017a8486620000f3565b8152019201916200015c565b6200018f600080fd5b6200015a565b90620000dd9181601f82011215620001b4575b6020815191016200012a565b620001bd600080fd5b620001a8565b80620000eb565b90505190620000cf82620001c3565b90929192620001ec6200013d8262000102565b93818552602080860192028301928184116200022f575b915b838310620002135750505050565b60208091620002238486620001ca565b81520192019162000205565b62000238600080fd5b62000203565b90620000dd9181601f820112156200025d575b602081519101620001d9565b62000266600080fd5b62000251565b60e08183031262000377575b620002848282620000f3565b92620002a683602084015160018060401b03811162000368575b840162000195565b92620002c881604085015160018060401b0381116200034a575b850162000195565b92620002ea82606083015160018060401b03811162000359575b83016200023e565b92620000dd6200030f84608085015160018060401b0381116200034a57850162000195565b93620003318160a086015160018060401b0381116200033b575b860162000195565b9360c001620000f3565b62000344600080fd5b62000329565b62000353600080fd5b620002c0565b62000362600080fd5b620002e2565b62000371600080fd5b6200029e565b62000380600080fd5b62000278565b620003a962007f18803803806200039d81620000b8565b9283398101906200026c565b90919293949596565b620000dd90620000d1906001600160a01b031682565b620000dd90620003b2565b620000dd90620003c8565b90600160281b600160c81b039060281b5b9181191691161790565b906200040d620000dd6200041592620003d3565b8254620003de565b9055565b906001600160a01b0390620003ef565b906200043d620000dd6200041592620003d3565b825462000419565b620004519650620008ee565b6200047c62000474734659d5ff63a1e1edd6d5dd9cc315e063c95947d0620003d3565b6021620003f9565b620004a76200049f73f43211935c781d5ca1a41d2041f397b8a7366c7a620003d3565b602362000429565b620004d2620004ca73a1f8a6807c402e4a15ef4eba36528a3fed24e577620003d3565b602462000429565b620000cf620004f5735f4ec3df9cbd43714fe2740f5e3616155c5b8419620003d3565b602562000429565b620000dd620000dd620000dd9290565b9060001990620003ef565b906200052c620000dd6200041592620004fd565b82546200050d565b50634e487b7160e01b600052601160045260246000fd5b620000cf62000534565b9160001960089290920291821b911b620003ef565b91906200057f620000dd6200041593620004fd565b90835462000555565b620000cf916000916200056a565b818110620005a2575050565b80620005b2600060019362000588565b0162000596565b9091828110620005c857505050565b620000cf9290620005e0905b92600052602060002090565b908101910162000596565b90620000cf916801000000000000000082116200060f575b805490828155620005b9565b6200061962000070565b62000603565b600162000653620005d462000632855190565b94838060401b03861162000690575b6200064d8686620005eb565b60200190565b92049160005b838110620006675750505050565b600190602062000682620000dd86516001600160a01b031690565b940193818401550162000659565b6200069a62000070565b62000641565b90620000cf916200061f565b818110620006b8575050565b80620006c8600060019362000588565b01620006ac565b9091828110620006de57505050565b620000cf9290620006ef90620005d4565b9081019101620006ac565b90620000cf916801000000000000000082116200071e575b805490828155620006cf565b6200072862000070565b62000712565b60016200075c620005d462000741855190565b94838060401b03861162000790575b6200064d8686620006fa565b92049160005b838110620007705750505050565b600190602062000782620000dd865190565b940193818401550162000762565b6200079a62000070565b62000750565b90620000cf916200072e565b6001906000198114620007bd570190565b620007c762000534565b0190565b50634e487b7160e01b600052603260045260246000fd5b9060208091620007f0845190565b811015620007ff575b02010190565b62000809620007cb565b620007f9565b906200081b90620003d3565b600052602052604060002090565b6200084c60019162000839815490565b8410156200085557600052602060002090565b91020190600090565b6200085f620007cb565b600052602060002090565b9062000896620000cf92805490680100000000000000008210156200089d575b60018201815562000829565b906200056a565b620008a762000070565b6200088a565b9060ff90620003ef565b90620008ca620000dd6200041592151590565b8254620008ad565b620000dd62093a80620004fd565b919082018092116200054b57565b94620009d9620009e99493956200090b620009e194999862000b0b565b6200092a73c8418af6358ffdda74e09ca9cc3fe03ca6adc5b0620003d3565b60805273853d955acef822db058eb8505911ed77f175b99e60a052620009c4671bc16d674ec800006200095d81620004fd565b6200096a81600662000518565b6200097b6301e13380600762000518565b6200098b62091050600862000518565b620009bb673782dace9d90000091620009a483620004fd565b93620009b285600962000518565b50600a62000518565b50600b62000518565b620009d1896010620006a0565b6011620006a0565b6012620006a0565b6013620007a0565b6000620009f681620004fd565b925b62000a05620000dd865190565b84101562000ab95762000a428462000a3c601462000a3562000a28848b620007e2565b516001600160a01b031690565b906200080f565b62000518565b62000aa6601562000a5f62000a5785620004fd565b80926200086a565b62000a6f62000a288787620007e2565b62000a908162000a8a600f62000a3562000a288c8e620007e2565b62000429565b5062000a9e8160196200086a565b601a6200086a565b62000ab184620007ac565b9350620009f8565b935091505062000acb816021620008b7565b5062000aef4262000ade81600562000518565b62000ae8620008d2565b90620008e0565b62000afc81600462000518565b50565b620000dd6001620004fd565b62000b169062000baf565b62000b2062000aff565b62000afc81600262000518565b620000d1620000dd620000dd9290565b620000dd9062000b2d565b1562000b5057565b60405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b6001600160a01b0391821681529116602082015260400190565b60009062000bbd8262000b3d565b9162000bde6001600160a01b0384166001600160a01b038416141562000b48565b62000bea828262000429565b507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9162000c2562000c1b60405190565b9283928362000b95565b0390a156fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80628cc2621461062f578063061a7bf5146106265780630d7bac4f1461061d57806312edb24c1461061457806315a202a11461060b5780631627540c1461060257806317b18c89146105f95780631bcb7d90146105f05780631c1f78eb146105e75780631e090f01146105de5780631face856146105d5578063218751b2146105cc578063231b68dc146105c357806328408bab146105ba5780632c0c2a0a146105b157806336f89af2146105a8578063386a95251461059f578063387edc86146105965780633c62c44f1461058d57806341a16f3f146105845780634f39059c1461057b5780634fd2b5361461057257806353a47bb71461056957806355189773146105605780635bfd92581461055757806364f2c0601461054e578063663b135c14610545578063693392451461053c5780636c430dbb146105335780636e27cef91461052a57806370641a361461052157806372f702f314610518578063741d3c181461050f578063774d4ae7146105065780637910d17b146104fd5780637970833e146104f457806379ba5097146104eb5780637ab44e40146104e25780637d6ef08e146104d95780637f472e54146104d05780638980f11f146104c75780638bad86a7146104be5780638da5cb5b146104b557806391cf600a146104ac5780639637927f146104a3578063a0f234761461049a578063a10d3b3314610491578063a22cb46514610488578063aa1d4fce1461047f578063b61aa08c14610476578063b85efd061461046d578063b94c4dcb14610464578063bdb123e31461045b578063c00007b014610452578063c354382614610449578063c8f33c9114610440578063ca6df29d14610437578063cc2abd641461042e578063cdc82e8014610425578063d2010fb41461041c578063d2fbdc0d14610413578063d42fc9b41461040a578063d5e1a9c614610401578063d7400d56146103f8578063d9f96e8d146103ef578063de1a6551146103e6578063de57a5b5146103dd578063e01f62bf146103d4578063e1ba95d2146103cb578063e44b9fa5146103c2578063e7f30582146103b9578063ebe2b12b146103b0578063f288baf6146103a7578063f2a8d3491461039e578063f2caeb1e14610395578063f77e34d11461038c578063facefb64146103835763fff6cae90361000e5761037e611d66565b61000e565b5061037e611d3f565b5061037e611b9f565b5061037e611b58565b5061037e611b2e565b5061037e611af8565b5061037e611ac2565b5061037e611a8f565b5061037e611a64565b5061037e611a15565b5061037e6119eb565b5061037e6119c0565b5061037e611998565b5061037e61196e565b5061037e611947565b5061037e61191c565b5061037e6118a8565b5061037e611880565b5061037e611856565b5061037e611820565b5061037e6117ec565b5061037e611784565b5061037e61175a565b5061037e611724565b5061037e6116fa565b5061037e6116d0565b5061037e6116a6565b5061037e611672565b5061037e61164a565b5061037e611620565b5061037e6115ec565b5061037e6115c4565b5061037e61159a565b5061037e611570565b5061037e61153d565b5061037e611513565b5061037e6114ce565b5061037e611488565b5061037e61145e565b5061037e611434565b5061037e6113f7565b5061037e61136d565b5061037e61132c565b5061037e6111e6565b5061037e6111bb565b5061037e61116c565b5061037e611142565b5061037e61110c565b5061037e6110e2565b5061037e6110ac565b5061037e611070565b5061037e611018565b5061037e610f94565b5061037e610f6a565b5061037e610f42565b5061037e610ed2565b5061037e610e9c565b5061037e610e72565b5061037e610e3c565b5061037e610de9565b5061037e610d61565b5061037e610d37565b5061037e610cec565b5061037e610cc2565b5061037e610c70565b5061037e610c2e565b5061037e610c04565b5061037e610bce565b5061037e610b98565b5061037e610ad3565b5061037e610aa8565b5061037e6109fb565b5061037e61099e565b5061037e610968565b5061037e6108ac565b5061037e6107f9565b5061037e61079e565b5061037e610713565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361063857565b9050359061068582610659565b565b9061065691602081830312156106785761069f600080fd5b610678565b9052565b0190565b906106cc6106c56106bb845190565b8084529260200190565b9260200190565b9060005b8181106106dd5750505090565b9091926106fa6106f36001928651815260200190565b9460200190565b9291016106d0565b6020808252610656929101906106ac565b5034610740575b61073c61073061072b366004610687565b612379565b60405191829182610702565b0390f35b610748600080fd5b61071a565b80610671565b905035906106858261074d565b9091606082840312610791575b61065661077a8484610678565b936107888160208601610753565b93604001610753565b610799600080fd5b61076d565b50346107cf575b61073c6107bc6107b6366004610760565b91615c8c565b6040515b91829182901515815260200190565b6107d7600080fd5b6107a5565b906106569160208183031215610753576107f4600080fd5b610753565b5034610827575b61073c6108166108113660046107dc565b612519565b6040515b9182918290815260200190565b61082f600080fd5b610800565b600091031261083f57565b610685600080fd5b906108566106c56106bb845190565b9060005b8181106108675750505090565b9091926108936106f3600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b92910161085a565b602080825261065692910190610847565b50346108d5575b6108be366004610834565b61073c6108c9611ecf565b6040519182918261089b565b6108dd600080fd5b6108b3565b610656916008021c73ffffffffffffffffffffffffffffffffffffffff1690565b9061065691546108e2565b61065660006025610903565b61063d6106566106569273ffffffffffffffffffffffffffffffffffffffff1690565b6106569061091a565b6106569061093d565b6106a490610946565b602081019291610685919061094f565b5034610991575b61097a366004610834565b61073c61098561090e565b60405191829182610958565b610999600080fd5b61096f565b50346109bd575b6109b86109b3366004610687565b614123565b604051005b6109c5600080fd5b6109a5565b9190610656906040848203126109ee575b6109e58185610753565b93602001610753565b6109f6600080fd5b6109db565b5034610a19575b61073c610816610a133660046109ca565b906156ba565b610a21600080fd5b610a02565b919061065690604084820312610a4a575b610a418185610678565b93602001610678565b610a52600080fd5b610a37565b90610a6190610946565b600052602052604060002090565b610656916008021c5b60ff1690565b906106569154610a6f565b610aa361065692610a9e602793600094610a57565b610a57565b610a7e565b5034610ac6575b61073c6107bc610ac0366004610a26565b90610a89565b610ace600080fd5b610aaf565b5034610af0575b610ae5366004610834565b61073c610730612471565b610af8600080fd5b610ada565b8051825261068591906080908190610b1a60208201516020860152565b610b2960408201516040860152565b610b3860608201516060860152565b0151910152565b906106a88160a093610afd565b90610b5b6106c56106bb845190565b9060005b818110610b6c5750505090565b909192610b7f6106f36001928651610b3f565b929101610b5f565b602080825261065692910190610b4c565b5034610bc1575b61073c610bb5610bb0366004610687565b614b73565b60405191829182610b87565b610bc9600080fd5b610b9f565b5034610beb575b61073c610816610be6366004610687565b612583565b610bf3600080fd5b610bd5565b61065660006024610903565b5034610c21575b610c16366004610834565b61073c610985610bf8565b610c29600080fd5b610c0b565b5034610c4c575b61073c6107bc610c46366004610a26565b90611da0565b610c54600080fd5b610c35565b61065690610c6b602091600092610a57565b610903565b5034610cb5575b61073c610c8d610c88366004610687565b610c59565b6040515b9182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b610cbd600080fd5b610c77565b5034610cdf575b61073c610816610cda366004610687565b61270f565b610ce7600080fd5b610cc9565b5034610d09575b61073c610816610d04366004610687565b612502565b610d11600080fd5b610cf3565b6106566106566106569290565b61065662093a80610d16565b610656610d23565b5034610d54575b610d49366004610834565b61073c610816610d2f565b610d5c600080fd5b610d3e565b5034610d7b575b6109b8610d76366004610687565b612fd9565b610d83600080fd5b610d68565b608081830312610dc5575b610d9d8282610678565b92610656610dae8460208501610753565b93610dbc8160408601610753565b93606001610753565b610dcd600080fd5b610d93565b9081526040810192916106859160200152565b0152565b5034610e1d575b610e07610dfe366004610d88565b92919091615e58565b9061073c610e1460405190565b92839283610dd2565b610e25600080fd5b610df0565b61065690610c6b600f91600092610a57565b5034610e59575b61073c610c8d610e54366004610687565b610e2a565b610e61600080fd5b610e43565b61065660006023610903565b5034610e8f575b610e84366004610834565b61073c610985610e66565b610e97600080fd5b610e79565b5034610eb9575b61073c610816610eb4366004610687565b612699565b610ec1600080fd5b610ea3565b61065660006001610903565b5034610eef575b610ee4366004610834565b61073c610c8d610ec6565b610ef7600080fd5b610ed9565b801515610671565b9050359061068582610efc565b919061065690604084820312610f35575b610f2c8185610678565b93602001610f04565b610f3d600080fd5b610f22565b5034610f5d575b6109b8610f57366004610f11565b90612ce4565b610f65600080fd5b610f49565b5034610f87575b610f7c366004610834565b61073c61081661445a565b610f8f600080fd5b610f71565b5034610fb1575b610fa6366004610834565b61073c6108166124f8565b610fb9600080fd5b610f9b565b919060a08382031261100b575b610fd58184610678565b92610fe38260208301610678565b92610656610ff48460408501610753565b936110028160608601610753565b93608001610753565b611013600080fd5b610fcb565b5034611036575b610e0761102d366004610fbe565b93929092615d79565b61103e600080fd5b61101f565b610656916008021c81565b906106569154611043565b6106569061106b601491600092610a57565b61104e565b503461108d575b61073c610816611088366004610687565b611059565b611095600080fd5b611077565b6106569061106b601891600092610a57565b50346110c9575b61073c6108166110c4366004610687565b61109a565b6110d1600080fd5b6110b3565b6106566000600861104e565b50346110ff575b6110f4366004610834565b61073c6108166110d6565b611107600080fd5b6110e9565b5034611129575b61111e366004610834565b61073c610730612253565b611131600080fd5b611113565b61065660056021610903565b503461115f575b611154366004610834565b61073c610985611136565b611167600080fd5b611149565b5034611186575b6109b8611181366004610687565b614806565b61118e600080fd5b611173565b9190610656906040848203126111ae575b6109e58185610678565b6111b6600080fd5b6111a4565b50346111d9575b61073c6108166111d3366004611193565b90614893565b6111e1600080fd5b6111c2565b5034611204575b61073c6107306111fe366004610f11565b9061303d565b61120c600080fd5b6111ed565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61126160059161124f815490565b84101561126a57600052602060002090565b91020190600090565b611272611211565b600052602060002090565b6106569081565b610656905461127d565b919061129e602293600094610a57565b80548210156112ef576112b2929350611241565b506112bc81611284565b916112c960018301611284565b916112d660028201611284565b9161065660046112e860038501611284565b9301611284565b8380fd5b9095949261068594611325610de59261131e60809661131760a088019c6000890152565b6020870152565b6040850152565b6060830152565b5034611360575b61073c61134a611344366004611193565b9061128e565b9161135795939560405190565b958695866112f3565b611368600080fd5b611333565b5034611387575b61137f366004610834565b6109b86141e4565b61138f600080fd5b611374565b90916060828403126113c5575b6106566113ae8484610678565b936113bc8160208601610753565b93604001610678565b6113cd600080fd5b6113a1565b90610a61565b9061065692610a9e61106b926113f2602695600096610a57565b6113d2565b5034611415575b61073c61081661140f366004611394565b916113d8565b61141d600080fd5b6113fe565b6106569061106b601f91600092610a57565b5034611451575b61073c61081661144c366004610687565b611422565b611459600080fd5b61143b565b503461147b575b61073c610816611476366004610687565b6126bb565b611483600080fd5b611465565b50346114a3575b6109b861149d366004611193565b90613c2b565b6114ab600080fd5b61148f565b908152606081019392610685929091604091610de5905b6020830152565b50346114fb575b61073c6114eb6114e6366004610687565b6149e2565b6040519193915b938493846114b0565b611503600080fd5b6114d5565b610656600080610903565b5034611530575b611525366004610834565b61073c610c8d611508565b611538600080fd5b61151a565b5034611557575b6109b8611552366004610687565b613a2b565b61155f600080fd5b611544565b61065660006021610a7e565b503461158d575b611582366004610834565b61073c6107bc611564565b611595600080fd5b611577565b50346115b7575b61073c6108166115b2366004610687565b6125ab565b6115bf600080fd5b6115a1565b50346115df575b6109b86115d9366004610760565b91615b4a565b6115e7600080fd5b6115cb565b5034611607575b6109b8611601366004610f11565b90615c33565b61160f600080fd5b6115f3565b6106566000600961104e565b503461163d575b611632366004610834565b61073c610816611614565b611645600080fd5b611627565b5034611665575b6109b861165f366004611193565b90615bc7565b61166d600080fd5b611651565b503461168d575b6109b86116873660046109ca565b90615301565b611695600080fd5b611679565b6106566000600761104e565b50346116c3575b6116b8366004610834565b61073c61081661169a565b6116cb600080fd5b6116ad565b50346116ed575b6116e2366004610834565b61073c610816614668565b6116f5600080fd5b6116d7565b5034611717575b61073c610730611712366004610687565b613013565b61171f600080fd5b611701565b5034611741575b61073c610c8d61173c366004610687565b6126e6565b611749600080fd5b61172b565b6106566000600561104e565b5034611777575b61176c366004610834565b61073c61081661174e565b61177f600080fd5b611761565b50346117a1575b61073c61081661179c366004610687565b614b8f565b6117a9600080fd5b61178b565b90916060828403126117df575b6106566117c88484610f04565b936117d68160208601610f04565b93604001610f04565b6117e7600080fd5b6117bb565b5034611807575b6109b86118013660046117ae565b916139be565b61180f600080fd5b6117f3565b6106566000600661104e565b503461183d575b611832366004610834565b61073c610816611814565b611845600080fd5b611827565b6106566000600361104e565b5034611873575b611868366004610834565b61073c61081661184a565b61187b600080fd5b61185d565b503461189b575b6109b86118953660046109ca565b9061568f565b6118a3600080fd5b611887565b50346118c5575b61073c6108166118c0366004610687565b612553565b6118cd600080fd5b6118af565b60808183031261190f575b6118e78282610678565b926106566118f88460208501610753565b936119068160408601610678565b93606001610678565b611917600080fd5b6118dd565b503461193a575b6109b86119313660046118d2565b92919091613fff565b611942600080fd5b611923565b5034611961575b6109b861195c366004610687565b612c2e565b611969600080fd5b61194e565b503461198b575b61073c610816611986366004610687565b6124e1565b611993600080fd5b611975565b50346119b3575b6109b86119ad366004610a26565b90614031565b6119bb600080fd5b61199f565b50346119de575b61073c6108166119d8366004611193565b90614b9e565b6119e6600080fd5b6119c7565b5034611a08575b6119fd366004610834565b61073c6108166124d7565b611a10600080fd5b6119f2565b5034611a2f575b611a27366004610834565b6109b86139f4565b611a37600080fd5b611a1c565b919061065690604084820312611a57575b610a418185610753565b611a5f600080fd5b611a4d565b5034611a82575b61073c610816611a7c366004611a3c565b90615907565b611a8a600080fd5b611a6b565b5034611aa9575b6109b8611aa4366004610687565b612aff565b611ab1600080fd5b611a96565b6106566000600461104e565b5034611adf575b611ad4366004610834565b61073c610816611ab6565b611ae7600080fd5b611ac9565b6106566000600a61104e565b5034611b15575b611b0a366004610834565b61073c610816611aec565b611b1d600080fd5b611aff565b6106566000600b61104e565b5034611b4b575b611b40366004610834565b61073c610816611b22565b611b53600080fd5b611b35565b5034611b75575b61073c610816611b703660046107dc565b611fdb565b611b7d600080fd5b611b5f565b906106569160208183031215610f0457611b9a600080fd5b610f04565b5034611bb9575b6109b8611bb4366004611b82565b61328e565b611bc1600080fd5b611ba6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff821117611c5e57604052565b611c66611bee565b604052565b90610685611c7860405190565b9283611c1e565b60209067ffffffffffffffff8111611c95570290565b611c9d611bee565b0290565b90929192611cb6611cb182611c7f565b611c6b565b936020859202830192818411611cef575b915b838310611cd65750505050565b60208091611ce48486610753565b815201920191611cc9565b611cf7600080fd5b611cc7565b906106569181601f82011215611d15575b600690611ca1565b611d1d600080fd5b611d0d565b906106569160c08183031215611cfc57611d3a600080fd5b611cfc565b5034611d59575b6109b8611d54366004611d22565b613f46565b611d61600080fd5b611d46565b5034611d80575b611d78366004610834565b6109b8613426565b611d88600080fd5b611d6d565b6106569061063d565b6106569054611d8d565b90611dae61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831603611dd1575050600190565b611e04611dea611de5611e1e93600f610a57565b611d96565b9273ffffffffffffffffffffffffffffffffffffffff1690565b9173ffffffffffffffffffffffffffffffffffffffff1690565b14611e2857600090565b600190565b90611e48611e3c6106bb845490565b92600052602060002090565b9060005b818110611e595750505090565b909192611e93611e8c600192611e6e87611d96565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460010190565b929101611e4c565b9061065691611e2d565b90610685611ebf92611eb660405190565b93848092611e9b565b0383611c1e565b61065690611ea5565b6106566010611ec6565b61126160019161124f815490565b61063d6106566106569290565b61065690611ee7565b905051906106858261074d565b906106569160208183031215611efd57611f22600080fd5b611efd565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190611f6f565b9290565b91808302928184041490151715611f8257565b610685611f34565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611fc4565b9190565b908115611fcf570490565b611fd7611f8a565b0490565b611fef611fe9826011611ed9565b90610903565b611ffc61063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216146120dd5761204d61065692602061203561203061208195610946565b610946565b630a3be7579061204460405190565b94859260e01b90565b825260049082905afa9182156120d0575b600092612098575b5061207561207b916019611ed9565b9061104e565b90611f64565b612092670de0b6b3a7640000610d16565b90611fba565b61207b9192506120c16120759160203d81116120c9575b6120b98183611c1e565b810190611f0a565b929150612066565b503d6120af565b6120d8611f27565b61205e565b50612075610656916013611ed9565b6020809167ffffffffffffffff811161210457020190565b61210c611bee565b020190565b9061211e611cb1836120ec565b918252565b369037565b9061068561213e61213884612111565b936120ec565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401612123565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612197570190565b6106a8611f34565b91908203918211611f8257565b91908201809211611f8257565b90602080916121c6845190565b8110156121d4575b02010190565b6121dc611211565b6121ce565b906121f0611e3c6106bb845490565b9060005b8181106122015750505090565b90919261221e611e8c60019261221687611284565b815260200190565b9291016121f4565b90610656916121e1565b90610685611ebf9261224160405190565b93848092612226565b61065690612230565b61225d601b611284565b60009061226c611fc083610d16565b148015612333575b156122845750610656601561224a565b61229e61229861229360105490565b612128565b91610d16565b6015906122ac610656835490565b81101561232e576123246123176122c96120758461232996611ed9565b6123116123076122f66122ed6122dd612350565b6122e76005611284565b9061219f565b61207b88611fdb565b61207b670de0b6b3a7640000610d16565b612092601c611284565b906121ac565b61232183866121b9565b52565b612169565b61229e565b505090565b5061233e601c611284565b61234a611fc083610d16565b14612274565b6106564261235e6004611284565b8082101561236a575090565b905090565b90610a6190610d16565b90612382612253565b916010612390612293825490565b918294601e6123a76123a28483610a57565b611284565b6000906123b6611fc083610d16565b116123c4575b505050505050565b6123d5909792949691939597610d16565b6123e0610656885490565b81101561245e57610656612456826123248b612321836124508d6123116123a28f9b8f6124486120816123e09f61207b61243161242d876124276123a28d6124439a610a57565b946121b9565b5190565b6122e76123a2886124438d6016610a57565b61236f565b946017610a57565b926121b9565b9150506123d5565b50945094505050503880808080806123bc565b601361247e612293825490565b91829061248b6000610d16565b612496610656855490565b8110156124d0576106566124c8826123246124be6124b661249696611fdb565b61207b610d23565b612321838b6121b9565b91505061248b565b5091509150565b610656601b611284565b6123a2610656916124f0600090565b50601d610a57565b610656601c611284565b6123a261065691612511600090565b50601e610a57565b6106569061235e61253861252d6006611284565b9261207b6006611284565b6120926007611284565b610656670de0b6b3a7640000610d16565b61257b61065691612562600090565b5061207b6123a26125736003611284565b92601d610a57565b612092612542565b61257b61065691612592600090565b5061207b6123a26125a36003611284565b92601f610a57565b61265761262b6020610656936125bf600090565b506125e97f0000000000000000000000000000000000000000000000000000000000000000610946565b6126076370a082316125fa60405190565b9586948593849360e01b90565b835273ffffffffffffffffffffffffffffffffffffffff1660048301526024820190565b03915afa90811561268c575b60009161266e575b5061265261264b612542565b8092611f64565b611f64565b612092612664600b611284565b61207b6003611284565b612686915060203d81116120c9576120b98183611c1e565b3861263f565b612694611f27565b612637565b61257b6126b1610656926126ab600090565b50612553565b61207b600b611284565b61257b6126b1610656926126cd600090565b50612583565b61065690610a78565b61065690546126d3565b6126f96126f482600d610a57565b6126dc565b156127015790565b611de5610656916020610a57565b60009061283860009161272183610d16565b5061272b816126e6565b9061273861063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff8316149182156129645761279d60206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b6370a082319061279460405190565b93849260e01b90565b825273ffffffffffffffffffffffffffffffffffffffff8616600483015260249082905afa908115612957575b600091612939575b50925b6127f56127eb6127e5600a611284565b86611f64565b61207b6009611284565b60206128207f0000000000000000000000000000000000000000000000000000000000000000610946565b6318160ddd9061282f60405190565b98899260e01b90565b825260049082905afa95861561292c575b600096612908575b5061286890612092612861612542565b8098611f64565b9650156128f8575061287990612699565b925b61288481610d16565b8411156128e657506128a56128af936128a0846128a094611f64565b611fba565b61207b600a611284565b808211156128de5750905b816128cb611fc0610656600a611284565b116128d257565b9050610656600a611284565b9050906128ba565b9150506128f39150610d16565b6128af565b61290291506126bb565b9261287b565b6128689196506129259060203d81116120c9576120b98183611c1e565b9590612851565b612934611f27565b612849565b612951915060203d81116120c9576120b98183611c1e565b386127d2565b61295f611f27565b6127ca565b61299260206127857f0000000000000000000000000000000000000000000000000000000000000000610946565b825273ffffffffffffffffffffffffffffffffffffffff8516600483015260249082905afa9081156129ec575b6000916129ce575b50926127d5565b6129e6915060203d81116120c9576120b98183611c1e565b386129c7565b6129f4611f27565b6129bf565b15612a0057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642070726f7879000000000000000000000000000000000000006044820152606490fd5b0390fd5b9060ff905b9181191691161790565b90612a82610656612a8992151590565b8254612a63565b9055565b9073ffffffffffffffffffffffffffffffffffffffff90612a68565b90612ab9610656612a8992610946565b8254612a8d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90612a68565b90612af8610656612a8992610d16565b8254612ac0565b33612b16612b116126f483600d610a57565b6129f9565b612b46600e612b4184610a9e85612b3b612b376126f485610a9e858a610a57565b1590565b94610a57565b612a72565b602091612b56611de58285610a57565b612b7573ffffffffffffffffffffffffffffffffffffffff8416611e04565b14612b7f57505050565b612bb36125a36123a283612bac61068597612ba7612bc297612ba16000611ef4565b92610a57565b612aa9565b601d610a57565b91612bbd83611284565b61219f565b90612ae8565b15612bcf57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f787920686173206e6f7420616c6c6f77656420796f75207965740000006044820152606490fd5b61068590612c43612b116126f483600d610a57565b612bc2612cb76125a36123a2612c5a85600e610a57565b612c70612c6b6126f4338094610a57565b612bc8565b612bac86612ba7836020612c87611de58383610a57565b612c9461063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612cc6575b50610a57565b91612cc183611284565b6121ac565b612cde90612bc2612bb36125a36123a287601d610a57565b38612cb1565b90612da1575b612cf761063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603612d165750565b80612d23612d3f926149e2565b919390612d2f84612dae565b612d3a84600c610a57565b612ae8565b828110612d7b57612d7383612d5a61068595612d3a9461219f565b90612cc1612d6c83612cc1601c611284565b601c612ae8565b91601e610a57565b612d7383612d8f612d3a936106859661219f565b90612bbd612d6c83612bbd601c611284565b612da9613426565b612cea565b6000612dbc61063d82611ef4565b73ffffffffffffffffffffffffffffffffffffffff831603612ddc575050565b9091612de783612379565b90612df183610d16565b612dfc610656845190565b811015612e2b5780612324612e1761242d612e2694876121b9565b612d3a836124438a6017610a57565b612df1565b509091612e3790610d16565b612e42610656845190565b811015612e7b57610656612e7382612324612e64612075612e42966015611ed9565b612d3a836124438b6016610a57565b915050612e37565b50915050565b6106566002610d16565b15612e9257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6106566001610d16565b612f2c90612f27612f0c6002611284565b612f20612f17612e81565b91821415612e8b565b6002612ae8565b612fb3565b610685612f20612ef1565b6106569060101c610a78565b6106569054612f37565b15612f5457565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5265776172647320636f6c6c656374696f6e20706175736564000000000000006044820152606490fd5b61068590612fd6612fc46021612f43565b612fd060005b91151590565b14612f4d565b50565b61068590612efb565b90612ff991612ff4612f0c6002611284565b613005565b90610685612f20612ef1565b506106569060019033613206565b610656906060612fe2565b90612ff99291613031612f0c6002611284565b50610656919033613206565b6106569190606061301e565b9061065693929161305b600183612ce4565b6130b0565b908152606081019392610685929091604091613094905b73ffffffffffffffffffffffffffffffffffffffff166020830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b506130c042612d3a836018610a57565b6130ca6021612f43565b6000906130da90612fd083612fca565b6010906130e8612293835490565b9586906130f483610d16565b6130ff610656865490565b8110156131ec5761316290858a89838a6131436017612d3a8461244361313b8f6131368b612321866124506123a282898f8e610a57565b610d16565b958694610a57565b61315361065661242d84876121b9565b11613167575b50505050612169565b6130f4565b61242d81612427611fe961317e9461318498611ed9565b916143ad565b61319161242d828c6121b9565b61319e611fe98389611ed9565b7f1d2f2ca53af5d2f333bd32fdd45f9c52ad8ebe31414f7792912077fcb3876dff906131c98a610946565b926131e08c6131d760405190565b93849384613060565b0390a2858a8983613159565b509592509550509190916131fe575050565b610685915050565b6106569291906060613049565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916106859160200152565b91906008612a689102916132707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190613286610656612a8993610d16565b90835461323d565b60009061329a82610d16565b6011906132a8610656835490565b811015613420576132bf611fe9826132ee94611ed9565b6132cb61063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036132f3575b50612169565b61329a565b838415613404575b156132e85761338460206133146120306133a994610946565b613375636472eee18361334261332930610946565b9261334d4261333760405190565b958694859460e01b90565b845260048401613213565b03818d875af19081156133f7575b6000916133da575b5061336f876019611ed9565b90613275565b63513872bd9061279460405190565b825260049082905afa9081156133cd575b6000916133af575b5061336f83601a611ed9565b386132e8565b6133c7915060203d81116120c9576120b98183611c1e565b3861339d565b6133d5611f27565b613395565b6133f19150843d81116120c9576120b98183611c1e565b38613363565b6133ff611f27565b61335b565b504261341a611fc061065661207586601a611ed9565b116132fb565b50505050565b613430600061328e565b61344261343b61445a565b6003612ae8565b42613453611fc06106566004611284565b10613460576106856135bb565b610685613801565b91906106569060408482031261348c575b6134838185611efd565b93602001611efd565b613494600080fd5b613479565b6106a49073ffffffffffffffffffffffffffffffffffffffff1660601b90565b906106a86135126014937f4e6f7420656e6f7567682072657761726420746f6b656e7320617661696c616281527f6c653a2000000000000000000000000000000000000000000000000000000000602082015260240190565b8092613499565b60005b83811061352c5750506000910152565b818101518382015260200161351c565b61355d611bc66020936106a893613551815190565b80835293849260200190565b95869101613519565b60208082526106569291019061353c565b1561357f5750565b612a5f9061358c60405190565b9182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301613566565b60006135c681610d16565b6012906135d4610656835490565b8110156136a3576135eb611fe98261361994611ed9565b6135f761063d85611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361361e5750612169565b6135c6565b604061362f61203061365993610946565b63092193ab906126078761364230610946565b9361364c60405190565b9687958694859360e01b90565b03925af18015613696575b156132e8576136899060403d811161368f575b6136818183611c1e565b810190613468565b506132e8565b503d613677565b61369e611f27565b613664565b50506136b3426122e76004611284565b906136c96122986136c2610d23565b8094611fba565b60106136d6610656825490565b8210156137c257906123248261379261376a611fe98561379897613762611fc061374b602061372f8f8f611fe9896137296120309361207b61371e6120309761265286611fdb565b916123116001610d16565b99611ed9565b6370a082319061260761374130610946565b926125fa60405190565b03915afa9081156137b5575b60009161379d575090565b111594611ed9565b61065661377660405190565b80926137866020830191826134b9565b90810382520382611c1e565b90613577565b6136c9565b610656915060203d81116120c9576120b98183611c1e565b6137bd611f27565b613757565b50506137e7906123116137ee936126526137dc6004611284565b936123116001610d16565b6004612ae8565b6137f6613801565b61068561343b61445a565b613809612253565b6138136000610d16565b601590613821610656835490565b81101561384b576123246138469261336f8361384061242d82896121b9565b92611ed9565b613813565b505050610685613859612350565b6005612ae8565b1561386757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f74206f776e6572206f722074696d656c6f636b00000000000000000000006044820152606490fd5b906106859291613903336138dd61063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff821614908115613908575b50613860565b61399d565b9050613927738412ebf45bac1b340bbe8f318b928c466c4e39ca611e04565b14386138fd565b9063ff0000009060181b612a68565b9061394d610656612a8992151590565b825461392e565b9061ff009060081b612a68565b90613971610656612a8992151590565b8254613954565b9062ff00009060101b612a68565b90613996610656612a8992151590565b8254613978565b61068592916139b06139b792602161393d565b6021613961565b6021613986565b9061068592916138c6565b6139da336138dd61063d6000611d96565b6106856106856139ed612b3760216126dc565b6021612a72565b6106856139c9565b61068590613a11336138dd61063d6000611d96565b61068590612b41600d91612ba1612b376126f48386610a57565b610685906139fc565b15613a3b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f74206f776e6572206f7220746b6e206d67720000000000000000000000006044820152606490fd5b9061068591613ad83382613ab161063d6000611d96565b73ffffffffffffffffffffffffffffffffffffffff831614918215613add575b5050613a34565b613aee565b613ae79250611da0565b8238613ad1565b60009182613afb81610d16565b6010613b08610656825490565b821015613c2057611fe982613b1c92611ed9565b613b3b73ffffffffffffffffffffffffffffffffffffffff8616611e04565b14613b4e57613b4990612169565b613afb565b50909192506001905b8180613c00575b8215613bd6575b505015613b77576106859133906143ad565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f2076616c696420746f6b656e7320746f207265636f7665720000000000006044820152606490fd5b15915081613be7575b503880613b65565b9050613bf9611e0461063d3393611d96565b1438613bdf565b9150613c10611de585600f610a57565b613c1933611e04565b1491613b5e565b505092909192613b57565b9061068591613a9a565b61068590613c4a336138dd61063d6000611d96565b613d9b565b906020906006811015613c6157020190565b61210c611211565b15613c7057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d757374206265203e3d204d554c2050524543000000000000000000000000006044820152606490fd5b15613cd657565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203000000000000000000000000000000000000000006044820152606490fd5b15613d3c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d757374206265203e3d203100000000000000000000000000000000000000006044820152606490fd5b613ec361242d61068592613eb9613eb261242d613eac613e0f613e78613e7161242d613e6b6000613df0613ddb61242d8d613dd585610d16565b90613c4f565b613de9611fc0610656612542565b1015613c69565b613136613e6461242d8d613dd5600195613e1561242d613e0f89610d16565b85613c4f565b613e21611fc083610d16565b101580613f22575b80613ef9575b613e3890613ccf565b613e4761242d60049d8e610d16565b613e53611fc089610d16565b101580613eca575b61313690613d35565b6006612ae8565b89613c4f565b600a612ae8565b613e92613e8b61242d613e6b6002610d16565b600b612ae8565b613136613ea561242d613e6b6003610d16565b6009612ae8565b84613c4f565b6007612ae8565b613dd56005610d16565b6008612ae8565b50613136613ee461242d613ede6005610d16565b86613c4f565b613ef0611fc08a610d16565b10159050613e5b565b50613e38613f0d61242d613ede6003610d16565b613f19611fc084610d16565b10159050613e2f565b50613f3361242d613e0f6002610d16565b613f3f611fc083610d16565b1015613e29565b61068590613c35565b90610685939291613f683382613ab161063d6000611d96565b613fad565b91906008612a6891029161327073ffffffffffffffffffffffffffffffffffffffff841b90565b9190613fa5610656612a8993610946565b908354613f6d565b90613fd96123a2613ff193613ff76106859796613fdf60139661336f601498613fd96123a2888c610a57565b90611ed9565b613ff16011613fd96123a2868a610a57565b90613f94565b601293610a57565b90610685939291613f4f565b90610685916140223382613ab161063d6000611d96565b90612ba761068592600f610a57565b906106859161400b565b1561404257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201527f6f726d207468697320616374696f6e00000000000000000000000000000000006064820152608490fd5b610685906140e5336140df611e0461063d6000611d96565b1461403b565b6140f0816001612aa9565b61411e7f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2291610c9160405190565b0390a1565b610685906140c7565b1561413357565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527f2063616e20616363657074206f776e65727368697000000000000000000000006064820152608490fd5b73ffffffffffffffffffffffffffffffffffffffff909116815260408101929161068591602090613094565b6141fe336141f8611e0461063d6001611d96565b1461412c565b6142086000611d96565b6142126001611d96565b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9161424961424060405190565b928392836141b8565b0390a16142606142596001611d96565b6000612aa9565b61068561426d6000611ef4565b6001612aa9565b6142876142816106569290565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6106a860209167ffffffffffffffff81116142e957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b611bc6611bee565b9061211e611cb1836142ac565b3d156143185761430d3d6142f1565b903d6000602084013e565b606090565b9050519061068582610efc565b90610656916020818303121561431d57614342600080fd5b61431d565b1561434e57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606490fd5b6000919060046143f584936143e6610685976143cc63a9059cbb614274565b926143d660405190565b9586946020860190815201613213565b60208201810382520382611c1e565b82602082019151925af16144076142fe565b81614413575b50614347565b905061441d815190565b61442a611fc06000610d16565b1490811561443a575b503861440d565b61445491506020614449825190565b81830101910161432a565b38614433565b6106566145236145046144d36144b3602061448b612030735e8422345238f34275888049021821e8e08caa1f610946565b6370a082319061260773a1f8a6807c402e4a15ef4eba36528a3fed24e577926125fa60405190565b03915afa90811561457c575b60009161455e575b5061207b613136614668565b60206144f561203073f43211935c781d5ca1a41d2041f397b8a7366c7a610946565b6318160ddd9061204460405190565b825260049082905afa918215614551575b600092614531575b50611fba565b61207b6402540be400610d16565b61454a91925060203d81116120c9576120b98183611c1e565b903861451d565b614559611f27565b614515565b614576915060203d81116120c9576120b98183611c1e565b386144c7565b614584611f27565b6144bf565b69ffffffffffffffffffff8116610671565b9050519061068582614589565b919060a0838203126145f5575b6145bf818461459b565b926145cd8260208301611efd565b926106566145de8460408501611efd565b936145ec8160608601611efd565b9360800161459b565b6145fd600080fd5b6145b5565b1561460957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636861696e6c696e6b2070726963650000000000000000006044820152606490fd5b61468960a061467a6120306025611d96565b63feaf968c9061279460405190565b825260049082905afa801561473d575b600090819081908190614706575b6106569394506000926146b984610d16565b86121593846146ec575b5050826146d2575b5050614602565b69ffffffffffffffffffff908116925016101538806146cb565b6146fc91929450611fc090610d16565b14159138806146c3565b5050505061472d6106569160a03d8111614736575b6147258183611c1e565b8101906145a8565b915091926146a7565b503d61471b565b614745611f27565b614699565b6106859061475f336138dd61063d6000611d96565b6147ca565b1561476b57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5a65726f206164647265737320646574656374656400000000000000000000006044820152606490fd5b6147ff610685916120306147e161063d6000611ef4565b73ffffffffffffffffffffffffffffffffffffffff83161415614764565b6025612aa9565b6106859061474a565b61065660a0611c6b565b90610685614883600461482a61480f565b9461483b61483782611284565b8752565b61485161484a60018301611284565b6020880152565b61486761486060028301611284565b6040880152565b61487d61487660038301611284565b6060880152565b01611284565b6080840152565b61065690614819565b91906148b46148ae6000926148a9866022610a57565b611241565b5061488a565b9260186148c46123a28383610a57565b60208601906148d7611fc0610656845190565b10156149ce5751915b60608601916148ed835190565b429590861061499a5750614904916123a291610a57565b614912611fc0610656845190565b1015614985576120926149386080946122e761493361496996612bbd875190565b945190565b6149636149558461265261081161494f6002610d16565b83611fba565b612311836126526000610d16565b926121ac565b925b01614977610656825190565b83116149805750565b519150565b50505060806149946000610d16565b9261496b565b6149c49250610811939150608095612bbd6149bf614994976123119450612bbd865190565b935190565b6120926002610d16565b506149dc6123a28383610a57565b916148e0565b601e916000916149f56123a28286610a57565b91614a40614a028361270f565b809550614a136123a285601d610a57565b9684600098614a24611fc08b610d16565b149182614af2575b50508015614ad8575b15614abd5795610d16565b92835b6022614a59610656614a558784610a57565b5490565b861015614ab457614aae916123118661231161257b614aa28d614a9c6040614a968f614a906148ae826148a9614aa89f8d90610a57565b98614893565b96015190565b946121ac565b83611f64565b94612169565b93614a43565b50935094509050565b6149c4614ad2916123116123a287600c610a57565b95610d16565b50614aea6106566123a286600c610a57565b811015614a35565b614b019250906123a291610a57565b614b0d611fc089610d16565b148438614a2c565b90614b1e825490565b614b2781612111565b92614b3b6020850191600052602060002090565b6000915b838310614b4c5750505050565b60056020600192614b5c8561488a565b815201920192019190614b3f565b61065690614b15565b614b8a61065691614b82606090565b506022610a57565b614b6a565b614a5561065691614b82600090565b61236a9190614da3565b614bb061480f565b906000825260208080808086016000815201600081520160008152016000905250565b610656614ba8565b614be5600d6142f1565b7f67657474696e67207374616b6500000000000000000000000000000000000000602082015290565b610656614bdb565b614c2060076142f1565b7f6c6f6f70696e6700000000000000000000000000000000000000000000000000602082015290565b610656614c16565b614c5b600c6142f1565b7f666f756e64206b656b5f69640000000000000000000000000000000000000000602082015290565b610656614c51565b614c9660176142f1565b7f5468652077696e6e696e67206e756d626572206973213a000000000000000000602082015290565b610656614c8c565b614cd1600e6142f1565b7f6265666f72652052657175697265000000000000000000000000000000000000602082015290565b610656614cc7565b15614d0957565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5374616b65724e6f74466f756e643a28000000000000000000000000000000006044820152606490fd5b614d72600e6142f1565b7f7265717569726520706173736564000000000000000000000000000000000000602082015290565b610656614d68565b9091614dad614bd3565b91600080614dc283614dbd614c0e565b615018565b614dcb86614ec7565b6022614ddd610656614a558684610a57565b821015614eb957614df582614df0614c49565b614f98565b614e126106566000614e0b856148a98987610a57565b5001611284565b8714614e275750614e2290612169565b614dcb565b819550614e6b9250906148a9614eae946148ae93614e4784614df0614c84565b614e62614e5d6000614e0b876148a98787610a57565b614ec7565b610a9e8a614ec7565b93614e8384614e7b614e5d885190565b614df0614cbf565b614e93614e8e614cfa565b614f31565b614ea8611fc0611f6b8761242d614e5d825190565b14614d02565b610685614e8e614d9b565b50509293614eae9150614e83565b6143e6614f1061068592614eda60405190565b9283916004602084017f27b7cf850000000000000000000000000000000000000000000000000000000081520190815260200190565b60008091614f1c815190565b906020016a636f6e736f6c652e6c6f675afa50565b6143e6614f1061068592614f4460405190565b9283916004602084017f41304fac00000000000000000000000000000000000000000000000000000000815201613566565b92916020614f93610685936040870190878203600089015261353c565b940152565b90614f10610685926143e6614fac60405190565b9384926004602085017fb60e72cc00000000000000000000000000000000000000000000000000000000815201614f76565b92916020614ffb610685936040870190878203600089015261353c565b94019073ffffffffffffffffffffffffffffffffffffffff169052565b90614f10610685926143e661502c60405190565b9384926004602085017f319af33300000000000000000000000000000000000000000000000000000000815201614fde565b90612f2c91615070612f0c6002611284565b6106859190615080600133612ce4565b61514e565b6106569060281c61063d565b6106569054615085565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b90612af8610656612a899290565b6106859190612bc2906080906004906150fa816150f4875190565b906150cb565b61510c60018201612bc2602088015190565b61511e60028201612bc2604088015190565b61513060038201612bc2606088015190565b0192015190565b6106859291156150d95761514961509b565b6150d9565b90339061515b8383614da3565b61516a83612cc1604085015190565b9060009161517783610d16565b8511156152d65761521461521a9261520989615202615286986151fb89976151b78d8f6151a76120306021615091565b906151b130610946565b916153c8565b6151f46151c5602085015190565b6151ed6151de60806151d8606089015190565b97015190565b976151e761480f565b9c8d0152565b60208b0152565b6040890152565b6060870152565b6080850152565b6148a9886022610a57565b90615137565b61523261522b84612cc1601b611284565b601b612ae8565b61524d61524085601d610a57565b612bc285612cc183611284565b615256846126e6565b61526261063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff8216036152c2575b5083612ce4565b6152b07f2640b32e7e5d0fa2a21ea06b22fbd75fda0fda384a895a5fdeef43646de47a0c92610946565b926152bd610e1460405190565b0390a2565b6152406152d091601f610a57565b3861527f565b6040517f063921df000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161505e565b73ffffffffffffffffffffffffffffffffffffffff9091168152606081019392610685929091604091610de590613077565b1561534457565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160448201527f494c4544000000000000000000000000000000000000000000000000000000006064820152608490fd5b6004615401600094936143e66106859787966153e76323b872dd614274565b936153f160405190565b968795602087019081520161530b565b82602082019151925af16154136142fe565b8161541f575b5061533d565b9050615429815190565b615436611fc06000610d16565b14908115615446575b5038615419565b61545591506020614449825190565b3861543f565b90612f2c9161546d612f0c6002611284565b610685919061547d600133612ce4565b6154af565b610de5610685946154a86060949897956154a1608086019a6000870152565b6020850152565b6040830152565b33906154bb8183614da3565b4294919291858111156156645760608401866154d5825190565b6000908210156156525750612bbd6154eb925190565b935b6154fe6154fa888461219f565b9590565b851115615627576155126106566008611284565b85106155fc576155256106566007611284565b85116155d157866152146152bd9461557e615544604061558996015190565b6155736155508b612519565b9161556c61555c61480f565b976155658d8a52565b6020890152565b6040870152565b615202876060870152565b6148a9896022610a57565b615594600086612ce4565b6155be7fc2cf1aae6decacbc52f96b4e4fec96d4ebab5236e4ed987165537bc463014a4395610946565b956155c860405190565b94859485615482565b6040517f42d144ad000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fda0f0f2a000000000000000000000000000000000000000000000000000000008152600490fd5b6040517fbdddfeec000000000000000000000000000000000000000000000000000000008152600490fd5b905061565e9150610d16565b936154ed565b6040517fa51620a7000000000000000000000000000000000000000000000000000000008152600490fd5b906106859161545b565b90612ff992916156ac612f0c6002611284565b50610656914291338061587b565b61065691906000615699565b9061065695949392916156da600183612ce4565b615714565b6106569060181c610a78565b61065690546156df565b613094610685946154a86060949897956154a1608086019a6000870152565b50919390929061572460216156eb565b615850576157356106566008611284565b82106155fc576157486106566007611284565b82116155d1576157899061576d866157636120306021615091565b876151b130610946565b61577683612519565b908661578285836121ac565b9186616f86565b9361579b61522b82612cc1601b611284565b6157b66157a984601d610a57565b612bc283612cc183611284565b6157f56157c2846126e6565b6000906157d161063d83611ef4565b73ffffffffffffffffffffffffffffffffffffffff82160361583c575b5084612ce4565b6158366158227ff400e72e69ef4402819dfc57eeddc66f5eb69bf405e0e8098b1946ec1ac14a2294610946565b948661582d60405190565b948594856156f5565b0390a290565b61524061584a91601f610a57565b386157ee565b6040517f26d1807b000000000000000000000000000000000000000000000000000000008152600490fd5b610656949392919060006156c6565b90612ff9929161589d612f0c6002611284565b6158b8565b6106569060081c610a78565b61065690546158a2565b506158c360216158ae565b6158cd6001612fca565b146158dc5761065691336159ac565b6040517f6022a9e7000000000000000000000000000000000000000000000000000000008152600490fd5b6106569190600061588a565b9190613286610656612a899390565b61068591600091615913565b61068591600091613275565b600060046106859261594e83808301615922565b61595b836001830161592e565b615968836002830161592e565b615975836003830161592e565b0161592e565b610685911561593a5761598c61509b565b61593a565b908152606081019392610685929091604091613094906114c7565b600192916159bb848284613206565b506159c68383614da3565b94426159d9611fc0610656606086015190565b1015908115615b2b575b50615b0057604001519360006159f881610d16565b8611615a07575b505050505090565b615a98615a92615a9e93615a288987615a236120306021615091565b6143ad565b615a3961522b8a612bbd601b611284565b615a54615a4788601d610a57565b612bc28b612bbd83611284565b615a5d876126e6565b615a6961063d86611ef4565b73ffffffffffffffffffffffffffffffffffffffff821603615aec575b506148a9876022610a57565b9061597b565b83612ce4565b615ac87f1d9308f6b22a2754a1c622bb30889e8f8f956c83e524d039e9d65d5f052eb90892610946565b92615adf615ad560405190565b9283928784615991565b0390a238808080806159ff565b615a47615afa91601f610a57565b38615a86565b6040517f372a7fe5000000000000000000000000000000000000000000000000000000008152600490fd5b9050615b43612fca615b3d60216126dc565b92151590565b14386159e3565b33615b6284612d3a84610a9e876113f2876026610a57565b615ba9615b9f615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94610946565b9490565b9461081a60405190565b0390a4565b6106a490610d16565b6020810192916106859190615bae565b90600091615bd483610d16565b615bed602691612d3a84610a9e876113f2338098610a57565b615ba9615c20615b9b615b957fa1376f00ce38a02643af0ff97dce59c2c81b4c8ad34c717ce9a44ed623e0718d94610946565b94615c2a60405190565b91829182615bb7565b33615c4783612b4184610a9e856027610a57565b615c87615c7d615c777f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610946565b93610946565b936107c060405190565b0390a3565b615c97816027610a57565b90615ca66126f4338094610a57565b15615cb45750505050600190565b6123a2611fc092610a9e615cd0956113f2611f6b956026610a57565b10615cda57600190565b600090565b90615cfb969594939291615cf6612f0c6002611284565b615d08565b9091610685612f20612ef1565b969594939291965050615d1f612b37848489615c8c565b615d3c5785615d338484615d389899615d89565b616c5b565b9091565b5033612a5f615d4a60405190565b9283927f01aca06d00000000000000000000000000000000000000000000000000000000845260048401613213565b615d389493929190600080615cdf565b90602691615d9b826113f28386610a57565b93615daa6123a2338097610a57565b819003615dd1575092610a9e612d3a926113f261068596615dcb6000610d16565b96610a57565b929093615de96123a282610a9e866113f28a88610a57565b841015615e0757610a9e612bc2936113f261068597612bb395610a57565b6040517f13be252b000000000000000000000000000000000000000000000000000000008152600490fd5b90615cfb9594939291615e48612f0c6002611284565b50615d3894939291905033616c5b565b615d3893929190600080615e32565b90615d38969594939291615e7c600184612ce4565b90615d38969594939291615e91600185612ce4565b61658e565b7fffffffff000000000000000000000000000000000000000000000000000000008116610671565b9050519061068582615e96565b906106569160208183031215615ebe57615ee3600080fd5b615ebe565b73ffffffffffffffffffffffffffffffffffffffff9091168152610656926080820192615f3291906154a8905b73ffffffffffffffffffffffffffffffffffffffff166020850152565b60608183039101526000815260200190565b1561063857565b615f5560166142f1565b7f494e56414c4944205245434549564552204552524f5200000000000000000000602082015290565b610656615f4b565b615f9060126142f1565b7f494e56414c49442054494d45204552524f520000000000000000000000000000602082015290565b610656615f86565b615fcb60146142f1565b7f494e56414c494420414d4f554e54204552524f52000000000000000000000000602082015290565b610656615fc1565b616006601a6142f1565b7f5374616b657220616464726573732070726f787920434845434b000000000000602082015290565b610656615ffc565b61604160116142f1565b7f4265666f7265206163636f756e74696e67000000000000000000000000000000602082015290565b610656616037565b61607c60066142f1565b7f4445445543540000000000000000000000000000000000000000000000000000602082015290565b610656616072565b6160b760106142f1565b7f4166746572206163636f756e74696e6700000000000000000000000000000000602082015290565b6106566160ad565b6160f260066142f1565b7f44454c4554450000000000000000000000000000000000000000000000000000602082015290565b6106566160e8565b61612d600f6142f1565b7f555044415445204558495354494e470000000000000000000000000000000000602082015290565b610656616123565b616168601c6142f1565b7f41667465725570646174654578697374696e67446573745374616b6500000000602082015290565b61065661615e565b6161a360226142f1565b7f4265666f726555706461746552656365697665725374616b654c69717569646960208201527f7479000000000000000000000000000000000000000000000000000000000000604082015290565b610656616199565b61620460216142f1565b7f416674657255706461746552656365697665725374616b654c6971756964697460208201527f7900000000000000000000000000000000000000000000000000000000000000604082015290565b6106566161fa565b61626560226142f1565b7f4265666f726555706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b61065661625b565b6162c660106142f1565b7f455854454e442054494d455354414d5000000000000000000000000000000000602082015290565b6106566162bc565b61630160226142f1565b7f57697468696e55706461746552656365697665725374616b6554696d6573746160208201527f6d70000000000000000000000000000000000000000000000000000000000000604082015290565b6106566162f7565b61636260216142f1565b7f416674657255706461746552656365697665725374616b6554696d657374616d60208201527f7000000000000000000000000000000000000000000000000000000000000000604082015290565b610656616358565b6163c3600a6142f1565b7f435245415445204e455700000000000000000000000000000000000000000000602082015290565b6106566163b9565b6163fe60156142f1565b7f6265666f726520637265617465206e6577206b656b0000000000000000000000602082015290565b6106566163f4565b61643960146142f1565b7f616674657220637265617465206e6577206b656b000000000000000000000000602082015290565b61065661642f565b616474601b6142f1565b7f555044415445205245574152445320414e442042414c414e4345530000000000602082015290565b61065661646a565b6164af60106142f1565b7f73656e6465722c20726563656976657200000000000000000000000000000000602082015290565b6106566164a5565b6164ea60136142f1565b7f43414c4c204f4e4c4f434b524543454956454400000000000000000000000000602082015290565b6106566164e0565b61065660006142f1565b61065661651b565b61653760236142f1565b7f56657279206e6963652c2049206c696b652c206772656174207375636365737360208201527f2121210000000000000000000000000000000000000000000000000000000000604082015290565b61065661652d565b5093959492935090916000823b6165a7611fc083610d16565b11616b7e575b6165b78584614da3565b9290916165c381611ef4565b9373ffffffffffffffffffffffffffffffffffffffff851673ffffffffffffffffffffffffffffffffffffffff8816148015616b49575b616b1057606084019461660e610656875190565b4210158015616af5575b616ad057604085019061662c610656835190565b8c118015616abe575b616a7e57918b6166fb9492610656946166aa611e04611dea8e8e61667661666983601d610a9e8c612bc2612bb38885610a57565b612bc28a612cc183611284565b61667f816126e6565b61669e73ffffffffffffffffffffffffffffffffffffffff8816611e04565b03616a45575b506126e6565b03616a1c575b6166c9826166bc835190565b6166c461606a565b616d01565b896166d5610656835190565b83036169df57505050615a92613136916166f0614e8e61611b565b6148a98a6022610a57565b810361680c579161674b9161672561680196959461671a614e8e6163ec565b614e5d614e8e616427565b88616744608061673e616739602086015190565b955190565b93015190565b9286616f86565b9561675b87614e5d614e8e616462565b616766614e8e61649d565b61677b60016167758185612ce4565b84612ce4565b7fd8413caab9b66d88aed167bb4f6b308542a6953a6a54e22f67c5271d34ef97be6167a583610946565b90866167b086610946565b936167be8b6114f260405190565b0390a36167d382826167ce6164d8565b616d88565b6167de614e8e616513565b6167f96167f46167ec616525565b888585617196565b615f44565b6167ce6164d8565b611fc0614e8e616586565b96905061694b616801949392616823614e8e616156565b61694261693d826168348c89614da3565b6168608160606168476040869796015190565b950194616852865190565b9061685b616191565b616dfc565b898360229261688361687b6002614e0b846148a9888a610a57565b614df06161f2565b6168a56002616896836148a98789610a57565b5001612bc28d612cc183611284565b6168c36168bb6002614e0b846148a9888a610a57565b614df0616253565b6168ea6168ce835190565b6168dc611fc0610656895190565b106168e56162b4565b616c91565b6169006168f5835190565b8651906166c46162b4565b8151616910611fc0610656885190565b10616950575b505161242d935091506169269050565b616934611fc0610656885190565b106168e56163b1565b915190565b906166c46163b1565b61675b565b6169b660049360036169af846148a96169a86169d59b61242d61699d6169af9b61697b614e8e6162ef565b61242d616986825190565b616994611fc0610656885190565b106168e5616350565b8251906166c4616350565b948a610a57565b5001612ae8565b6148a98d6169cf6108116169c88d5190565b429061219f565b95610a57565b8338898382616916565b9061242d6002616a05613136966148a9616a14966169fe614e8e6160a5565b6022610a57565b5001612bc285612bbd83611284565b6166c46160e0565b616a40616a33601f616a2d8e6126e6565b90610a57565b612bc284612cc183611284565b6166b0565b616a6b81616a60616a58616a78946126e6565b614dbd61602f565b616a2d601f916126e6565b612bc289612bbd83611284565b8e6166a4565b616a938c616a8a845190565b906166c4615ff4565b6040517f2c5211c6000000000000000000000000000000000000000000000000000000008152600490fd5b50616ac884610d16565b8c1115616635565b615b00616adb875190565b616ae560216126dc565b90616aee615fb9565b4290616e71565b50616b0060216126dc565b616b0a6001612fca565b14616618565b616b1d86886167ce615f7e565b6040515b7f1e4ec46b000000000000000000000000000000000000000000000000000000008152600490fd5b5073ffffffffffffffffffffffffffffffffffffffff861673ffffffffffffffffffffffffffffffffffffffff8816146165fa565b616c1b616ba16020616b9261203087610946565b634fb071059061279460405190565b8252818681616bb58d8d8d60048501615ee8565b03925af1908115616c4e575b600091616c20575b50616c157f4fb07105000000000000000000000000000000000000000000000000000000005b917fffffffff000000000000000000000000000000000000000000000000000000001690565b14615f44565b6165ad565b616c41915060203d8111616c47575b616c398183611c1e565b810190615ecb565b38616bc9565b503d616c2f565b616c56611f27565b616bc1565b615d389493929190600080615e67565b92916020616c88610685936040870190878203600089015261353c565b94019015159052565b90614f10610685926143e6616ca560405190565b9384926004602085017fc3b5563500000000000000000000000000000000000000000000000000000000815201616c6b565b604090610de5616cf9610685959796946060840190848203600086015261353c565b966020830152565b614f10906143e661068594616d1560405190565b9485936004602086017fca47c4eb00000000000000000000000000000000000000000000000000000000815201616cd7565b604090613094616d69610685959796946060840190848203600086015261353c565b73ffffffffffffffffffffffffffffffffffffffff9097166020830152565b614f10906143e661068594616d9c60405190565b9485936004602086017ffcec75e000000000000000000000000000000000000000000000000000000000815201616d47565b610de5610685946154a8616df4606095999896996080860190868203600088015261353c565b986020850152565b6143e661068594614f109394616e1160405190565b9586946004602087017fa7a8785300000000000000000000000000000000000000000000000000000000815201616dce565b616e69610685946154a8616df4606095999896996080860190868203600088015261353c565b019015159052565b6143e661068594614f109394616e8660405190565b9586946004602087017f7626db9200000000000000000000000000000000000000000000000000000000815201616e43565b616ec260106142f1565b7f435245415445204e4557204b454b494400000000000000000000000000000000602082015290565b610656616eb8565b92616f1060206106a894616f10601488616f10859b9a8699613499565b01918252565b906152146106859280549068010000000000000000821015616f3e575b600182018155611241565b616f46611bee565b616f33565b616f5560196142f1565b7f435245415445204e4557204b454b4944202d2050555348454400000000000000602082015290565b610656616f4b565b949361701f9061488361702495616f9b600090565b50616fa7614e8e616eeb565b617018613786616fd8616fbe6123a28d601d610a57565b8c616fc860405190565b9384928c8c602086019485616ef3565b616fea616fe3825190565b9160200190565b20966148606170006106568a9d6169fe8c614ec7565b9761701161700c61480f565b9a8b52565b60208a0152565b6060860152565b616f16565b610685614e8e616f7e565b61703960176142f1565b7f436865636b696e67206f6e4c6f636b5265636569766564000000000000000000602082015290565b61065661702f565b61707460146142f1565b7f726563656976657220686173206e6f20636f6465000000000000000000000000602082015290565b61065661706a565b6170af60116142f1565b7f72656365697665722068617320636f6465000000000000000000000000000000602082015290565b6106566170a5565b73ffffffffffffffffffffffffffffffffffffffff9091168152610656936080820193909261711391906154a890615f15565b606081840391015261353c565b61712a60066142f1565b7f747279696e670000000000000000000000000000000000000000000000000000602082015290565b610656617120565b61716560066142f1565b7f6661696c65640000000000000000000000000000000000000000000000000000602082015290565b61065661715b565b6000949391926171a984836167ce617062565b600093803b6171ba611fc087610d16565b11156172a557906020916171cf614e8e6170d8565b6171db61203082610946565b908663c42d8b959561720b6171ef60405190565b988996879586946172008c60e01b90565b8652600486016170e0565b03925af160009281617285575b5061726557505060016172285750565b6172306142fe565b9061723c614e8e61718e565b617250611fc061724a845190565b92610d16565b0361725d57604051616b21565b805190602001fd5b616bef91939450617281925061727c614e8e617153565b614274565b1490565b61729e91935060203d8111616c4757616c398183611c1e565b9138617218565b50505050509050611e28614e8e61709d56fea264697066735822122033f0c0ee2f26e34147dcd4e72972e31bbd283a52f611e204c5050349dbd89c2e64736f6c6343000811003360806040523461001b575b6040516102f161002982396102f190f35b610023600080fd5b61000a56fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80634fb07105146100405763c42d8b950361000e5761003b6101d0565b61000e565b5061003b61016b565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b73ffffffffffffffffffffffffffffffffffffffff81165b0361004957565b905035906100968261006a565b565b80610082565b9050359061009682610098565b909182601f830112156100ef575b602082359267ffffffffffffffff84116100e2575b0192828401116100da57565b610096600080fd5b6100ea600080fd5b6100ce565b6100f7600080fd5b6100b9565b60808183031261015e575b6101118282610089565b9261014d6101228460208501610089565b93610130816040860161009e565b9360608101359067ffffffffffffffff8211610151575b016100ab565b9091565b610159600080fd5b610147565b610166600080fd5b610107565b50346101c3575b6101bf61018c6101833660046100fc565b93929092610271565b604051918291827fffffffff00000000000000000000000000000000000000000000000000000000909116815260200190565b0390f35b6101cb600080fd5b610172565b50346101f1575b6101bf61018c6101e83660046100fc565b93929092610296565b6101f9600080fd5b6101d7565b61004e6100676100679273ffffffffffffffffffffffffffffffffffffffff1690565b610067906101fe565b61006790610221565b61024c6102466100679263ffffffff1690565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b505050505061027e600090565b506102883061022a565b50610067634fb07105610233565b50505050506102a3600090565b506102ad3061022a565b5061006763c42d8b9561023356fea264697066735822122091763e1f3bbb208ae2328f027cf9377ac3086068b163037aa0bb090c2d0a325c64736f6c63430008110033a2646970667358221220747397a22b398c40bd6e7bb2be2b004af92d16f3daf141e149c8cfb02c9ef2e164736f6c63430008110033",
    "sourceMap": "1101:15678:81:-:0;;;;;;;;;-1:-1:-1;1101:15678:81;;;;;-1:-1:-1;1101:15678:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;3558:77::-;;;;;:::i;1101:15678::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1101:15678:81;;;;;;;;2060:81;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;2147:83;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1269:28;;;;;:::i;1101:15678::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2570:82;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1623:74;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1431:69;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3357:27;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2676:87;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1533:84;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1966:88;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;3321:30;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1750:104;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1878:82;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1151:39;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1196:21;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3648:77;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1359:66;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3475:69;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3091:78;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3732:71;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1330:18;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2863:76;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3005:80;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3233:82;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;3390:78;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;:::i;1101:15678:81:-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;1304:20;;;;;:::i;1101:15678::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;1631:104:0:-;1671:64;1679:55;1687:46;1695:37;1703:28;1695:37;:::i;:::-;1687:46;:::i;:::-;1679:55;:::i;:::-;1671:64;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;1101:15678:81;;1671:64:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;1101:15678:81;;;;1671:64:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;1101:15678:81;:::o;1671:64:0:-;1101:15678:81;;;1671:64:0;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1101:15678:81;;;1671:64:0;;:::i;1819:584::-;1873:7;;;:::i;:::-;1869:528;;;1903:7;;;:::i;1869:528::-;1961:5;1941:25;1984:16;;:::i;:::-;1980:374;;2367:19;;:::o;1980:374::-;2047:12;;;;;:::i;:::-;1671:64;2221:17;2086:175;;1671:64;2196:43;;1101:15678:81;;;;2196:43:0;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1101:15678:81;;2086:175:0;;;;;;;;1671:64;;;;;;;;;1101:15678:81;;;2086:175:0;;;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2312:27;;;1671:64;;;2312:27;;;;;;;;:::i;2840:242::-;2928:1;2905:24;;;:::i;:::-;2939:104;3059:16;;2939:104;;3059:16;;:::i;:::-;;1101:15678:81;;3059:16:0;;2840:242;:::o;221:94:1:-;260:55;268:46;276:37;284:28;276:37;:::i;268:46::-;260:55;:::i;1222:40::-;1248:14;1251:10;;:::i;:::-;1248:14;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1101:15678:81;;;1248:14:1;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;1101:15678:81;;1248:14:1;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;1101:15678:81;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1671:64:0;;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;1101:15678:81;1248:14:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;1101:15678:81;;1248:14:1;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;1671:64:0;;;1248:14:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;1101:15678:81;;1248:14:1;;;;;;;;;;;;;;;;;;1671:64:0;;1248:14:1;;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;1101:15678:81:o;1248:14:1:-;;;:::i;4357:3530:81:-;4427:7;:2;;:::i;:7::-;;4419:83;4427:75;;4435:66;4427:75;1101:15678;;;;4427:75;;;;;;;1248:14:1;;;;4427:75:81;;;;;;;:::i;:::-;;;;;;;;;;;4357:3530;4427:75;;;;4357:3530;4419:83;;;:::i;:::-;4512:7;4520:5;;;:::i;:::-;4527:10;4512:26;;4527:10;4512:26;;;;;;;4357:3530;1101:15678;;4512:26;;;;;;;;1248:14:1;;;;4512:26:81;;;;;;;:::i;:::-;;;;;;;;;;;4357:3530;4512:26;;4357:3530;4598:8;4633:81;4598:8;4607:5;4598:24;;4607:5;;;:::i;:::-;4598:24;;;;;4357:3530;1101:15678;;4598:24;;;;;;1248:14:1;;;;4598:24:81;;;;;;;:::i;:::-;;;;;;;;;;;4357:3530;4598:24;;4357:3530;4647:66;4639:75;;4647:66;4639:75;;;1101:15678;;;;4639:75;;;;;;1248:14:1;;;;4639:75:81;;;;;;;;;;;4357:3530;4639:75;;;;4357:3530;4633:81;;;:::i;:::-;4724:24;;4732:3;;;;:::i;:::-;4724:24;;;;;1101:15678;;4724:24;1101:15678;4724:24;;;;;;;;;;;4357:3530;4724:24;;4357:3530;4767:3;4758:20;;4767:3;;;:::i;:::-;4758:20;;;;;;4357:3530;4758:20;;1101:15678;;;;4758:20;;;;;;;:::i;:::-;;;;;;;;;;;4357:3530;4758:20;;4357:3530;-1:-1:-1;4826:15:81;5427:155;4826:15;4871:35;4847:13;4855:4;4847:13;:::i;:::-;4826:35;;;;;;:::i;:::-;4871;:::i;:::-;4916:12;4979:24;4916:12;:24;;4934:5;4916:24;:::i;:::-;;;:::i;:::-;4979;4997:5;4979:24;:::i;:::-;;;:::i;:::-;5440:142;5043:19;:24;:46;:24;;1248:14:1;;5043:24:81;5076:11;;;:::i;:::-;5043:46;;:::i;:::-;5099:13;;5146:37;5099:13;:37;5126:8;;;:::i;:::-;5099:37;;:::i;:::-;5173:8;;;:::i;5146:37::-;5245:11;5237:32;5245:11;;;:::i;:::-;5237:32;;;;;4357:3530;5237:32;;;;;;1101:15678;;;;5237:32;;;;;;;;1248:14:1;;;;5237:32:81;;;;;;;;;4357:3530;5237:32;;4357:3530;5287:13;;5279:34;5287:13;;;:::i;:::-;5279:34;;;;;4357:3530;5279:34;;;;;;1101:15678;;;;5279:34;;;;;;;;;4357:3530;5279:34;;4357:3530;5323:34;;;;;;4357:3530;5323:34;;;;;;;;;1101:15678;;;;5323:34;;;;;;;;;4357:3530;5323:34;;4357:3530;5527:17;;5567:14;;;:::i;:::-;5440:142;;1101:15678;;;;5440:142;;;;;;;;;;;;;;;;;4357:3530;5440:142;;;;;:::i;:::-;;;;;;;;;4357:3530;5427:155;;:::i;:::-;5592:7;5608;5592:51;;5600:16;5608:7;;;:::i;5600:16::-;5618:24;:19;5626:10;;;:::i;5618:19::-;:24;:::i;:::-;5592:51;;;;;;4357:3530;1101:15678;;5592:51;;;;;;;1248:14:1;;;;5592:51:81;;;;;;;:::i;:::-;;;;;;;;;;;4357:3530;5592:51;;4357:3530;5689:7;5654:43;5689:7;;;:::i;5654:43::-;5709:78;5764:9;;;:::i;:::-;5756:30;5709:78;;:::i;:::-;;:::i;:::-;5797:76;5843:17;5851:8;;;:::i;5843:17::-;:29;5797:76;;:::i;:::-;5939:22;5950:11;1101:15678;;;;5950:11;;;;;;;;;;;;;;;4357:3530;5950:11;;;;1101:15678;;5950:11;;;;;;;;;4357:3530;5939:22;;:::i;:::-;5971:78;6019:17;6027:8;;;:::i;6019:17::-;:29;5971:78;;:::i;:::-;6059:89;:19;:8;;;:::i;:19::-;;;6102:7;6059:89;6102:7;6094:16;6102:7;;;:::i;6094:16::-;6112:14;6059:89;6112:14;;;:::i;:::-;6128:19;;;:::i;:::-;6059:89;;;;;;4357:3530;1101:15678;;6059:89;;;;;;;1248:14:1;;;;6059:89:81;;;;;;;:::i;:::-;;;;;;;;;4357:3530;6059:89;;4357:3530;6270:11;6254:53;;6262:20;6270:11;;;:::i;6262:20::-;6284:22;:17;6292:8;;;:::i;6284:22::-;6254:53;;;;;;4357:3530;1101:15678;;6254:53;;;;;;;1248:14:1;;;;6254:53:81;;;;;;;;;;;4357:3530;6254:53;;4357:3530;6333:13;6317:55;;6325:22;6333:13;;;:::i;6317:55::-;;;;;;;;;;;4357:3530;6317:55;;4357:3530;6398:9;6382:51;;6398:9;;;:::i;6382:51::-;;;;;;;;;;;4357:3530;6382:51;;4357:3530;6500:9;;;;:::i;:::-;6492:30;6444:79;;:::i;:::-;;;;;:::i;:::-;6588:8;;;:::i;:::-;6580:17;;;:::i;:::-;:29;6533:77;;:::i;:::-;;;;;:::i;:::-;6637:9;;;:::i;:::-;6631:16;;;:::i;:::-;6620:27;;;;:::i;:::-;6738:13;;;:::i;:::-;6805:2;6757:51;;1101:15678;;;;6757:51;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;6738:71;;;;;;;;;;;;;;;;:::i;:::-;6698:111;6820:38;;;:::i;:::-;1671:64:0;;6894:31:81;;;;;;;;;;;:::i;:::-;6888:38;;;:::i;:::-;6868:58;;;;:::i;:::-;6978:17;;;:::i;:::-;6970:26;;;:::i;:::-;6936:61;;:::i;:::-;;;;;:::i;:::-;7065:10;;;:::i;:::-;7057:19;;;:::i;:::-;:31;7008:81;;:::i;:::-;;;;;:::i;:::-;1101:15678;;7171:16;;;;;;;;;;;;;7670:38;7171:16;7261:40;;7676:31;7171:16;;;7158:29;7171:16;;7653:55;7171:16;;;;;7462:29;7171:16;;;4357:3530;7171:16;;;;1101:15678;;7171:16;;;;;;;;;4357:3530;7158:29;;:::i;:::-;7213:10;7197:54;7205:19;7213:10;;;:::i;7205:19::-;7234:10;7197:54;7226:24;:19;7234:10;;;:::i;7226:24::-;7197:54;;;;;4357:3530;1101:15678;;7197:54;;;;;;1248:14:1;;;;7197:54:81;;;;;;;;;;;4357:3530;7197:54;;4357:3530;7277:10;7261:40;7269:19;7277:10;;;:::i;7269:19::-;7261:40;;;;;;1101:15678;;7261:40;1101:15678;7261:40;;;;;;;;;;;4357:3530;7261:40;;4357:3530;7369:10;7311:82;7361:19;7369:10;;;:::i;7361:19::-;:31;7311:82;;:::i;:::-;7462:8;7479:10;7462:29;7479:10;7471:19;7479:10;;;:::i;7471:19::-;7462:29;;;;;;4357:3530;1101:15678;;7462:29;;;;;;;1248:14:1;;;;7462:29:81;;;;;;;:::i;:::-;;;;;;;;;4357:3530;7462:29;;4357:3530;7523:13;7542:51;;7523:13;;;:::i;:::-;7542:51;;1101:15678;;;;7542:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;7523:71;;;;;;;;;7605:38;7523:71;;:::i;:::-;7501:93;7605:38;:::i;:::-;7676:31;;;1671:64:0;;;7676:31:81;;;;;;;;:::i;7670:38::-;7653:55;;:::i;:::-;7718;7749:23;7757:14;;;:::i;7749:23::-;7718:55;;:::i;:::-;;:::i;:::-;7783:96;7843:22;;:20;:14;;;:::i;:20::-;;:22;;1101:15678;;;;7843:22;;;;1248:14:1;;;;7843:22:81;;;;;;;;;;;;;;4357:3530;7843:22;;;;4357:3530;7842:36;;7783:96;;:::i;7843:22::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;7462:29;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;1101:15678;;;7462:29;;;7261:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;7261:40;;;7197:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;7171:16;;;:::i;:::-;;;;;;:::i;:::-;;;6382:51;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;6382:51;;;6317:55;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;6254:53;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;6059:89;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;6059:89;;;5950:11;;;:::i;:::-;;;;;;:::i;:::-;;;5592:51;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;5592:51;;;5440:142;;;:::i;:::-;;;;;;:::i;:::-;;;5323:34;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;5323:34;;;5279;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;5279:34;;;5237:32;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;5237:32;;;4758:20;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;4758:20;;;4724:24;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;4724:24;;;4639:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4598:24;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;4598:24;;;4512:26;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4427:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1101:15678;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7056:145:14;;7139:54;;7056:145;7139:54;;1101:15678:81;;;;7139:54:14;;;;;;;;;;;;;:::i;:::-;852:159;641:376;;735:14;;1671:64:0;;;735:14:14;784:15;852:159;;591:42;852:159;;;641:376::o;1101:15678:81:-;;;;;;;;;;;;;;;;;;;:::i;7508:145:14:-;;7591:54;;7508:145;7591:54;;1101:15678:81;;;;7591:54:14;;;;;;;;;;;;;:::i;1101:15678:81:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1101:15678:81:o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;1248:14:1;1671:64:0;;;1101:15678:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;8372:5248::-;13555:14;9247:1;8412:18;;:::i;:::-;8509:83;8518:28;;:26;:11;;;:::i;:26::-;;:28;;1101:15678;;;;8518:28;;;;;;;;;;;;;;8372:5248;8518:28;;;;8372:5248;8556:7;8548:16;8556:7;;;:::i;8548:16::-;8509:83;;:::i;:::-;;;:::i;:::-;8654:2;13469:75;10678:8;8654:13;:2;;:::i;:13::-;;;8668:11;8654:26;8668:11;;;:::i;:::-;8654:26;;;;;;8372:5248;8654:26;;1101:15678;;;;8654:26;;;;;;;;;;;8372:5248;8654:26;;8372:5248;8722:12;10081:83;9637:50;8722:12;9410:70;9419:8;8722:12;;;:::i;:::-;8747:9;;8722:35;8747:9;8722:35;:::i;:::-;8758;;1101:15678;;;;8758:35;;;;;;;;;;;;1101:15678;8758:35;8722:72;;;;;;;;;;;;:::i;:::-;;8818:6;;;;;:::i;:::-;8830:58;;8876:11;;;:::i;:::-;1101:15678;;8830:58;;;;;;;;;;;;:::i;:::-;8818:71;;;;;;;;;;8910:31;8818:71;;:::i;:::-;8806:8;;;8804:85;;;1671:64:0;;8910:31:81;;;;;;;;;;:::i;:::-;8899:8;:42;:8;;;:42;;1101:15678;;8899:42;8951:60;8960:8;;1101:15678;;;8960:8;8951:60;;;:::i;:::-;;;:::i;:::-;9021:40;9052:8;;1101:15678;;;9052:8;9021:40;;:::i;:::-;9121:34;:26;9139:6;;;:::i;9121:34::-;:68;:34;9156:13;;;;:::i;:::-;9171:17;9121:68;9171:17;;9121:68;;;1101:15678;;;;9121:68;;;;;;;:::i;:::-;;;;;;;;;8372:5248;9121:68;;8372:5248;9209:13;9199:84;:38;:24;9209:13;;;:::i;9199:38::-;;;9238:33;;;;;:::i;:::-;9239:10;9238:33;9239:10;;;:::i;:::-;9238:33;;;1101:15678;;9238:33;;;;1101:15678;;9238:33;9199:84;9273:9;9199:84;;;;;1101:15678;;;;9199:84;;;;;;;:::i;:::-;;;;;;;;;8372:5248;9199:84;;8372:5248;9314:9;9293:54;9304:43;;:30;:20;9314:9;;;:::i;9304:30::-;;9335:11;9304:43;9335:11;;;:::i;:::-;9304:43;;1101:15678;;;;9304:43;;;;;;;;1248:14:1;;;;9304:43:81;;;;;;;;;;8372:5248;9304:43;;;;9293:54;;1101:15678;;9293:54;9357:43;9391:8;;1101:15678;;;9391:8;9357:43;;:::i;:::-;1101:15678;;;9419:8;9410:70;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;9637:50;:28;:7;;;:::i;:28::-;9666:20;9674:11;;;:::i;9666:20::-;9637:50;;1101:15678;;;;9637:50;;;;;;;;1248:14:1;9637:50:81;1248:14:1;9637:50:81;;;;;;;;;;8372:5248;9637:50;;;;8372:5248;9620:14;9788:71;9620:14;:67;:14;;;:67;;1101:15678;;9620:67;9697:47;9729:14;;1101:15678;;;9729:14;9697:47;;:::i;:::-;9802:57;:30;:11;;;:::i;:30::-;;;9845:12;9802:57;9845:12;;9802:57;;;1101:15678;;;;9802:57;;;;;;;:::i;:::-;;;;;;;;;;8372:5248;9802:57;;;;8372:5248;9788:11;;;;1101:15678;;9788:71;9869:23;;;:::i;:::-;;:::i;:::-;9922:11;;9788;;;1101:15678;;;9922:11;;:::i;:::-;9944:68;9962:50;;:28;:7;;;:::i;:28::-;9991:20;9999:11;;;:::i;9991:20::-;9962:50;;1101:15678;;;;9962:50;;;;;;;;1248:14:1;9962:50:81;1248:14:1;9962:50:81;;;;;;;;;;8372:5248;9962:50;;;;8372:5248;9944:15;;;;1101:15678;;9944:68;10022:49;10055:15;9944;;;1101:15678;;;10055:15;10022:49;;:::i;:::-;10107:18;:14;10090:15;9944;;;1101:15678;;;10090:15;10107:14;1101:15678;;;10107:14;:18;10124:1;10107:18;:::i;:::-;;;:::i;:::-;10081:83;;:::i;:::-;11773:12;10233;10238:6;10233:12;:::i;:::-;;;;:::i;:::-;10325:77;10350:52;;:28;:7;;;:::i;:28::-;10379:22;10387:13;;;:::i;10350:52::-;;;;;;;;;;8372:5248;10350:52;;;;8372:5248;10325:22;;;;1101:15678;;10325:77;10412:83;10472:22;10325;;;1101:15678;;;10472:22;10412:83;;:::i;:::-;10597:102;10614:26;:11;;;:::i;:26::-;10649:13;;10641:22;10649:13;;;:::i;10641:22::-;9788:11;10665;9788;;;1101:15678;;;10665:11;10688:10;;;:::i;:::-;10614:85;;;;;1101:15678;;;;10614:85;;;;;;;;1248:14:1;10614:85:81;;;;;;:::i;:::-;;;;;;;;;;8372:5248;10614:85;;;;8372:5248;10600:10;;;;1101:15678;;10597:102;10817:74;10841:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;8372:5248;10841:50;;;;8372:5248;10817:21;;;;1101:15678;;10817:74;10901:78;10927:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;8372:5248;10927:52;;;;8372:5248;10901:23;;;;1101:15678;;10901:78;10989:77;11044:21;10817;;;1101:15678;;;11044:21;10989:77;;:::i;:::-;11076:83;11135:23;10901;;;1101:15678;;;11135:23;11076:83;;:::i;:::-;11169;11178:21;10817;;;1101:15678;;;11178:21;9944:15;;;1101:15678;11169:83;;:::i;:::-;11262:99;11271:23;10901;;;1101:15678;;;11271:23;11297:26;:22;10325;;;1101:15678;;;11297:26;11262:99;;:::i;:::-;11549:17;;;;;8372:5248;1101:15678;;1248:14:1;11549:17:81;;;1101:15678;11549:17;1101:15678;11549:17;;;;;;;;8372:5248;11549:17;;8372:5248;11576:11;:26;:11;;;:::i;:26::-;11611:13;;11603:22;11611:13;;;:::i;11603:22::-;9788:11;11627;9788;;;1101:15678;;;11627:11;11650:66;;11576:141;;;1101:15678;;;;11576:141;;;;;;;;1248:14:1;11576:141:81;;;;;;:::i;:::-;;;;;;;;;8372:5248;11576:141;;8372:5248;11773:12;;:::i;:::-;11991:135;12000:52;;:28;:7;;;:::i;:52::-;;;;;;;;;;8372:5248;12000:52;;;;8372:5248;-1:-1:-1;10901:23:81;;;1101:15678;11991:135;;:::i;:::-;12136:129;12145:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;8372:5248;12145:50;;;;8372:5248;-1:-1:-1;10817:21:81;;;1101:15678;12136:129;;:::i;:::-;12646:64;12343:26;:11;;;:::i;:26::-;12378:13;;12370:22;12378:13;;;:::i;12370:22::-;9788:11;12394;9788;;;1101:15678;;;12394:11;10600:10;12417;10600;;;1101:15678;;;12417:10;12343:85;;;1101:15678;;;;12343:85;;;;;;;;;;8372:5248;12343:85;;;;8372:5248;12329:10;12326:102;12329:10;;;12326:102;;1101:15678;;12326:102;12527:27;;;:::i;:::-;12584:10;;10600;;;1101:15678;;;12584:10;12625;;;1101:15678;;;12625:10;12667;12655;10600;;;1101:15678;;;12655:10;12667;1101:15678;;;12667:10;12646:64;;:::i;:::-;;;:::i;:::-;13261:97;13270:23;12927:52;12841:50;;:28;:7;;;:::i;:50::-;;;;;;;;;;8372:5248;12841:50;;;;8372:5248;12817:21;:74;:21;;;:74;;1101:15678;;12817:74;12927:52;:28;:7;;;:::i;:28::-;12956:22;12964:13;;;:::i;12927:52::-;;;;;;;;;;8372:5248;12927:52;;;;8372:5248;12901:23;13169:21;13160:91;12901:23;:78;:23;;;:78;;1101:15678;;12901:78;12989:77;13044:21;;1101:15678;;;13044:21;12989:77;;:::i;:::-;13076:74;13126:23;;1101:15678;;;13126:23;13076:74;;:::i;13169:21::-;10817;;;1101:15678;13160:91;;:::i;13270:23::-;10901;;;1101:15678;13261:97;;:::i;:::-;13442:17;;;;;8372:5248;1101:15678;;1248:14:1;13442:17:81;;;1101:15678;13442:17;1101:15678;13442:17;;;;;;;;8372:5248;13442:17;;8372:5248;13469:11;:26;:11;;;:::i;:26::-;13504:3;;13510:11;9788;13504:3;;;:::i;:::-;9788:11;;1101:15678;;;13510:11;13469:75;;;1101:15678;;;;13469:75;;;;;;;;;8372:5248;13469:75;;8372:5248;13555:12;;:14;;;;;;8372:5248;1101:15678;;13555:14;1101:15678;13555:14;;;;;;;;;;;;;;;8372:5248;13555:14;;8372:5248;13580:33;;;;:::i;13555:14::-;;;9247:1;13555:14;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;13555:14;;;13469:75;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;13442:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;13442:17;;;12927:52;13160:91;12927:52;;;;13169:21;12927:52;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;12841:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;12343:85;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;12145:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;12000:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;11576:141;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;11549:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;11549:17;;;10927:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10841:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10614:85;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10350:52;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9962:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9802:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9637:50;9788:71;9637:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;9304:43;;;;;;;;;;;;;;:::i;:::-;9293:54;1101:15678;;9304:43;;;:::i;:::-;;;9199:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;9121:68;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;8654:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;8654:26;;;8518:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;1101:15678;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;1671:64:0;1101:15678:81;;;;;;;;1671:64:0;;;1101:15678:81;:::i;3897:185:0:-;3979:6;;;:::i;:::-;;;;:::i;:::-;;3975:101;;3897:185;;;:::o;3975:101::-;4063:1;4006:31;;;;;1101:15678:81;;;;4006:31:0;;;;;;:::i;:::-;;;;4063:1;:::i;1101:15678:81:-;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;1671:64:0;1101:15678:81;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;1671:64:0;3615:277;;3678:6;;;:::i;:::-;;;;:::i;:::-;;3674:212;;3615:277;;:::o;3674:212::-;3768:34;3705:44;3821:34;3705:44;;;1101:15678:81;;;;3705:44:0;1101:15678:81;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;3705:44;3768:34;;;;;1101:15678:81;;;;3768:34:0;;;;;;:::i;:::-;;;;1101:15678:81;;3821:34:0;;;;;:::i;:::-;;;;;;:::i;1101:15678:81:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2410:424:0:-;2449:16;;:::i;:::-;2445:359;;2410:424;2813:14;2823:4;2813:14;;:::i;2445:359::-;2499:245;:12;;;:::i;:::-;1671:64;2670:17;2534:196;;2645:67;;1671:64;2689:22;2697:13;2705:4;2697:13;:::i;:::-;2689:22;:::i;:::-;2645:67;;1101:15678:81;;;;2645:67:0;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;4370:185;4452:6;;;4448:101;;4370:185;;;:::o;4448:101::-;4536:1;4479:31;;;;;1101:15678:81;;;;4479:31:0;;;;4536:1;:::i;1101:15678:81:-;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;;;;;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;;;;4088:277:0;;;4151:6;;4147:212;;4088:277;;:::o;4147:212::-;4241:34;4178:44;4294:34;4178:44;;;1101:15678:81;;;;4178:44:0;1101:15678:81;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;4178:44;4241:34;;;;;1101:15678:81;;;;4241:34:0;;;;;;:::i;:::-;;;;1101:15678:81;;4294:34:0;;;;;:::i;5469:178::-;5545:6;;;5541:100;;5469:178;;;:::o;5541:100::-;5628:1;5572:30;;;;;1101:15678:81;;;;5572:30:0;;;;5202:262;;5259:6;;5255:203;;5202:262;;:::o;5255:203::-;5346:31;5286:41;5396:31;5286:41;;;1101:15678:81;;;;5286:41:0;1101:15678:81;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;5286:41;5346:31;;;;;1101:15678:81;;;;7020:178:0;7096:6;;;;7092:100;;7020:178;;;:::o;7092:100::-;7179:1;7123:30;;;;;1101:15678:81;;;;7123:30:0;;;;7179:1;:::i;1101:15678:81:-;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;;;;;;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;;1101:15678:81;;;;6756:259:0;6813:6;;;;6809:200;;6756:259;;:::o;6809:200::-;6899:30;6840:40;6948:30;6840:40;;;1101:15678:81;;;;6840:40:0;1101:15678:81;;;;;;;;1248:14:1;1101:15678:81;1248:14:1;;;1101:15678:81;;;;;;1671:64:0;;6840:40;6899:30;;;;;1101:15678:81;;;;6899:30:0;;;;;;:::i;:::-;;;;1101:15678:81;;6948:30:0;;;;;:::i;16060:84:5:-;16085:59;16088:55;16096:46;16104:37;16112:28;16104:37;:::i;16255:93::-;16310:31;;16255:93;16310:7;:2;;:::i;:7::-;:31;:7;16318:22;16310:7;16318:15;;:22;:::i;16310:31::-;;;;;;1101:15678:81;16085:59:5;;;;1101:15678:81;16310:31:5;;;;;;;;;16255:93;16310:31;;16255:93;:::o;16310:31::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;5857:123:14;5929:43;;;5857:123;5929:43;1101:15678:81;;;;5929:43:14;;;;;;;;;;;;1101:15678:81;;;16085:59:5;;;1101:15678:81;;;;;;;;;;;;:::i;6108:121:14:-;6179:42;;;6108:121;6179:42;1101:15678:81;;;;6179:42:14;;;;;;;;;;;;;:::i;1101:15678:81:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;13626:1356::-;13686:13;:2;;:::i;:13::-;;:26;;13700:11;;;:::i;:::-;13686:26;;;;;;13626:1356;13686:26;;1101:15678;;;;13686:26;;;;;;;;;;;13626:1356;13686:26;;13626:1356;13723:12;14878:14;14201:33;13723:12;;;:::i;:::-;13748:9;13723:72;13748:9;13723:35;13748:9;13723:35;:::i;:::-;13759;;1101:15678;;;;13759:35;;;;;;;;;;;;1101:15678;13759:35;13723:72;;;;;;;;;;;;:::i;:::-;;13830:71;:6;;;;:::i;:::-;13842:58;;13888:11;;;:::i;13842:58::-;13830:71;;;;;;;;;;13967:58;13928:29;13830:71;;:::i;:::-;13928:29;;;1671:64:0;;;13928:29:81;13967:58;;;:::i;:::-;14084:34;:26;14102:6;;;:::i;14084:34::-;:68;:34;14119:13;;;;:::i;:::-;14134:17;14084:68;;14134:17;14084:68;;;1101:15678;;;;14084:68;;;;;;;;;13626:1356;14084:68;;13626:1356;14172:13;14162:38;:24;14172:13;;;:::i;14162:38::-;;;:84;14201:33;;;:::i;:::-;14210:1;14202:10;;;;;14201:33;14202:10;;;:::i;:::-;14201:33;;;1101:15678;;14201:33;14162:84;14236:9;14162:84;;;;;1101:15678;;;;14162:84;;;;;;;;;13626:1356;14162:84;;13626:1356;14275:9;14369:68;14265:43;;:30;:20;14275:9;;;:::i;14265:43::-;;;;;;;;;;13626:1356;14265:43;;;;13626:1356;14256:52;14318:41;;;;:::i;14369:68::-;14498:57;:30;:11;;;:::i;:30::-;;;14541:12;14498:57;14541:12;;14498:57;;;1101:15678;;;;14498:57;;;;;;;;;;13626:1356;14498:57;;;;13626:1356;14565:23;;;;:::i;:::-;14618:7;;;:::i;:::-;14637:12;;14642:6;14637:12;:::i;:::-;;:::i;:::-;14749:15;:17;;;;;13626:1356;14749:17;;1101:15678;;;;14749:17;;1248:14:1;;;;14749:17:81;;;;;;;;;;;;;;;13626:1356;14749:17;;13626:1356;14790:11;:77;:26;:11;;;:::i;:26::-;;14825:17;14790:77;14825:17;14817:26;14825:17;;;:::i;14817:26::-;14854:8;14790:77;14854:8;14790:77;1101:15678;;;;14790:77;;;;;;;;1248:14:1;;;;14790:77:81;;;;;;;:::i;:::-;;;;;;;;;;13626:1356;14790:77;;;;13626:1356;14776:91;14878:12;;:14;;;;;;1101:15678;;14878:14;1101:15678;14878:14;;;;;;;;;;;;;;;13626:1356;14878:14;;13626:1356;14903:72;;;;;:::i;14878:14::-;;;;;;-1:-1:-1;14878:14:81;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;14790:77;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;14749:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;14749:17;;;14498:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;14265:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;14162:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;14084:68;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;13686:26;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;13686:26;;;1101:15678;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;14988:1789::-;15050:13;:2;;:::i;:13::-;;:35;;15072:11;;;:::i;:::-;15050:35;;;;;;14988:1789;15050:35;;1101:15678;;;;15050:35;;;;;;;;;;;14988:1789;15050:35;;14988:1789;15096:12;16676:14;15574:33;15096:12;;;:::i;15574:33::-;15535:84;15609:9;15535:84;;;;;1101:15678;;;;15535:84;;;;;;;;;14988:1789;15535:84;;14988:1789;15648:9;15742:68;15638:43;;:30;:20;15648:9;;;:::i;15742:68::-;15871:57;:30;:11;;;:::i;:30::-;;;15914:12;15871:57;15914:12;;15871:57;;;1101:15678;;;;15871:57;;;;;;;;;;14988:1789;15871:57;;;;14988:1789;15938:23;;;;:::i;:::-;15991:7;;;:::i;:::-;16010:64;16050:23;16058:14;;;:::i;16050:23::-;16010:64;;:::i;:::-;16084:78;16138:22;;:20;:14;;;:::i;:22::-;;;;;;;;;;;;;;14988:1789;16138:22;;;;14988:1789;16084:78;;;:::i;:::-;16172:55;16207:19;16215:10;;;:::i;16207:19::-;16172:55;;:::i;:::-;16237:44;16260:20;16268:11;;;:::i;16260:20::-;16237:44;;:::i;:::-;16291:70;16338:9;;;:::i;:::-;16330:30;16291:70;;:::i;:::-;16371:81;16420:19;16428:10;;;:::i;16420:19::-;:31;16371:81;;:::i;:::-;16463:12;;16468:6;16463:12;:::i;:::-;16591:74;:26;:11;;;:::i;:26::-;;16626:14;16591:74;16626:14;16618:23;16626:14;;;:::i;16676:::-;;;;;;;;;;;;;;;14988:1789;16676:14;;14988:1789;16701:69;;;;;:::i;16676:14::-;;;;;;-1:-1:-1;16676:14:81;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;16138:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;15871:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;15535:84;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;15050:35;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1101:15678;;;15050:35;;",
    "linkReferences": {
      "lib/forge-std/src/console2.sol": {
        "console2": [
          {
            "start": 30731,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "compliantVault()": "4676077e",
    "convexBooster()": "2cdacb50",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "distributor()": "bfe10928",
    "failed()": "ba414fa6",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFarm()": "6fa89364",
    "fxsToken()": "09dacc04",
    "nonCompliantVault()": "6f539c2e",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testEnd2End()": "185a8d73",
    "testMeetsOnLockReceivedCompliance()": "f6823097",
    "testNonOnLockReceivedCompliance()": "6ddd7969",
    "vaultImpl()": "ec1e31a0",
    "vaultOwner()": "1f52692b",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCompliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEnd2End\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMeetsOnLockReceivedCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNonOnLockReceivedCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiverOwner()\":{\"notice\":\"The receiving vault owner - IS A CONTRACT\"},\"senderOwner()\":{\"notice\":\"The sending vault owner - IS NOT A CONTRACT\"},\"senderVault()\":{\"notice\":\"The sending vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"\",\"stackAllocation\":true}},\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax-solidity/src/hardhat/contracts/Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d\",\"dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol\":{\"keccak256\":\"0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200\",\"dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1\"]},\"lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol\":{\"keccak256\":\"0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f\",\"dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR\"]},\"lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/Math.sol\":{\"keccak256\":\"0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1\",\"dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9\"]},\"lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol\":{\"keccak256\":\"0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98\",\"dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol\":{\"keccak256\":\"0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3\",\"dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol\":{\"keccak256\":\"0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84\",\"dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol\":{\"keccak256\":\"0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78\",\"dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol\":{\"keccak256\":\"0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb\",\"dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol\":{\"keccak256\":\"0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09\",\"dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol\":{\"keccak256\":\"0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15\",\"dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol\":{\"keccak256\":\"0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9\",\"dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol\":{\"keccak256\":\"0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613\",\"dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol\":{\"keccak256\":\"0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89\",\"dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol\":{\"keccak256\":\"0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320\",\"dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol\":{\"keccak256\":\"0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5\",\"urls\":[\"bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72\",\"dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol\":{\"keccak256\":\"0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b\",\"dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol\":{\"keccak256\":\"0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c\",\"dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol\":{\"keccak256\":\"0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94\",\"dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol\":{\"keccak256\":\"0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728\",\"dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol\":{\"keccak256\":\"0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5\",\"dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol\":{\"keccak256\":\"0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02\",\"dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol\":{\"keccak256\":\"0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff\",\"dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol\":{\"keccak256\":\"0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108\",\"dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol\":{\"keccak256\":\"0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47\",\"dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b\",\"dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a\",\"dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol\":{\"keccak256\":\"0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763\",\"dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d\",\"dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol\":{\"keccak256\":\"0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78\",\"dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol\":{\"keccak256\":\"0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0\",\"dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol\":{\"keccak256\":\"0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc\",\"dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol\":{\"keccak256\":\"0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6\",\"dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE\"]},\"lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol\":{\"keccak256\":\"0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18\",\"dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2\"]},\"lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b\",\"dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0x335a3d6835b3841dcc1c7cacf4cf72dd98832717640284e740a704a911cafb5d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b21e7f4784e85dcdc2abe3d1f6726505a50e14ae74237a9aa256f1840052575c\",\"dweb:/ipfs/QmSoFKithPd1QxvbLzfLJa1hCbB2hzwCjYrVEZ8UGpmm8a\"]},\"src/FraxFarmERC20Transferrable.sol\":{\"keccak256\":\"0x8259960a9267dbb823faffa90b00b1c404305602b4b8ab308f4fe24d9b0cbb16\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e04371d6051b09f84ceafd7440f9570041c1a1c7a64594c7a53010691f9dd912\",\"dweb:/ipfs/Qmewd4ZhsxZoeSkv9AXmiMoGwDkeunhjD4QX4yFru9kHvh\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3\",\"dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK\"]},\"src/interfaces/ILockReceiver.sol\":{\"keccak256\":\"0xb5fddee92e65cc57747b52e459bdc0ccda9bf607043a205422845266aba066b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aca77177354b19ffdf6c96d535eb322f166cbe1f8d4e5ec34c085f57aaf079cc\",\"dweb:/ipfs/QmNwT2p4ZAoCem6YfC21ZpjXHQPg6fNTpHea71qnvGyQst\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0x3ddd1fff5c51adf761b4a06852df1750e44bf964cab156e835331d7555eddd88\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cf318c97d7d599ff66bb66d0bb95862b9746e2a338fe38ff2a8983fb814b26a0\",\"dweb:/ipfs/QmQC3SY8gubCQW2dwBn9YPvZs5ZHvZzNkQ1Nkapev9i2Kq\"]},\"test/mocks/MockVaultOwner.sol\":{\"keccak256\":\"0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226\",\"dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonCompliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEnd2End"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMeetsOnLockReceivedCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNonOnLockReceivedCompliance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultImpl",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiverOwner()": {
            "notice": "The receiving vault owner - IS A CONTRACT"
          },
          "senderOwner()": {
            "notice": "The sending vault owner - IS NOT A CONTRACT"
          },
          "senderVault()": {
            "notice": "The sending vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "runs": 100000,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": ""
          }
        }
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeController.sol": {
        "keccak256": "0xad22ecbe3715568b384aa0817d1770ab3628cf43c6f8e70483fed8b910076d2e",
        "urls": [
          "bzz-raw://99fc8b8b6b9830029caad9a0fb01b802db406de6279b30e1394945030592ba4d",
          "dweb:/ipfs/QmeJPurfQ7uYHPUWLPTAyJf57CrhDwbPSV41Rmis8uT8b4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IFraxGaugeFXSRewardsDistributor.sol": {
        "keccak256": "0xdefbf1511c10c620e126ec70744e57a8a3e620590a0889b0d3583e7de670f8e6",
        "urls": [
          "bzz-raw://f96e22805d918139112acefba57939fc7fa4b5471f8ef856eb99e097f4970200",
          "dweb:/ipfs/QmQN7jWWxcb3MsWdvYyyfWJUVXSxBkCJyEMdbjEPhUXDA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Curve/IveFXS.sol": {
        "keccak256": "0xead5a4934e30edc68c5d55fdac9ff0ed13a3abd0b240c2b60cad652f204ee172",
        "urls": [
          "bzz-raw://1312e04de06ce5ee71a652f74183d8961973c4d5c862f38a84db5dc3d3df659f",
          "dweb:/ipfs/Qmf1xvt45ADDZHPGbwr6manUZp43czdTwgh9g3CbuSJBfR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/Math.sol": {
        "keccak256": "0x62bc6e8ee2764351c70251d50f023f15a87b6e9e31fe64e344c33a2580982dda",
        "urls": [
          "bzz-raw://49f02d00083450fda3203b80e0c46e2245cf53bd0f3f434bd63d00504ce88fc1",
          "dweb:/ipfs/QmU5s5kgmHJECRwyXLQqrcrw7z1CSfQDvqik9M5jmq3Bb9"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Misc_AMOs/convex/IConvexBaseRewardPool.sol": {
        "keccak256": "0x08fae4b2f940277827c6ba50716baa30964476d85d63ca389204dbf950fa1cee",
        "urls": [
          "bzz-raw://fe17ba0a839e99e52775ed846c32ee31e1ba9ee629173733832c9b16e2c4ff98",
          "dweb:/ipfs/QmdfUVGE3EckwNZ41rxyRwQe8hEz9iBph73NVziqGKxdJW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Common/Context.sol": {
        "keccak256": "0x60d51a32063a4975dbf9433d38f5849173527da72f007c38053274e06698cb54",
        "urls": [
          "bzz-raw://f9ee6938d731aac55f6176c30ba4fc8456a63de57a7a2d659f43a053dfb381d3",
          "dweb:/ipfs/QmRyq4LneV4qz8uLdEhTU4YndjT365PJBPvK4btHKtmSSG"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Curve/ICurvefrxETHETHPool.sol": {
        "keccak256": "0x92086b81560908f8bc727101ceec44aef7088bfac6c751d13ad52d18324133ad",
        "urls": [
          "bzz-raw://6bf20f684de54a99fd3288eae025442704e108eacaa036c306935001fd87ab84",
          "dweb:/ipfs/QmfL5XDNjJWeWWeGCkaFEqAhkcEXTFFfHKp16jotkgvRZ6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20.sol": {
        "keccak256": "0x433b9ee195d0bd257219bc337ff8aac624282a826726b18fdb299de0e3d4149e",
        "urls": [
          "bzz-raw://cf5f5456bd1c28eb94e86ba33d9ec9f7110613f405ad58b935c6397b81185d78",
          "dweb:/ipfs/QmQXQCV5aGubTfmGMK4ecR3zBkj2NkBe1XJBbg5GSuUnwg"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/ERC20Custom.sol": {
        "keccak256": "0xff03c1b74f9769a972c7a45f1876f8d14f02692d6994e23a2e61cb7b47f2dcc7",
        "urls": [
          "bzz-raw://692b1c8a92cae3984781a36cbeac86dfa75133760cc87ed90a6a32d7d7a8c7eb",
          "dweb:/ipfs/QmNZPS2M5kJNG1biNbWufyfJWimvpE7Waw2YhgaCiXLrv5"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../ERC20/IERC20.sol": {
        "keccak256": "0x057bec1fafd7ca222117f41fcfb9c8dc1f61aa30e5a0222c981196e9113de7e6",
        "urls": [
          "bzz-raw://c74a52d9102d6eaf4c2a6d630892f92260391ee5e95c9f55578a3a21b02f8b09",
          "dweb:/ipfs/QmWjPAqmGF88HpkR4BCf3pgimrZvLf4ERVG2Tz5EDjKP62"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../FXS/FXS.sol": {
        "keccak256": "0xf99bdd47f06fe38a93089865ba35e71d7ec8cb1ea5112c1b3a631857eed99abd",
        "urls": [
          "bzz-raw://8e577f556be3bdcba8fcf105d87a609ebf6bd4af235a3494ae7d79d99e1d5d15",
          "dweb:/ipfs/QmPWqiWkc359GtgeNxSowEScSMRcAKT2M8Sz6rJrU517eq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol": {
        "keccak256": "0x1829cf304ecd533ec6d9039d8481b4c01dd4a2209b12c3efa1c213b91d8e877d",
        "urls": [
          "bzz-raw://a9a9954eba46a5c58da15d67c174e0ee3403a9b9bccef27a2ea9a348c6cfa0e9",
          "dweb:/ipfs/QmUWNv741MpryCFhCZnqir6cebjvngBoXbLcJKjJnC77Ha"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPool.sol": {
        "keccak256": "0x16a3cff0ee4658383d9e6abc345065b5e65f1f9b10f011aa5103f594abc69b4a",
        "urls": [
          "bzz-raw://fac872e7d036e959ad89cd726591b8b9457e7bd14b9993f4100ad6601d47c613",
          "dweb:/ipfs/QmPQ4Wk2rcicf5XXApu19ap3ZcavmsHDftHoamCunEkg5b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Pools/FraxPoolLibrary.sol": {
        "keccak256": "0x180b06a68540715f3201cca08fd166e4c5e0d3cd75c0d02b2e1b5323a2a66f3c",
        "urls": [
          "bzz-raw://1731cc8b9c84db20c70e56ed864dccc08334e63fb036eed6974e818540a23e89",
          "dweb:/ipfs/QmXqmNFMVCetmbLiWqutVfcuG9yJ7w9Sd51e3uv5QuLBo4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IFraxswapPair.sol": {
        "keccak256": "0x599a8e96e70f6ad0a25ec979b1d4f760651c902e71381f8866ec22ecae4dff27",
        "urls": [
          "bzz-raw://8a8aead9d46b818ccb3a1ce592b4752bef508d81a4e403320181616cb71cb320",
          "dweb:/ipfs/QmQ9T1jRgty5JKqgwX13cLLemCA417GW1vwrbFw2oug9on"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Fraxswap/core/interfaces/IUniswapV2PairV5.sol": {
        "keccak256": "0xfa9ad812d6c7b69aab7ea6bc889cc069d2da15ca5563c5c5467e76c5428cbbc5",
        "urls": [
          "bzz-raw://ef23daf7cc587eea81c5c52b70ec9aad3ad81ed6f809feb26f9caaf32493ba72",
          "dweb:/ipfs/QmRhAKAfRVeuCiUPTEHn2yY1rEx1pJeziBPu3ET4g4r4j4"
        ],
        "license": null
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Governance/AccessControl.sol": {
        "keccak256": "0x749b2c0e515a59c6d03cf4908a252ebc5d2b482ca3fd7ec997d1143c302f4e89",
        "urls": [
          "bzz-raw://7301423d6e284c10275e8e79f6a62827e9b857794b74f9525c7815d3e31ebd4b",
          "dweb:/ipfs/QmYX4LrKteYnqNk2jF5H6KgGDbq8hB5ci2aa2U7Xgr3sUq"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/Babylonian.sol": {
        "keccak256": "0x16a99f4bcc5cedcea601100559ae61740d24eddc1d3e476d8083c7858c982de7",
        "urls": [
          "bzz-raw://1634c520598b50d2c76a7b99909aa1df8de11bab73d8a474fa1e9afabede939c",
          "dweb:/ipfs/QmQaT3XUdmdsbS6ai7aLG1TiZ17jmj8JZTb2pGzx7V8J4R"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/FixedPoint.sol": {
        "keccak256": "0x639489c714cccdb622df0f168c606da0b02296c38b0c605a858e3338b7ba4665",
        "urls": [
          "bzz-raw://b381d9b31c2fad376c5fceac4d8070b89e57e502cd24be2dcf86849bc3266b94",
          "dweb:/ipfs/QmTceSL8h2t3gMPLszGeH8X5QmjAwSHxDqyLm48fVLs1Vs"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Math/SafeMath.sol": {
        "keccak256": "0x43a20f7cf4c4319f81450d53779455e88a7ab80bdfc43925156ed4083b74a180",
        "urls": [
          "bzz-raw://85317e177f613c29156ffe0b1c1c29c31fedfea1ffc373c9d7f393ef51372728",
          "dweb:/ipfs/QmckZqe6wjgKWd4BTPUjRY1ofC9CsZKxAgXPFCKBisuJdr"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IConvexStakingWrapperFrax.sol": {
        "keccak256": "0x3d3479dd8261f14f6ba736134ea2b03772231e55b2db77946506fd831c7ee06b",
        "urls": [
          "bzz-raw://a28f706f18fcccc5bd664df9f80ebc312fb859ee555ed5ccfe4d1a4b210742f5",
          "dweb:/ipfs/QmcERHLWLtGYVAbGVUgePEUrTTiv7LZvfr8QgHvjAYCr4J"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/convex/IDepositToken.sol": {
        "keccak256": "0x8c7c4880b6ef5450cc016c8daf0b02122c2d7e0b361f5ecf6687d2c3fc1e1930",
        "urls": [
          "bzz-raw://69896584f52b23163d4b91cd3a0403870949122e3194e36dd3102895f99bcb02",
          "dweb:/ipfs/QmP8Z2ZZrWuMgFptGQaXWnzdwrAd5Vt3mgeEn61MuuiwHe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2pool.sol": {
        "keccak256": "0xc2448df389a7298695c2a91370fdde4a23545352cbf64183b0bea1c670db6838",
        "urls": [
          "bzz-raw://a5d7db2af547cb1d09242a8533f9ee20726e86d0e2a65c0cd294378766c2d6ff",
          "dweb:/ipfs/QmXkyM4WDpkytnt9ynrTXsy5qoC3rqjXxUJo2FQt9juXKj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Misc_AMOs/curve/I2poolToken.sol": {
        "keccak256": "0x169b9f16ce2c067ccc54258a8cb97ac1e3b067cffaab4c2a5b5090dc58682515",
        "urls": [
          "bzz-raw://16eaf72e7382c5b14798479885553ee68adc9952a7cdfab74df2308b5bb96108",
          "dweb:/ipfs/QmYF2sZhxneuWyudkfhzdG8fYv3a7ufcepLTsjFUMm8pVw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/UniswapPairOracle.sol": {
        "keccak256": "0x5d9c113905697a17627839a8cac8d1461113394a4b07631449f5902ac47df5ff",
        "urls": [
          "bzz-raw://d029fed0b864f9ef66fb956206d05765a71275516f0e0402045c34dffcc1bc47",
          "dweb:/ipfs/QmcJCmExMog7fUSP4JXq9T7pHb2c9dtzDcN3r8TnVF7aM8"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0x87c74a8e918023f916cdc22f6a1cac447bff16f769828d4aae36876187c6f7d3",
        "urls": [
          "bzz-raw://9a547dae4a1432fec9c4fb4723dc9a494607576a463383f7a51e3ed322ddff2b",
          "dweb:/ipfs/QmP5GMhBZRh6J2dLYeUJCTJV5kVE8w6ASXXxxVphcGo6Xk"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/Interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7ee004cef073122501b9e1a5a0bf796aaef7f591d447ee8a8f430b38d811518c",
        "urls": [
          "bzz-raw://575d172f68843a1a60c95666995b836f6f17f042a02c31c8905037189dcadd2a",
          "dweb:/ipfs/QmV6dTvxSfcUBWoNC91fxX26gwHdJD49mRGzPHZcpPFuQU"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2Library.sol": {
        "keccak256": "0x80e0745c3e97d42bf75ab8b2dde5c6d7b042fa3e6ce23acf25b8d9000913e65b",
        "urls": [
          "bzz-raw://23111ed2be900ae0a25e6a8cfbc76c850a3a6a30c9787b58b8ff778da8f63763",
          "dweb:/ipfs/QmNeTnGGF3Dm58YCuH8uGJ5niYsjfFRjARCJof5H1VkzXp"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Uniswap/UniswapV2OracleLibrary.sol": {
        "keccak256": "0x171029f2ea4b908809fe785b0ce12bbc359d2625bbf907992b0d59174d645285",
        "urls": [
          "bzz-raw://525417b096c69b05bf72a648aa45dfc27cd39e876cfdc9bf279257e4851f026d",
          "dweb:/ipfs/QmdrRbJGp8YJpRTDj4UmXALCYR4vzabyTXAYuHUUciet32"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/Address.sol": {
        "keccak256": "0xe392046e85c78eea7d4c1237af52a5fc06c097b7a480ea4f20159670b4a582a4",
        "urls": [
          "bzz-raw://380a8ce0349bde637a69442e6273af456e20d0f1279ff7fa6116984501ee5b78",
          "dweb:/ipfs/QmS7VTHagRNmbdhmqhv3QUGGkFnBfubjq72GHdQoGmqsez"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Utils/EnumerableSet.sol": {
        "keccak256": "0x685f4133ba76f930e3761c1d1414d7f6e55dd40d58b4b210cb392662a6cbd27d",
        "urls": [
          "bzz-raw://de31891bf4bd42e4a90209df5b906efe6f75b35132c531f043b2100f61bbb0d0",
          "dweb:/ipfs/QmVdDq4DDL38spxMDmYYe3gi5vVkRzhgmqhN2b2grr657a"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/FraxUnifiedFarmTemplate.sol": {
        "keccak256": "0xa1670d44ee7ffd93de1c29954d2159aadf7e00380e0fc58cc88dfd93fd93ca21",
        "urls": [
          "bzz-raw://a0a6794f33f461effac50764a8c777fee8cb59fa45938cd23061d84d40ae73cc",
          "dweb:/ipfs/QmWz59FxL1uFm9r1hwGNnDhem1gYfEyf3QA9GwBmQc3Cde"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/Owned.sol": {
        "keccak256": "0x89e1dde7e13d0109febf812e7d97dda7f24feb7cfe90239c0f7585d1143407d1",
        "urls": [
          "bzz-raw://917add49808f1df4025a7a33e8444661261ebf3ea9f02bcd44c698b1c1e4e7e6",
          "dweb:/ipfs/QmVSVA3swHsqEy5F2n8YBGB91cL66xVkJCezkjY9VAjnwE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/frax-solidity/src/hardhat/contracts/Uniswap/TransferHelper.sol": {
        "keccak256": "0x2eb33792741584e83e0794a7493335b5dce9a9b675dda9e647ce29d88a40a196",
        "urls": [
          "bzz-raw://0359fd7076306116b7af564be4f7d555b70daa273652ee8a1a89a64cd4e1ad18",
          "dweb:/ipfs/QmVbUyw2GeQZEZoUN48aPd5KwKHbxAYCvWqkkkbC9APNH2"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Utils/ReentrancyGuard.sol": {
        "keccak256": "0xd9ba5798bbb966d8334f8e17d30c4605d2e7ce27413b5fb260043abb7dc3a784",
        "urls": [
          "bzz-raw://a8b8f11b7a78fd8c647b4e5f2954b58148d38f0a4c4c57c7be5eb87b1c86f30b",
          "dweb:/ipfs/QmV3M17f9jvtgCS9gQxSZ7ESNE18kWC5vCX3mw76osw487"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0x335a3d6835b3841dcc1c7cacf4cf72dd98832717640284e740a704a911cafb5d",
        "urls": [
          "bzz-raw://b21e7f4784e85dcdc2abe3d1f6726505a50e14ae74237a9aa256f1840052575c",
          "dweb:/ipfs/QmSoFKithPd1QxvbLzfLJa1hCbB2hzwCjYrVEZ8UGpmm8a"
        ],
        "license": "UNLICENSED"
      },
      "src/FraxFarmERC20Transferrable.sol": {
        "keccak256": "0x8259960a9267dbb823faffa90b00b1c404305602b4b8ab308f4fe24d9b0cbb16",
        "urls": [
          "bzz-raw://e04371d6051b09f84ceafd7440f9570041c1a1c7a64594c7a53010691f9dd912",
          "dweb:/ipfs/Qmewd4ZhsxZoeSkv9AXmiMoGwDkeunhjD4QX4yFru9kHvh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x7ac78abd956d6210cd0bdd520b7d445e61d0721eaba958adc3a3acb4041cc92e",
        "urls": [
          "bzz-raw://4c3fc4d3818959b910f4d4357438c739c2ecb1cf4d19065d10a7846578e405a3",
          "dweb:/ipfs/QmaznDDhnxoodZdQ3qQChsiNi528xBBeeokHdBLGY5bQwK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILockReceiver.sol": {
        "keccak256": "0xb5fddee92e65cc57747b52e459bdc0ccda9bf607043a205422845266aba066b0",
        "urls": [
          "bzz-raw://aca77177354b19ffdf6c96d535eb322f166cbe1f8d4e5ec34c085f57aaf079cc",
          "dweb:/ipfs/QmNwT2p4ZAoCem6YfC21ZpjXHQPg6fNTpHea71qnvGyQst"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0x3ddd1fff5c51adf761b4a06852df1750e44bf964cab156e835331d7555eddd88",
        "urls": [
          "bzz-raw://cf318c97d7d599ff66bb66d0bb95862b9746e2a338fe38ff2a8983fb814b26a0",
          "dweb:/ipfs/QmQC3SY8gubCQW2dwBn9YPvZs5ZHvZzNkQ1Nkapev9i2Kq"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockVaultOwner.sol": {
        "keccak256": "0x09731f716e00267efccbf100e945e44a4aa33186b69bf3a1e3945046131bb4ec",
        "urls": [
          "bzz-raw://a83ddfbbc71cc706c219e6fc67b33294d53a7b3d24468a2acd4f34dd8066a226",
          "dweb:/ipfs/QmYzZsU1hmrsDimz4E2dw7FoFHtJcD9rwNxArWYkbHMgxf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 47065,
    "exportedSymbols": {
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "FRAXStablecoin": [
        34406
      ],
      "FraxFarmERC20TransfersTest": [
        47064
      ],
      "FraxUnifiedFarm_ERC20": [
        44915
      ],
      "IDeposits": [
        45544
      ],
      "IFraxFarmERC20": [
        45372
      ],
      "IFraxFarmTransfers": [
        45297
      ],
      "IFraxGaugeController": [
        39604
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        42698
      ],
      "VaultOwner": [
        47104
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:16741:81",
    "nodes": [
      {
        "id": 45483,
        "nodeType": "PragmaDirective",
        "src": "39:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 45484,
        "nodeType": "ImportDirective",
        "src": "65:28:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45485,
        "nodeType": "ImportDirective",
        "src": "94:26:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45487,
        "nodeType": "ImportDirective",
        "src": "122:76:81",
        "nodes": [],
        "absolutePath": "src/FraxFarmERC20Transferrable.sol",
        "file": "../src/FraxFarmERC20Transferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 44943,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45486,
              "name": "FraxUnifiedFarm_ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44915,
              "src": "130:21:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45489,
        "nodeType": "ImportDirective",
        "src": "199:80:81",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 42699,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45488,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42698,
              "src": "207:18:81",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45491,
        "nodeType": "ImportDirective",
        "src": "280:54:81",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Frax/Frax.sol",
        "file": "@frax/../Frax/Frax.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 34407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45490,
              "name": "FRAXStablecoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34406,
              "src": "288:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45494,
        "nodeType": "ImportDirective",
        "src": "335:77:81",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 45453,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45492,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45297,
              "src": "343:18:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45493,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45372,
              "src": "363:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45495,
        "nodeType": "ImportDirective",
        "src": "413:61:81",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 39605,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45497,
        "nodeType": "ImportDirective",
        "src": "568:71:81",
        "nodes": [],
        "absolutePath": "test/mocks/MockVaultOwner.sol",
        "file": "@mocks/MockVaultOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47065,
        "sourceUnit": 47105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45496,
              "name": "MockVaultOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47104,
              "src": "576:14:81",
              "typeDescriptions": {}
            },
            "local": "VaultOwner",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45544,
        "nodeType": "ContractDefinition",
        "src": "641:458:81",
        "nodes": [
          {
            "id": 45508,
            "nodeType": "FunctionDefinition",
            "src": "667:104:81",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "676:13:81",
            "parameters": {
              "id": 45504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45501,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "708:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45508,
                  "src": "690:26:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45498,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "690:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45500,
                    "length": {
                      "hexValue": "32",
                      "id": 45499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "698:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "690:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45503,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "726:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45508,
                  "src": "718:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:54:81"
            },
            "returnParameters": {
              "id": 45507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45508,
                  "src": "762:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:9:81"
            },
            "scope": 45544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45515,
            "nodeType": "FunctionDefinition",
            "src": "776:68:81",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "785:9:81",
            "parameters": {
              "id": 45511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45510,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "803:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45515,
                  "src": "795:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:17:81"
            },
            "returnParameters": {
              "id": 45514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45515,
                  "src": "835:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:9:81"
            },
            "scope": 45544,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45524,
            "nodeType": "FunctionDefinition",
            "src": "849:74:81",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "858:7:81",
            "parameters": {
              "id": 45520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45517,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "874:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45524,
                  "src": "866:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45519,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "891:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45524,
                  "src": "883:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "865:33:81"
            },
            "returnParameters": {
              "id": 45523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45524,
                  "src": "917:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:6:81"
            },
            "scope": 45544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45529,
            "nodeType": "FunctionDefinition",
            "src": "928:43:81",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "937:7:81",
            "parameters": {
              "id": 45527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45526,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "953:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45529,
                  "src": "945:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:17:81"
            },
            "returnParameters": {
              "id": 45528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:81"
            },
            "scope": 45544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45536,
            "nodeType": "FunctionDefinition",
            "src": "976:56:81",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "985:7:81",
            "parameters": {
              "id": 45534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45531,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1001:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45536,
                  "src": "993:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45533,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1018:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45536,
                  "src": "1010:11:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:81"
            },
            "returnParameters": {
              "id": 45535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:81"
            },
            "scope": 45544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45543,
            "nodeType": "FunctionDefinition",
            "src": "1037:60:81",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "1046:10:81",
            "parameters": {
              "id": 45541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45538,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1065:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45543,
                  "src": "1057:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45540,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "1078:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 45543,
                  "src": "1073:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:31:81"
            },
            "returnParameters": {
              "id": 45542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:81"
            },
            "scope": 45544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45544
        ],
        "name": "IDeposits",
        "nameLocation": "651:9:81",
        "scope": 47065,
        "usedErrors": []
      },
      {
        "id": 47064,
        "nodeType": "ContractDefinition",
        "src": "1101:15678:81",
        "nodes": [
          {
            "id": 45549,
            "nodeType": "VariableDeclaration",
            "src": "1151:39:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1180:10:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45548,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45547,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "1151:21:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44915,
                "src": "1151:21:81"
              },
              "referencedDeclaration": 44915,
              "src": "1151:21:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45552,
            "nodeType": "VariableDeclaration",
            "src": "1196:21:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1209:8:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45551,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45550,
                "name": "Vault",
                "nameLocations": [
                  "1196:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "1196:5:81"
              },
              "referencedDeclaration": 42698,
              "src": "1196:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45555,
            "nodeType": "VariableDeclaration",
            "src": "1269:28:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f52692b",
            "mutability": "mutable",
            "name": "vaultOwner",
            "nameLocation": "1287:10:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 45554,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45553,
                "name": "VaultOwner",
                "nameLocations": [
                  "1269:10:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47104,
                "src": "1269:10:81"
              },
              "referencedDeclaration": 47104,
              "src": "1269:10:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45557,
            "nodeType": "VariableDeclaration",
            "src": "1304:20:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1319:5:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45556,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1304:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45559,
            "nodeType": "VariableDeclaration",
            "src": "1330:18:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1345:3:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45558,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1330:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45562,
            "nodeType": "VariableDeclaration",
            "src": "1359:66:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1374:6:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45560,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 45561,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1383:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 45565,
            "nodeType": "VariableDeclaration",
            "src": "1431:69:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1446:9:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45563,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1431:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 45564,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1458:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 45571,
            "nodeType": "VariableDeclaration",
            "src": "1533:84:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "1548:15:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45566,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1533:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 45569,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1574:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45568,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1566:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45567,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1566:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45570,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1566:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45574,
            "nodeType": "VariableDeclaration",
            "src": "1623:74:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "1638:14:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45572,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1623:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 45573,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1655:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 45580,
            "nodeType": "VariableDeclaration",
            "src": "1750:104:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "1779:7:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
              "typeString": "contract FraxUnifiedFarm_ERC20"
            },
            "typeName": {
              "id": 45576,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45575,
                "name": "FraxUnifiedFarm_ERC20",
                "nameLocations": [
                  "1750:21:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44915,
                "src": "1750:21:81"
              },
              "referencedDeclaration": 44915,
              "src": "1750:21:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 45578,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1811:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45577,
                "name": "FraxUnifiedFarm_ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44915,
                "src": "1789:21:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44915_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                }
              },
              "id": 45579,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1789:65:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                "typeString": "contract FraxUnifiedFarm_ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45586,
            "nodeType": "VariableDeclaration",
            "src": "1878:82:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "1893:13:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45581,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1878:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 45584,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1917:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45583,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1909:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45582,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1909:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45585,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1909:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45592,
            "nodeType": "VariableDeclaration",
            "src": "1966:88:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "1981:19:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45587,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1966:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 45590,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2011:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2003:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45588,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2003:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2003:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45598,
            "nodeType": "VariableDeclaration",
            "src": "2060:81:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "2075:12:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45593,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2060:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 45596,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2098:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45595,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2090:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45594,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2090:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45597,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2090:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45604,
            "nodeType": "VariableDeclaration",
            "src": "2147:83:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "2162:14:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45599,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2147:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 45602,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2187:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45601,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2179:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45600,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2179:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45603,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2179:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45610,
            "nodeType": "VariableDeclaration",
            "src": "2570:82:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "2585:13:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45605,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2570:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 45608,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2609:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45607,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2601:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45606,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2601:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2601:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45616,
            "nodeType": "VariableDeclaration",
            "src": "2676:87:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "2691:18:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45611,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2676:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 45614,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2720:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45613,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2712:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45612,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2712:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45615,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2712:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45623,
            "nodeType": "VariableDeclaration",
            "src": "2863:76:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45617,
              "nodeType": "StructuredDocumentation",
              "src": "2829:29:81",
              "text": "@notice The sending vault"
            },
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "2876:11:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45619,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45618,
                "name": "Vault",
                "nameLocations": [
                  "2863:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "2863:5:81"
              },
              "referencedDeclaration": 42698,
              "src": "2863:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 45621,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2896:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45620,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42698,
                "src": "2890:5:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42698_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45622,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2890:49:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45630,
            "nodeType": "VariableDeclaration",
            "src": "3005:80:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45624,
              "nodeType": "StructuredDocumentation",
              "src": "2945:55:81",
              "text": "@notice The sending vault owner - IS NOT A CONTRACT"
            },
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "3020:11:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45625,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3005:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 45628,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3042:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45627,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3034:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45626,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3034:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45629,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3034:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45636,
            "nodeType": "VariableDeclaration",
            "src": "3091:78:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "3104:13:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45631,
                "name": "Vault",
                "nameLocations": [
                  "3091:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3091:5:81"
              },
              "referencedDeclaration": 42698,
              "src": "3091:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 45634,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3126:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45633,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42698,
                "src": "3120:5:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42698_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 45635,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3120:49:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45643,
            "nodeType": "VariableDeclaration",
            "src": "3233:82:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45637,
              "nodeType": "StructuredDocumentation",
              "src": "3175:53:81",
              "text": "@notice The receiving vault owner - IS A CONTRACT"
            },
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "3248:13:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45638,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3233:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 45641,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3272:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45640,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3264:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45639,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3264:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3264:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45646,
            "nodeType": "VariableDeclaration",
            "src": "3321:30:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f539c2e",
            "mutability": "mutable",
            "name": "nonCompliantVault",
            "nameLocation": "3334:17:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45645,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45644,
                "name": "Vault",
                "nameLocations": [
                  "3321:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3321:5:81"
              },
              "referencedDeclaration": 42698,
              "src": "3321:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45649,
            "nodeType": "VariableDeclaration",
            "src": "3357:27:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "4676077e",
            "mutability": "mutable",
            "name": "compliantVault",
            "nameLocation": "3370:14:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 45648,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45647,
                "name": "Vault",
                "nameLocations": [
                  "3357:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3357:5:81"
              },
              "referencedDeclaration": 42698,
              "src": "3357:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45655,
            "nodeType": "VariableDeclaration",
            "src": "3390:78:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec1e31a0",
            "mutability": "mutable",
            "name": "vaultImpl",
            "nameLocation": "3405:9:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3390:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830336662383534334539333336323462343561626464333139383735343863304439383932463037",
                  "id": 45653,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3425:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x03fb8543E933624b45abdd31987548c0D9892F07"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45652,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3417:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45651,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3417:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45654,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3417:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45658,
            "nodeType": "VariableDeclaration",
            "src": "3475:69:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "3490:9:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45656,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3475:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 45657,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3502:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 45664,
            "nodeType": "VariableDeclaration",
            "src": "3558:77:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "3573:8:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3558:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 45662,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3592:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45661,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3584:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45660,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3584:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3584:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45670,
            "nodeType": "VariableDeclaration",
            "src": "3648:77:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "3663:8:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3648:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 45668,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3682:42:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 45667,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3674:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45666,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3674:7:81",
                  "typeDescriptions": {}
                }
              },
              "id": 45669,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3674:51:81",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45673,
            "nodeType": "VariableDeclaration",
            "src": "3732:71:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "3747:11:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45671,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3732:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
              "id": 45672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3761:42:81",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
            },
            "visibility": "public"
          },
          {
            "id": 45676,
            "nodeType": "VariableDeclaration",
            "src": "4160:31:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "4178:13:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45674,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4160:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45675,
              "nodeType": "ArrayTypeName",
              "src": "4160:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45679,
            "nodeType": "VariableDeclaration",
            "src": "4197:33:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "4215:15:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45677,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4197:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45678,
              "nodeType": "ArrayTypeName",
              "src": "4197:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45682,
            "nodeType": "VariableDeclaration",
            "src": "4236:30:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "4254:12:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 45680,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4236:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 45681,
              "nodeType": "ArrayTypeName",
              "src": "4236:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45685,
            "nodeType": "VariableDeclaration",
            "src": "4272:35:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "4290:17:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4272:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45684,
              "nodeType": "ArrayTypeName",
              "src": "4272:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45688,
            "nodeType": "VariableDeclaration",
            "src": "4313:37:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "4331:19:81",
            "scope": 47064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45686,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4313:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45687,
              "nodeType": "ArrayTypeName",
              "src": "4313:9:81",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46138,
            "nodeType": "FunctionDefinition",
            "src": "4357:3530:81",
            "nodes": [],
            "body": {
              "id": 46137,
              "nodeType": "Block",
              "src": "4381:3506:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45691,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45557,
                      "src": "4419:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4435:66:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 45692,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4427:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4430:4:81",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4427:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4427:75:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4419:83:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45697,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45701,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45557,
                        "src": "4520:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4527:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45698,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4512:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4515:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4512:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4512:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45704,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:26:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45708,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45557,
                        "src": "4607:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 45709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4614:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 45705,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4598:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4601:5:81",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4598:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45711,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:24:81"
                },
                {
                  "expression": {
                    "id": 45717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45712,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45559,
                      "src": "4633:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 45715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4647:66:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 45713,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "4639:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4642:4:81",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "4639:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4639:75:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4633:81:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45718,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:81:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45722,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45559,
                        "src": "4732:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4737:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45719,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4724:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4727:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "4724:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4724:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45725,
                  "nodeType": "ExpressionStatement",
                  "src": "4724:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45729,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45559,
                        "src": "4767:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 45730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4772:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 45726,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "4758:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4761:5:81",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "4758:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 45731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4758:20:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45732,
                  "nodeType": "ExpressionStatement",
                  "src": "4758:20:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45738,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4855:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4847:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45736,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4847:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4847:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45733,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45679,
                        "src": "4826:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4842:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4826:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4826:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45741,
                  "nodeType": "ExpressionStatement",
                  "src": "4826:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4900:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4892:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4892:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4892:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45742,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45679,
                        "src": "4871:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4887:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4871:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45750,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3132333435",
                        "id": 45754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4934:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        },
                        "value": "12345"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_12345_by_1",
                          "typeString": "int_const 12345"
                        }
                      ],
                      "expression": {
                        "id": 45751,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45682,
                        "src": "4916:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4929:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4916:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4916:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45756,
                  "nodeType": "ExpressionStatement",
                  "src": "4916:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3234363930",
                        "id": 45760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        },
                        "value": "24690"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_24690_by_1",
                          "typeString": "int_const 24690"
                        }
                      ],
                      "expression": {
                        "id": 45757,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45682,
                        "src": "4979:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 45759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4992:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4979:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 45761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4979:24:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45762,
                  "nodeType": "ExpressionStatement",
                  "src": "4979:24:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45768,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45673,
                            "src": "5076:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5068:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5068:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5068:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45763,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45688,
                        "src": "5043:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5063:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5043:24:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45771,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45777,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45664,
                            "src": "5126:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5118:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45775,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5118:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5118:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45772,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45676,
                        "src": "5099:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5113:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5099:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5099:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45780,
                  "nodeType": "ExpressionStatement",
                  "src": "5099:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45786,
                            "name": "cvxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45670,
                            "src": "5173:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5165:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5165:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5165:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45781,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45676,
                        "src": "5146:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 45783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5160:4:81",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5146:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 45788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5146:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45789,
                  "nodeType": "ExpressionStatement",
                  "src": "5146:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45793,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45630,
                        "src": "5245:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5258:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45790,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5237:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5240:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5237:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5237:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45796,
                  "nodeType": "ExpressionStatement",
                  "src": "5237:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45800,
                        "name": "receiverOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45643,
                        "src": "5287:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5302:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45797,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5279:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5282:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5279:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:34:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45803,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45809,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5339:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5331:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5331:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5331:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 45811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5346:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45804,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5323:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5326:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "5323:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5323:34:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45813,
                  "nodeType": "ExpressionStatement",
                  "src": "5323:34:81"
                },
                {
                  "expression": {
                    "id": 45829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45814,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45549,
                      "src": "5427:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45820,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5474:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 45819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5466:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45818,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5466:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5466:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45822,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45676,
                          "src": "5481:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45823,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45679,
                          "src": "5496:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45824,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45682,
                          "src": "5513:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 45825,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45685,
                          "src": "5527:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45826,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45688,
                          "src": "5546:19:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 45827,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45574,
                          "src": "5567:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5440:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_$44915_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20)"
                        },
                        "typeName": {
                          "id": 45816,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45815,
                            "name": "FraxUnifiedFarm_ERC20",
                            "nameLocations": [
                              "5444:21:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44915,
                            "src": "5444:21:81"
                          },
                          "referencedDeclaration": 44915,
                          "src": "5444:21:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      },
                      "id": 45828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5440:142:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "5427:155:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45830,
                  "nodeType": "ExpressionStatement",
                  "src": "5427:155:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45836,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45580,
                            "src": "5608:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5600:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45834,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5600:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5600:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45840,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45549,
                              "src": "5626:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                                "typeString": "contract FraxUnifiedFarm_ERC20"
                              }
                            ],
                            "id": 45839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5618:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45838,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5618:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5618:19:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5638:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5618:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45831,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "5592:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5595:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "5592:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5592:51:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45844,
                  "nodeType": "ExpressionStatement",
                  "src": "5592:51:81"
                },
                {
                  "expression": {
                    "id": 45849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45845,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45549,
                      "src": "5654:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45847,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "5689:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        ],
                        "id": 45846,
                        "name": "FraxUnifiedFarm_ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44915,
                        "src": "5667:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_$44915_$",
                          "typeString": "type(contract FraxUnifiedFarm_ERC20)"
                        }
                      },
                      "id": 45848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5667:30:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                        "typeString": "contract FraxUnifiedFarm_ERC20"
                      }
                    },
                    "src": "5654:43:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                      "typeString": "contract FraxUnifiedFarm_ERC20"
                    }
                  },
                  "id": 45850,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7661756c74496d706c20505245204554434820434f4445204c454e475448",
                        "id": 45854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5722:32:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6d6c54710b948c23483e2c7e973b38017219847fac886b9d12ffcf33573ed2d",
                          "typeString": "literal_string \"vaultImpl PRE ETCH CODE LENGTH\""
                        },
                        "value": "vaultImpl PRE ETCH CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45857,
                                "name": "vaultImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45655,
                                "src": "5764:9:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 45856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5756:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45855,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5756:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5756:18:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5775:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "5756:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5780:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5756:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d6d6c54710b948c23483e2c7e973b38017219847fac886b9d12ffcf33573ed2d",
                          "typeString": "literal_string \"vaultImpl PRE ETCH CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45851,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5709:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5718:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "5709:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5709:78:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45862,
                  "nodeType": "ExpressionStatement",
                  "src": "5709:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6376785661756c7420505245204554434820434f4445204c454e475448",
                        "id": 45866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b145b2343b584fd47d02522a6d060bf9b54deb5b749ab78b9a631823f1f7f95",
                          "typeString": "literal_string \"cvxVault PRE ETCH CODE LENGTH\""
                        },
                        "value": "cvxVault PRE ETCH CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45869,
                                "name": "cvxVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45552,
                                "src": "5851:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 45868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5843:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5843:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5843:17:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5861:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "5843:22:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5866:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5843:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2b145b2343b584fd47d02522a6d060bf9b54deb5b749ab78b9a631823f1f7f95",
                          "typeString": "literal_string \"cvxVault PRE ETCH CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45863,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5797:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5806:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "5797:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:76:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45874,
                  "nodeType": "ExpressionStatement",
                  "src": "5797:76:81"
                },
                {
                  "expression": {
                    "id": 45880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45875,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45552,
                      "src": "5939:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5950:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$42698_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 45877,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45876,
                            "name": "Vault",
                            "nameLocations": [
                              "5954:5:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 42698,
                            "src": "5954:5:81"
                          },
                          "referencedDeclaration": 42698,
                          "src": "5954:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 45879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5950:11:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "5939:22:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45881,
                  "nodeType": "ExpressionStatement",
                  "src": "5939:22:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6376785661756c74206465706c6f796d656e7420434f4445204c454e475448",
                        "id": 45885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5984:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346c6b7b6fd75d528a32e8fb7abbb4c974eddaeb730df520631929e66e121115",
                          "typeString": "literal_string \"cvxVault deployment CODE LENGTH\""
                        },
                        "value": "cvxVault deployment CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45888,
                                "name": "cvxVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45552,
                                "src": "6027:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 45887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6019:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45886,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6019:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6019:17:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6037:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6019:22:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6042:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6019:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_346c6b7b6fd75d528a32e8fb7abbb4c974eddaeb730df520631929e66e121115",
                          "typeString": "literal_string \"cvxVault deployment CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45882,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5971:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5980:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "5971:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:78:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45893,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45899,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6087:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$47064",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 45898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6079:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45897,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6079:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6079:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45903,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45580,
                            "src": "6102:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 45902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6094:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6094:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6094:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45905,
                        "name": "cvxStkFrxEthLp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45574,
                        "src": "6112:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45906,
                        "name": "vaultRewardsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45592,
                        "src": "6128:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45894,
                        "name": "cvxVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45552,
                        "src": "6059:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 45896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6068:10:81",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41823,
                      "src": "6059:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 45907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:89:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45908,
                  "nodeType": "ExpressionStatement",
                  "src": "6059:89:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45914,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45623,
                            "src": "6270:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6262:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6262:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6262:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45918,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45552,
                              "src": "6292:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6284:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6284:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6284:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6302:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6284:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45909,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6254:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6257:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6254:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6254:53:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45922,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45928,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45636,
                            "src": "6333:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 45927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6325:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6325:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6325:22:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45932,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45552,
                              "src": "6357:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6349:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45930,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6349:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6349:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6367:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6349:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45923,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6317:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6320:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6317:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6317:55:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45936,
                  "nodeType": "ExpressionStatement",
                  "src": "6317:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45942,
                            "name": "vaultImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45655,
                            "src": "6398:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6390:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45940,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6390:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6390:18:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45946,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45552,
                              "src": "6418:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 45945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6410:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6410:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6410:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6428:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "6410:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45937,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6382:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6385:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "6382:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 45949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:51:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45950,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:51:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7661756c74496d706c20504f5354204554434820434f4445204c454e475448",
                        "id": 45954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6457:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfe536e2a1779f8e1393d084825260af076c2294087af056cd028c153eb65d22",
                          "typeString": "literal_string \"vaultImpl POST ETCH CODE LENGTH\""
                        },
                        "value": "vaultImpl POST ETCH CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45957,
                                "name": "vaultImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45655,
                                "src": "6500:9:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 45956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6492:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6492:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6492:18:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6511:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6492:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6516:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6492:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfe536e2a1779f8e1393d084825260af076c2294087af056cd028c153eb65d22",
                          "typeString": "literal_string \"vaultImpl POST ETCH CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45951,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6444:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6453:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6444:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:79:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45962,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:79:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6376785661756c7420504f5354204554434820434f4445204c454e475448",
                        "id": 45966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6546:32:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8d118ed3fc87fa819b6b05dc705431a0f6378f47c3cca76bf0b9ccdfe2c604",
                          "typeString": "literal_string \"cvxVault POST ETCH CODE LENGTH\""
                        },
                        "value": "cvxVault POST ETCH CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45969,
                                "name": "cvxVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45552,
                                "src": "6588:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 45968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6580:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45967,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6580:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6580:17:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 45971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6598:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "6580:22:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 45972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6603:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6580:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ed8d118ed3fc87fa819b6b05dc705431a0f6378f47c3cca76bf0b9ccdfe2c604",
                          "typeString": "literal_string \"cvxVault POST ETCH CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45963,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6533:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 45965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6542:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "6533:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6533:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45974,
                  "nodeType": "ExpressionStatement",
                  "src": "6533:77:81"
                },
                {
                  "expression": {
                    "id": 45979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45975,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45552,
                      "src": "6620:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45977,
                          "name": "vaultImpl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45655,
                          "src": "6637:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45976,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42698,
                        "src": "6631:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42698_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 45978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6631:16:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "6620:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 45980,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:27:81"
                },
                {
                  "assignments": [
                    45982,
                    45984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45982,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6704:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46137,
                      "src": "6699:12:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45981,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6699:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45984,
                      "mutability": "mutable",
                      "name": "retBytes",
                      "nameLocation": "6726:8:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46137,
                      "src": "6713:21:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45983,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6713:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45993,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6372656174655661756c742875696e7432353629",
                            "id": 45989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6781:22:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            "value": "createVault(uint256)"
                          },
                          {
                            "hexValue": "3336",
                            "id": 45990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6805:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                              "typeString": "literal_string \"createVault(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            }
                          ],
                          "expression": {
                            "id": 45987,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6757:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6761:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6757:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 45991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6757:51:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 45985,
                        "name": "convexBooster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45610,
                        "src": "6738:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 45986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6752:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "6738:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6738:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6698:111:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45995,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45982,
                        "src": "6828:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6372656174655661756c74206661696c6564",
                        "id": 45996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6837:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        },
                        "value": "createVault failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        }
                      ],
                      "id": 45994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6820:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6820:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45998,
                  "nodeType": "ExpressionStatement",
                  "src": "6820:38:81"
                },
                {
                  "expression": {
                    "id": 46009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45999,
                      "name": "nonCompliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45646,
                      "src": "6868:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46003,
                              "name": "retBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45984,
                              "src": "6905:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 46005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6916:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 46004,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6916:7:81",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 46006,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6915:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 46001,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6894:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 46002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6898:6:81",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6894:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6894:31:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 46000,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42698,
                        "src": "6888:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42698_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 46008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6888:38:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "6868:58:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 46010,
                  "nodeType": "ExpressionStatement",
                  "src": "6868:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f6e436f6d706c69616e745661756c74",
                        "id": 46014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6949:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        "value": "nonCompliantVault"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46017,
                            "name": "nonCompliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45646,
                            "src": "6978:17:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6970:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6970:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6970:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17abbe1708c0313b449cbd98305f56b6bdb082966ae262be823d7cc659cf9eca",
                          "typeString": "literal_string \"nonCompliantVault\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46011,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "6936:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6945:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "6936:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6936:61:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46020,
                  "nodeType": "ExpressionStatement",
                  "src": "6936:61:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5641554c544f574e4552205052454445504c4f5920434f4445204c454e475448",
                        "id": 46024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7021:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        "value": "VAULTOWNER PREDEPLOY CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 46027,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45555,
                                "src": "7065:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              ],
                              "id": 46026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7057:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7057:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7057:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 46029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7077:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7057:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 46030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7082:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7057:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46021,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7008:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7017:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7008:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7008:81:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46032,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:81:81"
                },
                {
                  "expression": {
                    "id": 46038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46033,
                      "name": "vaultOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45555,
                      "src": "7158:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7171:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockVaultOwner_$47104_$",
                          "typeString": "function () returns (contract MockVaultOwner)"
                        },
                        "typeName": {
                          "id": 46035,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46034,
                            "name": "VaultOwner",
                            "nameLocations": [
                              "7175:10:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47104,
                            "src": "7175:10:81"
                          },
                          "referencedDeclaration": 47104,
                          "src": "7175:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                            "typeString": "contract MockVaultOwner"
                          }
                        }
                      },
                      "id": 46037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7171:16:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "src": "7158:29:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                      "typeString": "contract MockVaultOwner"
                    }
                  },
                  "id": 46039,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:29:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46045,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45555,
                            "src": "7213:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7205:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7205:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7205:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46049,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45555,
                              "src": "7234:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 46048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7226:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46047,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7226:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7226:19:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7246:4:81",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7226:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46040,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7197:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7200:4:81",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7197:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 46052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:54:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46053,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46059,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45555,
                            "src": "7277:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7269:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46057,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7269:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7269:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 46061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7290:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 46054,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7261:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7264:4:81",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "7261:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 46062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7261:40:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46063,
                  "nodeType": "ExpressionStatement",
                  "src": "7261:40:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5641554c544f574e455220504f53544445504c4f5920434f4445204c454e475448",
                        "id": 46067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7324:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3320961f0cd60788dd066a0066484bb3620278b676dae4cf9eaed770ddf4f84c",
                          "typeString": "literal_string \"VAULTOWNER POSTDEPLOY CODE LENGTH\""
                        },
                        "value": "VAULTOWNER POSTDEPLOY CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 46070,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45555,
                                "src": "7369:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              ],
                              "id": 46069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7361:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46068,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7361:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7361:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 46072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7381:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7361:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 46073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7386:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7361:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3320961f0cd60788dd066a0066484bb3620278b676dae4cf9eaed770ddf4f84c",
                          "typeString": "literal_string \"VAULTOWNER POSTDEPLOY CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46064,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7311:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7320:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7311:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7311:82:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46075,
                  "nodeType": "ExpressionStatement",
                  "src": "7311:82:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46081,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45555,
                            "src": "7479:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7471:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46079,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7471:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7471:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46076,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7462:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7465:5:81",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8607,
                      "src": "7462:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7462:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46084,
                  "nodeType": "ExpressionStatement",
                  "src": "7462:29:81"
                },
                {
                  "expression": {
                    "id": 46096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 46085,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45982,
                          "src": "7502:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 46086,
                          "name": "retBytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45984,
                          "src": "7511:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 46087,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7501:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "6372656174655661756c742875696e7432353629",
                              "id": 46092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7566:22:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                                "typeString": "literal_string \"createVault(uint256)\""
                              },
                              "value": "createVault(uint256)"
                            },
                            {
                              "hexValue": "3336",
                              "id": 46093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7590:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9abbdf4b2ae01cd095953890e6ec21674ebcedf30cd405d5715cbc9865d15a60",
                                "typeString": "literal_string \"createVault(uint256)\""
                              },
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 46090,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7542:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 46091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7546:19:81",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "7542:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 46094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7542:51:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46088,
                          "name": "convexBooster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45610,
                          "src": "7523:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7537:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7523:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7523:71:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "7501:93:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46097,
                  "nodeType": "ExpressionStatement",
                  "src": "7501:93:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46099,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45982,
                        "src": "7613:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6372656174655661756c74206661696c6564",
                        "id": 46100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7622:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        },
                        "value": "createVault failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3d42a7e4d471fdef34cf0b8bbcecfa9c533b3f63251f0c6d5c31a1f3a96e598",
                          "typeString": "literal_string \"createVault failed\""
                        }
                      ],
                      "id": 46098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7605:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7605:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46102,
                  "nodeType": "ExpressionStatement",
                  "src": "7605:38:81"
                },
                {
                  "expression": {
                    "id": 46113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46103,
                      "name": "compliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45649,
                      "src": "7653:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46107,
                              "name": "retBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45984,
                              "src": "7687:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 46109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7698:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 46108,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7698:7:81",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 46110,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7697:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 46105,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7676:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 46106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7680:6:81",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "7676:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7676:31:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 46104,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42698,
                        "src": "7670:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$42698_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 46112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7670:38:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "7653:55:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 46114,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6d706c69616e745661756c74",
                        "id": 46118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7731:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da599da7a3353a2019c74c1512a84106532a96126b09e654a563c761df346c1d",
                          "typeString": "literal_string \"compliantVault\""
                        },
                        "value": "compliantVault"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46121,
                            "name": "compliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45649,
                            "src": "7757:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7749:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7749:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7749:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_da599da7a3353a2019c74c1512a84106532a96126b09e654a563c761df346c1d",
                          "typeString": "literal_string \"compliantVault\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46115,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7718:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7727:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "7718:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7718:55:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46124,
                  "nodeType": "ExpressionStatement",
                  "src": "7718:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5345545550205641554c54204445504c4f5920504f5354205052414e4b204f574e4552204c454e475448",
                        "id": 46128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7796:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf3d44ebb6df2abfe9685702ef4a345d78680742532ed0121b84f0d58b49ec1c",
                          "typeString": "literal_string \"SETUP VAULT DEPLOY POST PRANK OWNER LENGTH\""
                        },
                        "value": "SETUP VAULT DEPLOY POST PRANK OWNER LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "components": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 46129,
                                    "name": "compliantVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45649,
                                    "src": "7843:14:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                      "typeString": "contract StakingProxyConvex"
                                    }
                                  },
                                  "id": 46130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7858:5:81",
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40930,
                                  "src": "7843:20:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 46131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7843:22:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 46132,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7842:24:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 46133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7867:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "7842:29:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 46134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7872:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7842:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cf3d44ebb6df2abfe9685702ef4a345d78680742532ed0121b84f0d58b49ec1c",
                          "typeString": "literal_string \"SETUP VAULT DEPLOY POST PRANK OWNER LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46125,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "7783:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7792:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "7783:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7783:96:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46136,
                  "nodeType": "ExpressionStatement",
                  "src": "7783:96:81"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4366:5:81",
            "parameters": {
              "id": 45689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4371:2:81"
            },
            "returnParameters": {
              "id": 45690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4381:0:81"
            },
            "scope": 47064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46163,
            "nodeType": "StructDefinition",
            "src": "7966:400:81",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 46140,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "7999:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "7993:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 46139,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "7993:5:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46142,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "8023:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8015:14:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8015:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46144,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "8047:12:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8039:20:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46143,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8039:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46146,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "8077:13:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8069:21:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46145,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8069:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46148,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "8108:19:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8100:27:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46147,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8100:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46150,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "8145:19:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8137:27:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46149,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8137:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46152,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "8182:20:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8174:28:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46151,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8174:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46154,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "8220:21:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8212:29:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46153,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8212:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46156,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "8259:21:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8251:29:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 46155,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "8251:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46158,
                "mutability": "mutable",
                "name": "senderKek",
                "nameLocation": "8298:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8290:17:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 46157,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "8290:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46160,
                "mutability": "mutable",
                "name": "destKek1",
                "nameLocation": "8325:8:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8317:16:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 46159,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "8317:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46162,
                "mutability": "mutable",
                "name": "destKek2",
                "nameLocation": "8351:8:81",
                "nodeType": "VariableDeclaration",
                "scope": 46163,
                "src": "8343:16:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 46161,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "8343:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "7973:9:81",
            "scope": 47064,
            "visibility": "public"
          },
          {
            "id": 46665,
            "nodeType": "FunctionDefinition",
            "src": "8372:5248:81",
            "nodes": [],
            "body": {
              "id": 46664,
              "nodeType": "Block",
              "src": "8402:5218:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46168,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "8429:1:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46664,
                      "src": "8412:18:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 46167,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46166,
                          "name": "TestState",
                          "nameLocations": [
                            "8412:9:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46163,
                          "src": "8412:9:81"
                        },
                        "referencedDeclaration": 46163,
                        "src": "8412:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46169,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8412:18:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 46171,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45623,
                            "src": "8518:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          },
                          "id": 46172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8530:14:81",
                          "memberName": "stakingAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40932,
                          "src": "8518:26:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 46173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8518:28:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46176,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45580,
                            "src": "8556:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          ],
                          "id": 46175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8548:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8548:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8548:16:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207374616b696e672061646472657373",
                        "id": 46178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8566:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        },
                        "value": "invalid staking address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6982359204fcfee526ba7994ee026542b42b1435c5ccedc31e19cf119cde2ae",
                          "typeString": "literal_string \"invalid staking address\""
                        }
                      ],
                      "id": 46170,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "8509:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 46179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8509:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46180,
                  "nodeType": "ExpressionStatement",
                  "src": "8509:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46184,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45630,
                        "src": "8668:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46181,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8654:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8657:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "8654:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8654:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46186,
                  "nodeType": "ExpressionStatement",
                  "src": "8654:26:81"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 46196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8782:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 46194,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8758:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8762:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "8758:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8758:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46187,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "8722:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8735:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8722:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8747:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 46191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8752:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "8747:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "8722:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8722:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 46199,
                  "nodeType": "ExpressionStatement",
                  "src": "8722:72:81"
                },
                {
                  "expression": {
                    "id": 46212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46200,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "8806:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "8808:6:81",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46140,
                          "src": "8806:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 46203,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "8804:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 46208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8854:20:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "id": 46209,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45630,
                              "src": "8876:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 46206,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8830:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 46207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8834:19:81",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "8830:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 46210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8830:58:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46204,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45562,
                          "src": "8818:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8825:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8818:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8818:71:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "8804:85:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46213,
                  "nodeType": "ExpressionStatement",
                  "src": "8804:85:81"
                },
                {
                  "expression": {
                    "id": 46225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46214,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "8899:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8901:6:81",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46142,
                      "src": "8899:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 46219,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "8921:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46220,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8923:6:81",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46140,
                          "src": "8921:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 46222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8932:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46221,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8932:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 46223,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8931:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 46217,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "8910:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 46218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8914:6:81",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "8910:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8910:31:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8899:42:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46226,
                  "nodeType": "ExpressionStatement",
                  "src": "8899:42:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46228,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "8960:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46229,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8962:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46142,
                        "src": "8960:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8970:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 46231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8982:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 46227,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8951:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8951:60:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46233,
                  "nodeType": "ExpressionStatement",
                  "src": "8951:60:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784574682062616c616e6365",
                        "id": 46237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9034:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        "value": "frxEth balance"
                      },
                      {
                        "expression": {
                          "id": 46238,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "9052:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9054:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46142,
                        "src": "9052:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_866582927116f01441be365c086e4fe913b01903f54f390282b0b701b9900142",
                          "typeString": "literal_string \"frxEth balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46234,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9021:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9030:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9021:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9021:40:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46241,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:40:81"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 46249,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45586,
                        "src": "9156:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9176:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46251,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9176:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46250,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9171:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9171:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9185:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9171:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46245,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45562,
                                "src": "9139:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9131:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46243,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9131:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9131:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46242,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "9121:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9121:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9148:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45524,
                      "src": "9121:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9121:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46256,
                  "nodeType": "ExpressionStatement",
                  "src": "9121:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9247:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9239:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46261,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9239:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9239:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9259:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9251:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46265,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9251:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9251:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46269,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9238:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9273:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46258,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45586,
                            "src": "9209:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46257,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "9199:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9199:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9224:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45508,
                      "src": "9199:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9199:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46272,
                  "nodeType": "ExpressionStatement",
                  "src": "9199:84:81"
                },
                {
                  "expression": {
                    "id": 46282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46273,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "9293:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9295:6:81",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46142,
                      "src": "9293:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46280,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45630,
                          "src": "9335:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46277,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45565,
                              "src": "9314:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46276,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45544,
                            "src": "9304:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9304:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45544",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9325:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45515,
                        "src": "9304:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9304:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9293:54:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46283,
                  "nodeType": "ExpressionStatement",
                  "src": "9293:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9370:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "expression": {
                          "id": 46288,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "9391:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9393:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46142,
                        "src": "9391:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46284,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9357:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9366:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9357:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:43:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46291,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46293,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "9419:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9421:6:81",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46142,
                        "src": "9419:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9429:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9440:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46292,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "9410:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9410:70:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46298,
                  "nodeType": "ExpressionStatement",
                  "src": "9410:70:81"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 46309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46299,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "9620:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9622:12:81",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46144,
                      "src": "9620:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46306,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45623,
                              "src": "9674:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9666:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9666:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9666:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46302,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "9637:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9645:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "9637:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9637:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9620:67:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46310,
                  "nodeType": "ExpressionStatement",
                  "src": "9620:67:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7072652d6164642023206c6f636b73",
                        "id": 46314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9710:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        "value": "pre-add # locks"
                      },
                      {
                        "expression": {
                          "id": 46315,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "9729:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9731:12:81",
                        "memberName": "senderPreAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46144,
                        "src": "9729:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9925b47e8ef30cda4f43f7ef3445cbb3061d4b58561d85e4428fe0a5970bd173",
                          "typeString": "literal_string \"pre-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46311,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9697:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9706:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "9697:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9697:47:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46318,
                  "nodeType": "ExpressionStatement",
                  "src": "9697:47:81"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "id": 46334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46319,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "9788:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46321,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9790:9:81",
                      "memberName": "senderKek",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46158,
                      "src": "9788:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 46324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9833:9:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 46331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 46329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 46327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 46325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9845:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 46326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9848:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "9845:5:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 46328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9851:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "9845:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 46330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9854:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "9845:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 46332,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9844:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 46322,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45623,
                          "src": "9802:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9814:18:81",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41879,
                        "src": "9802:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256) external returns (bytes32)"
                        }
                      },
                      "id": 46333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9802:57:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9788:71:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 46335,
                  "nodeType": "ExpressionStatement",
                  "src": "9788:71:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9882:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46336,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9869:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9878:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "9869:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9869:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46341,
                  "nodeType": "ExpressionStatement",
                  "src": "9869:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46345,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "9922:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9924:9:81",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46158,
                        "src": "9922:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46342,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9902:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9911:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "9902:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9902:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46348,
                  "nodeType": "ExpressionStatement",
                  "src": "9902:32:81"
                },
                {
                  "expression": {
                    "id": 46359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46349,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "9944:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9946:13:81",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46146,
                      "src": "9944:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46356,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45623,
                              "src": "9999:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9991:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9991:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9991:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46352,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "9962:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9970:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "9962:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9962:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9944:68:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46360,
                  "nodeType": "ExpressionStatement",
                  "src": "9944:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f73742d6164642023206c6f636b73",
                        "id": 46364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10035:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        "value": "post-add # locks"
                      },
                      {
                        "expression": {
                          "id": 46365,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "10055:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10057:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46146,
                        "src": "10055:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_07e95532cec69c86df515a94e36072803d42a6d6c27831c1000326b194ec0abd",
                          "typeString": "literal_string \"post-add # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46361,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10022:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10031:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10022:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10022:49:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46368,
                  "nodeType": "ExpressionStatement",
                  "src": "10022:49:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46370,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "10090:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10092:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46146,
                        "src": "10090:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46372,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "10107:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10109:12:81",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46144,
                          "src": "10107:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 46374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10124:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10107:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 46376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10127:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 46369,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10081:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46378,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10238:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46379,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "10233:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10233:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46382,
                  "nodeType": "ExpressionStatement",
                  "src": "10233:12:81"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 46393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46383,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "10325:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46385,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10327:20:81",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46152,
                      "src": "10325:22:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46390,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45636,
                              "src": "10387:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10379:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10379:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10379:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46386,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "10350:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10358:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "10350:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10350:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10325:77:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46394,
                  "nodeType": "ExpressionStatement",
                  "src": "10325:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265636569766572206265666f726520726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10425:45:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        "value": "Receiver before receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46399,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "10472:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10474:20:81",
                        "memberName": "receiverPreTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46152,
                        "src": "10472:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3a1a7c32b8d98cf209ae6655e5074bd8c54bb83a096a79e340a70551002a2340",
                          "typeString": "literal_string \"Receiver before receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46395,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10412:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10421:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10412:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10412:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46402,
                  "nodeType": "ExpressionStatement",
                  "src": "10412:83:81"
                },
                {
                  "expression": {
                    "id": 46421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46403,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "10600:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "10602:8:81",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46160,
                          "src": "10600:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46406,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "10597:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46411,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45636,
                              "src": "10649:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10641:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46409,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10641:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10641:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46413,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "10665:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10667:9:81",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46158,
                          "src": "10665:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10678:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10696:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10688:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 46416,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10688:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10688:10:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46407,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45623,
                          "src": "10614:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10626:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42318,
                        "src": "10614:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10614:85:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "10597:102:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46422,
                  "nodeType": "ExpressionStatement",
                  "src": "10597:102:81"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 46433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46423,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "10817:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10819:19:81",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46148,
                      "src": "10817:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46430,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45623,
                              "src": "10878:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10870:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46428,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10870:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10870:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46426,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "10841:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10849:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "10841:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10841:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10817:74:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46434,
                  "nodeType": "ExpressionStatement",
                  "src": "10817:74:81"
                },
                {
                  "expression": {
                    "id": 46445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46435,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "10901:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10903:21:81",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46154,
                      "src": "10901:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46442,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45636,
                              "src": "10964:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10956:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46440,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10956:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10956:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46438,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "10927:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10935:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "10927:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10927:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10901:78:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46446,
                  "nodeType": "ExpressionStatement",
                  "src": "10901:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572312023206c6f636b73",
                        "id": 46450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11002:40:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        "value": "Sender after sending transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46451,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11044:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11046:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46148,
                        "src": "11044:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03608d805b680bc0b15dfc34a14494e9f4b3d03dddf61e1ab07bb096f20e9c64",
                          "typeString": "literal_string \"Sender after sending transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46447,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10989:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10998:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "10989:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10989:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46454,
                  "nodeType": "ExpressionStatement",
                  "src": "10989:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220416674657220726563656976696e67207472616e73666572312023206c6f636b73",
                        "id": 46458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11089:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        "value": "Receiver After receiving transfer1 # locks"
                      },
                      {
                        "expression": {
                          "id": 46459,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11135:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46460,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11137:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46154,
                        "src": "11135:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_78dd8599e2d93690ef5592f0dce4a932d2d2b9f8408e03e66934669c22d367ff",
                          "typeString": "literal_string \"Receiver After receiving transfer1 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46455,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "11076:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11085:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "11076:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11076:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46462,
                  "nodeType": "ExpressionStatement",
                  "src": "11076:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46464,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11178:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46465,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11180:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46148,
                        "src": "11178:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46466,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11201:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46467,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11203:13:81",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46146,
                        "src": "11201:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 46468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11218:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 46463,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11169:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11169:83:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46470,
                  "nodeType": "ExpressionStatement",
                  "src": "11169:83:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46472,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11271:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11273:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46154,
                        "src": "11271:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 46477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 46474,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46168,
                                "src": "11297:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 46475,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11299:20:81",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46152,
                              "src": "11297:22:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 46476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11322:1:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11297:26:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46478,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11296:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 46479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11326:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 46471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11262:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11262:99:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46481,
                  "nodeType": "ExpressionStatement",
                  "src": "11262:99:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46482,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "11549:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11552:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "11549:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11549:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46486,
                  "nodeType": "ExpressionStatement",
                  "src": "11549:17:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46492,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45636,
                            "src": "11611:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11603:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11603:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11603:22:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46494,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "11627:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46495,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11629:9:81",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46158,
                        "src": "11627:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11640:8:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303130663263",
                        "id": 46497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11650:66:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        },
                        "value": "0x0000000000000000000000000000000000000000000000000000000000010f2c"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_69420_by_1",
                          "typeString": "int_const 69420"
                        }
                      ],
                      "expression": {
                        "id": 46487,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45623,
                        "src": "11576:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11588:14:81",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42318,
                      "src": "11576:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                      }
                    },
                    "id": 46498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11576:141:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "id": 46499,
                  "nodeType": "ExpressionStatement",
                  "src": "11576:141:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11778:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46500,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "11773:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11773:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46503,
                  "nodeType": "ExpressionStatement",
                  "src": "11773:12:81"
                },
                {
                  "documentation": "TODO Commented out due to stack too deep with all the placeholders above while troubleshooting.\n transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46509,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45636,
                                "src": "12037:13:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12029:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46507,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12029:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12029:22:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46505,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45580,
                            "src": "12000:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12008:20:81",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43196,
                          "src": "12000:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12000:52:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46512,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12054:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46513,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12056:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46154,
                        "src": "12054:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12079:46:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 46504,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11991:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11991:135:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46516,
                  "nodeType": "ExpressionStatement",
                  "src": "11991:135:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46522,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45623,
                                "src": "12182:11:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 46521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12174:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12174:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12174:20:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46518,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45580,
                            "src": "12145:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                              "typeString": "contract FraxUnifiedFarm_ERC20"
                            }
                          },
                          "id": 46519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12153:20:81",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43196,
                          "src": "12145:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12145:50:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46525,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12197:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46526,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12199:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46148,
                        "src": "12197:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 46527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12220:44:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 46517,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12136:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12136:129:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46529,
                  "nodeType": "ExpressionStatement",
                  "src": "12136:129:81"
                },
                {
                  "expression": {
                    "id": 46546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 46530,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "12329:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46532,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "12331:8:81",
                          "memberName": "destKek2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46162,
                          "src": "12329:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46533,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12326:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46538,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45636,
                              "src": "12378:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12370:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12370:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12370:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 46540,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "12394:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46541,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12396:9:81",
                          "memberName": "senderKek",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46158,
                          "src": "12394:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12407:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "expression": {
                            "id": 46543,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46168,
                            "src": "12417:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 46544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12419:8:81",
                          "memberName": "destKek1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46160,
                          "src": "12417:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 46534,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45623,
                          "src": "12343:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12355:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42318,
                        "src": "12343:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12343:85:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "12326:102:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46547,
                  "nodeType": "ExpressionStatement",
                  "src": "12326:102:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "426f7468206b656b496473",
                        "id": 46551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12540:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        },
                        "value": "Both kekIds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8ad57cc5db6ce4df21b12264958df46a50ed8b5f0a0e5510f2875c37e4464b00",
                          "typeString": "literal_string \"Both kekIds\""
                        }
                      ],
                      "expression": {
                        "id": 46548,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12527:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12536:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "12527:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12527:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46553,
                  "nodeType": "ExpressionStatement",
                  "src": "12527:27:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46557,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12584:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46558,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12586:8:81",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46160,
                        "src": "12584:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46554,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12564:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12573:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "12564:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12564:31:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46560,
                  "nodeType": "ExpressionStatement",
                  "src": "12564:31:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46564,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12625:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12627:8:81",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46162,
                        "src": "12625:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46561,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12605:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12614:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "12605:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12605:31:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46567,
                  "nodeType": "ExpressionStatement",
                  "src": "12605:31:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46569,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12655:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46570,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12657:8:81",
                        "memberName": "destKek1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46160,
                        "src": "12655:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 46571,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "12667:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12669:8:81",
                        "memberName": "destKek2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46162,
                        "src": "12667:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "6661696c656420746f2073656e6420746f2073616d65206b656b4964",
                        "id": 46573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12679:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        },
                        "value": "failed to send to same kekId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c68f5e79892bc39c62e949cdfdc3d1646f0b39fdd8eb22ba004016fa0047502b",
                          "typeString": "literal_string \"failed to send to same kekId\""
                        }
                      ],
                      "id": 46568,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 400,
                      "src": "12646:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory)"
                      }
                    },
                    "id": 46574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12646:64:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46575,
                  "nodeType": "ExpressionStatement",
                  "src": "12646:64:81"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 46586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46576,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "12817:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12819:19:81",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46150,
                      "src": "12817:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46583,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45623,
                              "src": "12878:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12870:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46581,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12870:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12870:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46579,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "12841:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12849:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "12841:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12841:50:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12817:74:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46587,
                  "nodeType": "ExpressionStatement",
                  "src": "12817:74:81"
                },
                {
                  "expression": {
                    "id": 46598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 46588,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46168,
                        "src": "12901:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 46590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12903:21:81",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46156,
                      "src": "12901:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46595,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45636,
                              "src": "12964:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12956:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46593,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12956:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12956:22:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 46591,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45580,
                          "src": "12927:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_$44915",
                            "typeString": "contract FraxUnifiedFarm_ERC20"
                          }
                        },
                        "id": 46592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12935:20:81",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43196,
                        "src": "12927:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12927:52:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12901:78:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46599,
                  "nodeType": "ExpressionStatement",
                  "src": "12901:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e6465722061667465722073656e64696e67207472616e73666572322023206c6f636b73",
                        "id": 46603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13002:40:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        "value": "Sender after sending transfer2 # locks"
                      },
                      {
                        "expression": {
                          "id": 46604,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13044:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46605,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13046:19:81",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46150,
                        "src": "13044:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_93ab758b641f958c214c827ee2954a256fc119ba66f950503cba0569584be7cb",
                          "typeString": "literal_string \"Sender after sending transfer2 # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46600,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "12989:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12998:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "12989:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12989:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46607,
                  "nodeType": "ExpressionStatement",
                  "src": "12989:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "526563656976657220706f7374207472616e7366657220322c2023206c6f636b73",
                        "id": 46611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13089:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        "value": "Receiver post transfer 2, # locks"
                      },
                      {
                        "expression": {
                          "id": 46612,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13126:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46613,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13128:21:81",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46156,
                        "src": "13126:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_308e30e1bef8f54b4d42c1a34b16dac5861adde4d5d5f5c0ad2ea4cde0d4321e",
                          "typeString": "literal_string \"Receiver post transfer 2, # locks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46608,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "13076:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13085:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "13076:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13076:74:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46615,
                  "nodeType": "ExpressionStatement",
                  "src": "13076:74:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46617,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13169:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46618,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13171:19:81",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46150,
                        "src": "13169:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46619,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13192:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46620,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13194:19:81",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46148,
                        "src": "13192:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13215:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 46616,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13160:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13160:91:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46623,
                  "nodeType": "ExpressionStatement",
                  "src": "13160:91:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46625,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13270:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46626,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13272:21:81",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46156,
                        "src": "13270:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 46627,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13295:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46628,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13297:21:81",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46154,
                        "src": "13295:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 46629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13320:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 46624,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13261:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13261:97:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46631,
                  "nodeType": "ExpressionStatement",
                  "src": "13261:97:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46632,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "13442:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13445:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "13442:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13442:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46636,
                  "nodeType": "ExpressionStatement",
                  "src": "13442:17:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46642,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45559,
                            "src": "13504:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13496:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13496:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13496:12:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46644,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46168,
                          "src": "13510:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$46163_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 46645,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13512:9:81",
                        "memberName": "senderKek",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46158,
                        "src": "13510:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13523:8:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 46649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13541:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 46648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13533:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 46647,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "13533:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13533:10:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46637,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45623,
                        "src": "13469:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13481:14:81",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42318,
                      "src": "13469:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                      }
                    },
                    "id": 46651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13469:75:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "id": 46652,
                  "nodeType": "ExpressionStatement",
                  "src": "13469:75:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46653,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "13555:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13558:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "13555:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13555:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46657,
                  "nodeType": "ExpressionStatement",
                  "src": "13555:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4532452054657374205375636365737321",
                        "id": 46661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13593:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        },
                        "value": "E2E Test Success!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        }
                      ],
                      "expression": {
                        "id": 46658,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "13580:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13589:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "13580:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13580:33:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46663,
                  "nodeType": "ExpressionStatement",
                  "src": "13580:33:81"
                }
              ]
            },
            "functionSelector": "185a8d73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEnd2End",
            "nameLocation": "8381:11:81",
            "parameters": {
              "id": 46164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8392:2:81"
            },
            "returnParameters": {
              "id": 46165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8402:0:81"
            },
            "scope": 47064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46832,
            "nodeType": "FunctionDefinition",
            "src": "13626:1356:81",
            "nodes": [],
            "body": {
              "id": 46831,
              "nodeType": "Block",
              "src": "13676:1306:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46671,
                        "name": "senderOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45630,
                        "src": "13700:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46668,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "13686:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13689:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "13686:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13686:26:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46673,
                  "nodeType": "ExpressionStatement",
                  "src": "13686:26:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 46683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13783:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 46681,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13759:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13763:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13759:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13759:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46674,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "13723:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13736:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "13723:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13748:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 46678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13753:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "13748:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "13723:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13723:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 46686,
                  "nodeType": "ExpressionStatement",
                  "src": "13723:72:81"
                },
                {
                  "assignments": [
                    null,
                    46688
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 46688,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "13820:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46831,
                      "src": "13807:19:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46687,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13807:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46697,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 46693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13866:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 46694,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45630,
                            "src": "13888:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46691,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13842:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13846:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13842:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13842:58:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46689,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45562,
                        "src": "13830:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 46690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13837:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "13830:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13830:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13805:96:81"
                },
                {
                  "assignments": [
                    46699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46699,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "13919:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46831,
                      "src": "13911:14:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13911:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46707,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46702,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46688,
                        "src": "13939:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13948:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 46703,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13948:7:81",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 46705,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13947:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 46700,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13928:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13932:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "13928:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13928:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13911:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46709,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46699,
                        "src": "13976:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13984:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 46711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13996:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 46708,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13967:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13967:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46713,
                  "nodeType": "ExpressionStatement",
                  "src": "13967:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46721,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45586,
                        "src": "14119:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14139:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46723,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14139:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46722,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "14134:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14134:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "14148:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "14134:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46717,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45562,
                                "src": "14102:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14094:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46715,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14094:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14094:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46714,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "14084:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14084:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14111:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45524,
                      "src": "14084:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14084:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46728,
                  "nodeType": "ExpressionStatement",
                  "src": "14084:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14210:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14202:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46733,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14202:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14202:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14222:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14214:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46737,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14214:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14214:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46741,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14201:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14236:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46730,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45586,
                            "src": "14172:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46729,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "14162:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14162:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14187:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45508,
                      "src": "14162:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14162:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46744,
                  "nodeType": "ExpressionStatement",
                  "src": "14162:84:81"
                },
                {
                  "expression": {
                    "id": 46752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46745,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46699,
                      "src": "14256:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46750,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45630,
                          "src": "14296:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46747,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45565,
                              "src": "14275:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46746,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45544,
                            "src": "14265:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14265:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45544",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14286:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45515,
                        "src": "14265:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14265:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14256:52:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46753,
                  "nodeType": "ExpressionStatement",
                  "src": "14256:52:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14331:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "id": 46758,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46699,
                        "src": "14352:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46754,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "14318:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14327:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "14318:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14318:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46760,
                  "nodeType": "ExpressionStatement",
                  "src": "14318:41:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46762,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46699,
                        "src": "14378:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14386:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14397:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46761,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "14369:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14369:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46766,
                  "nodeType": "ExpressionStatement",
                  "src": "14369:68:81"
                },
                {
                  "assignments": [
                    46768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46768,
                      "mutability": "mutable",
                      "name": "lockKek",
                      "nameLocation": "14488:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46831,
                      "src": "14480:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46767,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14480:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46781,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 46771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14529:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 46778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 46776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 46774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 46772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14541:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 46773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14544:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "14541:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 46775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14547:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "14541:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 46777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14550:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "14541:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 46779,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14540:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 46769,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45623,
                        "src": "14498:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14510:18:81",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41879,
                      "src": "14498:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) external returns (bytes32)"
                      }
                    },
                    "id": 46780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14498:57:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14480:75:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14578:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46782,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "14565:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14574:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "14565:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14565:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46787,
                  "nodeType": "ExpressionStatement",
                  "src": "14565:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46791,
                        "name": "lockKek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46768,
                        "src": "14618:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46788,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "14598:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14607:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "14598:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14598:28:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46793,
                  "nodeType": "ExpressionStatement",
                  "src": "14598:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14642:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 46794,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "14637:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14637:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46797,
                  "nodeType": "ExpressionStatement",
                  "src": "14637:12:81"
                },
                {
                  "assignments": [
                    46799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46799,
                      "mutability": "mutable",
                      "name": "destKek",
                      "nameLocation": "14668:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46831,
                      "src": "14660:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46798,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14660:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46800,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14660:15:81"
                },
                {
                  "documentation": "Test sending to a non-compliant vault owner ///// ",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46801,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "14749:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14752:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "14749:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14749:17:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46805,
                  "nodeType": "ExpressionStatement",
                  "src": "14749:17:81"
                },
                {
                  "expression": {
                    "id": 46818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 46806,
                          "name": "destKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46799,
                          "src": "14779:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 46807,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14776:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46812,
                              "name": "nonCompliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45646,
                              "src": "14825:17:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 46811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14817:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46810,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14817:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14817:26:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46814,
                          "name": "lockKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46768,
                          "src": "14845:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 46815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14854:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "",
                          "id": 46816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14864:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 46808,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45623,
                          "src": "14790:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 46809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14802:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42318,
                        "src": "14790:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 46817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14790:77:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "14776:91:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46819,
                  "nodeType": "ExpressionStatement",
                  "src": "14776:91:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46820,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "14878:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14881:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "14878:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14878:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46824,
                  "nodeType": "ExpressionStatement",
                  "src": "14878:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d206e6f6e2d636f6d706c69616e74207661756c74204641494c53206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 46828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14916:58:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        },
                        "value": "PASS = non-compliant vault FAILS on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_64ec7fe1be728477308ccfa48f5557c91f8687b8e99e47d1efbcc20894bc873f",
                          "typeString": "literal_string \"PASS = non-compliant vault FAILS on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 46825,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "14903:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14912:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "14903:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14903:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46830,
                  "nodeType": "ExpressionStatement",
                  "src": "14903:72:81"
                }
              ]
            },
            "functionSelector": "6ddd7969",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNonOnLockReceivedCompliance",
            "nameLocation": "13635:31:81",
            "parameters": {
              "id": 46666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13666:2:81"
            },
            "returnParameters": {
              "id": 46667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13676:0:81"
            },
            "scope": 47064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47063,
            "nodeType": "FunctionDefinition",
            "src": "14988:1789:81",
            "nodes": [],
            "body": {
              "id": 47062,
              "nodeType": "Block",
              "src": "15040:1737:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46840,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45630,
                            "src": "15072:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15064:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15064:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15064:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46835,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "15050:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15053:10:81",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "15050:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15050:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46843,
                  "nodeType": "ExpressionStatement",
                  "src": "15050:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 46853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15156:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 46851,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15132:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15136:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15132:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15132:35:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 46844,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45598,
                          "src": "15096:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15109:4:81",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "15096:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 46850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15121:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 46848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15126:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "15121:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "15096:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15096:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 46856,
                  "nodeType": "ExpressionStatement",
                  "src": "15096:72:81"
                },
                {
                  "assignments": [
                    null,
                    46858
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 46858,
                      "mutability": "mutable",
                      "name": "retval",
                      "nameLocation": "15193:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47062,
                      "src": "15180:19:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46857,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15180:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46867,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62616c616e63654f66286164647265737329",
                            "id": 46863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15239:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            "value": "balanceOf(address)"
                          },
                          {
                            "id": 46864,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45630,
                            "src": "15261:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                              "typeString": "literal_string \"balanceOf(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46861,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15215:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15219:19:81",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15215:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 46865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15215:58:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 46859,
                        "name": "frxEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45562,
                        "src": "15203:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 46860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15210:4:81",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "15203:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 46866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15203:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15178:96:81"
                },
                {
                  "assignments": [
                    46869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46869,
                      "mutability": "mutable",
                      "name": "retbal",
                      "nameLocation": "15292:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47062,
                      "src": "15284:14:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15284:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46877,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46872,
                        "name": "retval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46858,
                        "src": "15312:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 46874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15321:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 46873,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15321:7:81",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 46875,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15320:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 46870,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15301:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "15305:6:81",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "15301:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 46876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15301:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15284:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46879,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46869,
                        "src": "15349:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15357:10:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 46881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15369:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 46878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15340:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15340:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46883,
                  "nodeType": "ExpressionStatement",
                  "src": "15340:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46891,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45586,
                        "src": "15492:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15512:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46893,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15512:7:81",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 46892,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "15507:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15507:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 46896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15521:3:81",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "15507:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46887,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45562,
                                "src": "15475:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15467:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46885,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15467:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15467:15:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46884,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "15457:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15457:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15484:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45524,
                      "src": "15457:34:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15457:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46898,
                  "nodeType": "ExpressionStatement",
                  "src": "15457:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15583:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15575:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46903,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15575:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15575:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 46909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15595:10:81",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 46908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15587:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 46907,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15587:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15587:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 46911,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15574:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15609:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 46900,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45586,
                            "src": "15545:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46899,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45544,
                          "src": "15535:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 46901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15535:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$45544",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 46902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15560:13:81",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45508,
                      "src": "15535:38:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 46913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15535:84:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46914,
                  "nodeType": "ExpressionStatement",
                  "src": "15535:84:81"
                },
                {
                  "expression": {
                    "id": 46922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46915,
                      "name": "retbal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46869,
                      "src": "15629:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46920,
                          "name": "senderOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45630,
                          "src": "15669:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 46917,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45565,
                              "src": "15648:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46916,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45544,
                            "src": "15638:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$45544_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 46918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15638:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$45544",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 46919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15659:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45515,
                        "src": "15638:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 46921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15638:43:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15629:52:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46923,
                  "nodeType": "ExpressionStatement",
                  "src": "15629:52:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6672784554484352562062616c616e6365",
                        "id": 46927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15704:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        "value": "frxETHCRV balance"
                      },
                      {
                        "id": 46928,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46869,
                        "src": "15725:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_004424d0f3ee4d231eb97ab637390cab4897ec766c894fef664320266fba9627",
                          "typeString": "literal_string \"frxETHCRV balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46924,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "15691:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15700:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "15691:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 46929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15691:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46930,
                  "nodeType": "ExpressionStatement",
                  "src": "15691:41:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46932,
                        "name": "retbal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46869,
                        "src": "15751:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 46933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15759:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 46934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15770:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 46931,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "15742:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15742:68:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46936,
                  "nodeType": "ExpressionStatement",
                  "src": "15742:68:81"
                },
                {
                  "assignments": [
                    46938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46938,
                      "mutability": "mutable",
                      "name": "lockKek",
                      "nameLocation": "15861:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47062,
                      "src": "15853:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46937,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15853:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46951,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "393930",
                        "id": 46941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15902:9:81",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            },
                            "id": 46948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "id": 46946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "id": 46944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 46942,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15914:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3630",
                                  "id": 46943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15917:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "src": "15914:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 46945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15920:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_24_by_1",
                                  "typeString": "int_const 24"
                                },
                                "value": "24"
                              },
                              "src": "15914:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "333030",
                              "id": 46947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15923:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_300_by_1",
                                "typeString": "int_const 300"
                              },
                              "value": "300"
                            },
                            "src": "15914:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25920000_by_1",
                              "typeString": "int_const 25920000"
                            }
                          }
                        ],
                        "id": 46949,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15913:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_25920000_by_1",
                          "typeString": "int_const 25920000"
                        }
                      ],
                      "expression": {
                        "id": 46939,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45623,
                        "src": "15871:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 46940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15883:18:81",
                      "memberName": "stakeLockedCurveLp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41879,
                      "src": "15871:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) external returns (bytes32)"
                      }
                    },
                    "id": 46950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15871:57:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15853:75:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f636b4b656b",
                        "id": 46955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15951:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        },
                        "value": "lockKek"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9022872ba8d7abd68fb9b5b529f7b35816fc92f0f18bb30ad7995b3b8e5de80",
                          "typeString": "literal_string \"lockKek\""
                        }
                      ],
                      "expression": {
                        "id": 46952,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "15938:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15947:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "15938:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 46956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15938:23:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46957,
                  "nodeType": "ExpressionStatement",
                  "src": "15938:23:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46961,
                        "name": "lockKek",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46938,
                        "src": "15991:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 46958,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "15971:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15980:10:81",
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17516,
                      "src": "15971:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 46962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15971:28:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46963,
                  "nodeType": "ExpressionStatement",
                  "src": "15971:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6d706c69616e74205661756c742041646472657373",
                        "id": 46967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16023:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54e27e7381b9df25c8963758c1ec8ca2773b689f98d5bb4f42816e2cf39c325b",
                          "typeString": "literal_string \"Compliant Vault Address\""
                        },
                        "value": "Compliant Vault Address"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46970,
                            "name": "compliantVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45649,
                            "src": "16058:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 46969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16050:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16050:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16050:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_54e27e7381b9df25c8963758c1ec8ca2773b689f98d5bb4f42816e2cf39c325b",
                          "typeString": "literal_string \"Compliant Vault Address\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46964,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16010:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16019:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "16010:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16010:64:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46973,
                  "nodeType": "ExpressionStatement",
                  "src": "16010:64:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6d706c69616e74205661756c74204f776e65722041646472657373",
                        "id": 46977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16097:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71fabb4691977ea98716a25f9f6f2d707273148741626344140acfd0fbc5fbae",
                          "typeString": "literal_string \"Compliant Vault Owner Address\""
                        },
                        "value": "Compliant Vault Owner Address"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46980,
                                "name": "compliantVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45649,
                                "src": "16138:14:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              },
                              "id": 46981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16153:5:81",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40930,
                              "src": "16138:20:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 46982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16138:22:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16130:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16130:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16130:31:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_71fabb4691977ea98716a25f9f6f2d707273148741626344140acfd0fbc5fbae",
                          "typeString": "literal_string \"Compliant Vault Owner Address\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46974,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16084:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16093:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "16084:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16084:78:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46985,
                  "nodeType": "ExpressionStatement",
                  "src": "16084:78:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c744f776e65722041646472657373",
                        "id": 46989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16185:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb48a5f12e28f9272f88368a8c8847ee059a664302264159ed4d7c8cd08e2f77",
                          "typeString": "literal_string \"VaultOwner Address\""
                        },
                        "value": "VaultOwner Address"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46992,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45555,
                            "src": "16215:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 46991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16207:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46990,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16207:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16207:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bb48a5f12e28f9272f88368a8c8847ee059a664302264159ed4d7c8cd08e2f77",
                          "typeString": "literal_string \"VaultOwner Address\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46986,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16172:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16181:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "16172:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 46994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16172:55:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46995,
                  "nodeType": "ExpressionStatement",
                  "src": "16172:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572",
                        "id": 46999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16250:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_168e92ce035ba45e59a0314b0ed9a9e619b284aed8f6e5ab0a596efd5c9f5cf9",
                          "typeString": "literal_string \"sender\""
                        },
                        "value": "sender"
                      },
                      {
                        "arguments": [
                          {
                            "id": 47002,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45623,
                            "src": "16268:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 47001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16260:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47000,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16260:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16260:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_168e92ce035ba45e59a0314b0ed9a9e619b284aed8f6e5ab0a596efd5c9f5cf9",
                          "typeString": "literal_string \"sender\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46996,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16237:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 46998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16246:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "16237:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 47004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16237:44:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47005,
                  "nodeType": "ExpressionStatement",
                  "src": "16237:44:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7661756c74496d706c2020434f4445204c454e475448",
                        "id": 47009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16304:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d6d2abb2a33a17bfee1ca6e377a75b282c3e1f59c7d85ad5908b070355a21c4",
                          "typeString": "literal_string \"vaultImpl  CODE LENGTH\""
                        },
                        "value": "vaultImpl  CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 47012,
                                "name": "vaultImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45655,
                                "src": "16338:9:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16330:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47010,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16330:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16330:18:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 47014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16349:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "16330:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 47015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16354:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "16330:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d6d2abb2a33a17bfee1ca6e377a75b282c3e1f59c7d85ad5908b070355a21c4",
                          "typeString": "literal_string \"vaultImpl  CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47006,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16291:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16300:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "16291:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 47016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16291:70:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47017,
                  "nodeType": "ExpressionStatement",
                  "src": "16291:70:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5641554c544f574e4552205052454445504c4f5920434f4445204c454e475448",
                        "id": 47021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16384:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        "value": "VAULTOWNER PREDEPLOY CODE LENGTH"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 47024,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45555,
                                "src": "16428:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVaultOwner_$47104",
                                  "typeString": "contract MockVaultOwner"
                                }
                              ],
                              "id": 47023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16420:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47022,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16420:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16420:19:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 47026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16440:4:81",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "16420:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 47027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16445:6:81",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "16420:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_82341cd979e51bf650457b2e2253c4f6883a4455e1b42bafe88da29b0e74b308",
                          "typeString": "literal_string \"VAULTOWNER PREDEPLOY CODE LENGTH\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47018,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16371:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16380:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "16371:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 47028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16371:81:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47029,
                  "nodeType": "ExpressionStatement",
                  "src": "16371:81:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 47031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16468:6:81",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 47030,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "16463:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16463:12:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47033,
                  "nodeType": "ExpressionStatement",
                  "src": "16463:12:81"
                },
                {
                  "assignments": [
                    47035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47035,
                      "mutability": "mutable",
                      "name": "destKek",
                      "nameLocation": "16494:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47062,
                      "src": "16486:15:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 47034,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16486:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47036,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16486:15:81"
                },
                {
                  "expression": {
                    "id": 47049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 47037,
                          "name": "destKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47035,
                          "src": "16580:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 47038,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16577:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes32_$",
                        "typeString": "tuple(,bytes32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 47043,
                              "name": "compliantVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45649,
                              "src": "16626:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 47042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16618:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47041,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16618:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16618:23:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 47045,
                          "name": "lockKek",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46938,
                          "src": "16643:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3130",
                          "id": 47046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16652:8:81",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "hexValue": "",
                          "id": 47047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16662:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 47039,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45623,
                          "src": "16591:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$42698",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 47040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16603:14:81",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42318,
                        "src": "16591:26:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$_t_bytes32_$",
                          "typeString": "function (address,bytes32,uint256,bytes32) external returns (bytes32,bytes32)"
                        }
                      },
                      "id": 47048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16591:74:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                        "typeString": "tuple(bytes32,bytes32)"
                      }
                    },
                    "src": "16577:88:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47050,
                  "nodeType": "ExpressionStatement",
                  "src": "16577:88:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47051,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "16676:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16679:9:81",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "16676:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16676:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47055,
                  "nodeType": "ExpressionStatement",
                  "src": "16676:14:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50415353203d20636f6d706c69616e74207661756c7420504153534553206f6e206f6e4c6f636b526563656976656420636865636b",
                        "id": 47059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16714:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        },
                        "value": "PASS = compliant vault PASSES on onLockReceived check"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ddeac042cd962259ed83b1407096a7aa99d33fcfc3bd9b590221053b199d982",
                          "typeString": "literal_string \"PASS = compliant vault PASSES on onLockReceived check\""
                        }
                      ],
                      "expression": {
                        "id": 47056,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "16701:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 47058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16710:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "16701:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 47060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16701:69:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47061,
                  "nodeType": "ExpressionStatement",
                  "src": "16701:69:81"
                }
              ]
            },
            "functionSelector": "f6823097",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMeetsOnLockReceivedCompliance",
            "nameLocation": "14997:33:81",
            "parameters": {
              "id": 46833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15030:2:81"
            },
            "returnParameters": {
              "id": 46834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15040:0:81"
            },
            "scope": 47064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45545,
              "name": "Test",
              "nameLocations": [
                "1140:4:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "1140:4:81"
            },
            "id": 45546,
            "nodeType": "InheritanceSpecifier",
            "src": "1140:4:81"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          42698,
          44915,
          47104
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47064,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "1110:26:81",
        "scope": 47065,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 81
}