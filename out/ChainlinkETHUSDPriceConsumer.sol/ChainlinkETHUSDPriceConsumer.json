{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234610023575b610012610095565b60405161049b6100c1823961049b90f35b61002b600080fd5b61000a565b61004490610047906001600160a01b031682565b90565b6001600160a01b031690565b61004490610030565b61004490610053565b906100756100446100919261005c565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6100b2735f4ec3df9cbd43714fe2740f5e3616155c5b841961005c565b6100bd816000610065565b5056fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80638e15f473146100405763f0141d840361000e5761003b6100a1565b61000e565b5061003b610063565b600080fd5b600091031261005957565b610061600080fd5b565b5034610094575b61007536600461004e565b6100906100806102cb565b6040519182918290815260200190565b0390f35b61009c600080fd5b61006a565b50346100d2575b6100b336600461004e565b6100906100be6103f3565b6040519182918260ff909116815260200190565b6100da600080fd5b6100a8565b6100fd905b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b6100fd90546100df565b6100e46100fd6100fd9273ffffffffffffffffffffffffffffffffffffffff1690565b6100fd9061010a565b6100fd9061012d565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176101af57604052565b6101b761013f565b604052565b69ffffffffffffffffffff81165b0361004957565b90505190610061826101bc565b806101ca565b90505190610061826101de565b919060a08382031261023e575b61020881846101d1565b9261021682602083016101e4565b926100fd61022784604085016101e4565b9361023581606086016101e4565b936080016101d1565b610246600080fd5b6101fe565b506040513d6000823e3d90fd5b6100fd6100fd6100fd9290565b1561026c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636861696e6c696e6b2070726963650000000000000000006044820152606490fd5b6102fa60a06102e26102dd6000610100565b610136565b63feaf968c906102f160405190565b93849260e01b90565b825260049082905afa80156103b3575b60009081908190819061037c575b6100fd93945060009261032a84610258565b861215938461035d575b505082610343575b5050610265565b69ffffffffffffffffffff9081169250161015388061033c565b919350906103729061036e90610258565b9190565b1415913880610334565b505050506103a36100fd9160a03d81116103ac575b61039b818361016f565b8101906101f1565b91509192610318565b503d610391565b6103bb61024b565b61030a565b60ff81166101ca565b90505190610061826103c0565b906100fd91602081830312156103c9576103ee600080fd5b6103c9565b61041460206104056102dd6000610100565b63313ce567906102f160405190565b825260049082905afa908115610458575b600091610430575090565b6100fd915060203d8111610451575b610449818361016f565b8101906103d6565b503d61043f565b61046061024b565b61042556fea2646970667358221220f909d3dbf294876ec67be499c6037f2a40fefee8c78947c3e3a595b8eb1e8ec664736f6c63430008110033",
    "sourceMap": "98:671:61:-:0;;;;;;-1:-1:-1;98:671:61;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;98:671:61;;;;;;;-1:-1:-1;;;;;98:671:61;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;98:671:61;-1:-1:-1;;;;;98:671:61;;;;;;;;;;:::o;191:116::-;235:65;257:42;235:65;:::i;:::-;223:77;;;;:::i;:::-;191:116;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610018575b610016600080fd5b005b60003560e01c80638e15f473146100405763f0141d840361000e5761003b6100a1565b61000e565b5061003b610063565b600080fd5b600091031261005957565b610061600080fd5b565b5034610094575b61007536600461004e565b6100906100806102cb565b6040519182918290815260200190565b0390f35b61009c600080fd5b61006a565b50346100d2575b6100b336600461004e565b6100906100be6103f3565b6040519182918260ff909116815260200190565b6100da600080fd5b6100a8565b6100fd905b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b6100fd90546100df565b6100e46100fd6100fd9273ffffffffffffffffffffffffffffffffffffffff1690565b6100fd9061010a565b6100fd9061012d565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff8211176101af57604052565b6101b761013f565b604052565b69ffffffffffffffffffff81165b0361004957565b90505190610061826101bc565b806101ca565b90505190610061826101de565b919060a08382031261023e575b61020881846101d1565b9261021682602083016101e4565b926100fd61022784604085016101e4565b9361023581606086016101e4565b936080016101d1565b610246600080fd5b6101fe565b506040513d6000823e3d90fd5b6100fd6100fd6100fd9290565b1561026c57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636861696e6c696e6b2070726963650000000000000000006044820152606490fd5b6102fa60a06102e26102dd6000610100565b610136565b63feaf968c906102f160405190565b93849260e01b90565b825260049082905afa80156103b3575b60009081908190819061037c575b6100fd93945060009261032a84610258565b861215938461035d575b505082610343575b5050610265565b69ffffffffffffffffffff9081169250161015388061033c565b919350906103729061036e90610258565b9190565b1415913880610334565b505050506103a36100fd9160a03d81116103ac575b61039b818361016f565b8101906101f1565b91509192610318565b503d610391565b6103bb61024b565b61030a565b60ff81166101ca565b90505190610061826103c0565b906100fd91602081830312156103c9576103ee600080fd5b6103c9565b61041460206104056102dd6000610100565b63313ce567906102f160405190565b825260049082905afa908115610458575b600091610430575090565b6100fd915060203d8111610451575b610449818361016f565b8101906103d6565b503d61043f565b61046061024b565b61042556fea2646970667358221220f909d3dbf294876ec67be499c6037f2a40fefee8c78947c3e3a595b8eb1e8ec664736f6c63430008110033",
    "sourceMap": "98:671:61:-:0;;;;;;;;;-1:-1:-1;98:671:61;;;;;-1:-1:-1;98:671:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;98:671:61;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;361:305;498:27;;:25;:9;;;:::i;:::-;:25;:::i;:::-;;:27;;98:671;;;;498:27;;;;98:671;;;;498:27;;;;;;;;;;;;;361:305;498:27;;;;;;;;;;361:305;535:93;423:102;;;552:1;543:10;;;;:::i;:::-;;;;:27;;;;361:305;543:57;;;;;361:305;535:93;;;:::i;543:57::-;98:671;;;;;-1:-1:-1;98:671:61;574:26;;543:57;;;;:27;557:9;;-1:-1:-1;557:9:61;:13;;;;;:::i;:::-;;98:671;;557:13;;;543:27;;;;;498;;;;;;535:93;498:27;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;98:671;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;672:95::-;740:20;;:18;:9;;;:::i;:18::-;;:20;;98:671;;;;740:20;;;;;;;;;;;;;;672:95;740:20;;;;733:27;672:95;:::o;740:20::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getDecimals()": "f0141d84",
    "getLatestPrice()": "8e15f473"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPrice()\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":\"ChainlinkETHUSDPriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"\",\"stackAllocation\":true}},\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/src/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d\",\"dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny\"]},\"lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol\":{\"keccak256\":\"0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd\",\"dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDecimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPrice",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getLatestPrice()": {
            "notice": "Returns the latest price"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/src/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "runs": 100000,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": ""
          }
        }
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": "ChainlinkETHUSDPriceConsumer"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol": {
        "keccak256": "0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4",
        "urls": [
          "bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d",
          "dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"
        ],
        "license": "MIT"
      },
      "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol": {
        "keccak256": "0xdd69bfcca6dba510a40ec304ea6a2228f20bc543d17048f6964496add3cfe855",
        "urls": [
          "bzz-raw://cf78e67b843503fe31cf4a26990bf750c1cb24ba1617b2e2d55bfab3010730cd",
          "dweb:/ipfs/QmZe3J5oa8Yr9oU1YqSNdzrTHnFShUqCysUD56kb4RXeqW"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/ChainlinkETHUSDPriceConsumer.sol",
    "id": 55058,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        36572
      ],
      "ChainlinkETHUSDPriceConsumer": [
        55057
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:737:61",
    "nodes": [
      {
        "id": 54996,
        "nodeType": "PragmaDirective",
        "src": "32:25:61",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".11"
        ]
      },
      {
        "id": 54997,
        "nodeType": "ImportDirective",
        "src": "59:37:61",
        "nodes": [],
        "absolutePath": "lib/frax-solidity/src/hardhat/contracts/Staking/../Oracle/AggregatorV3Interface.sol",
        "file": "./AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55058,
        "sourceUnit": 36573,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 55057,
        "nodeType": "ContractDefinition",
        "src": "98:671:61",
        "nodes": [
          {
            "id": 55000,
            "nodeType": "VariableDeclaration",
            "src": "143:40:61",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "174:9:61",
            "scope": 55057,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 54999,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54998,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "143:21:61"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36572,
                "src": "143:21:61"
              },
              "referencedDeclaration": 36572,
              "src": "143:21:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 55010,
            "nodeType": "FunctionDefinition",
            "src": "191:116:61",
            "nodes": [],
            "body": {
              "id": 55009,
              "nodeType": "Block",
              "src": "213:94:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55003,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55000,
                      "src": "223:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
                          "id": 55005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "257:42:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55004,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36572,
                        "src": "235:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$36572_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 55006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "235:65:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "223:77:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 55008,
                  "nodeType": "ExpressionStatement",
                  "src": "223:77:61"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:61"
            },
            "returnParameters": {
              "id": 55002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:61"
            },
            "scope": 55057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55046,
            "nodeType": "FunctionDefinition",
            "src": "361:305:61",
            "nodes": [],
            "body": {
              "id": 55045,
              "nodeType": "Block",
              "src": "413:253:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55017,
                    55019,
                    null,
                    55021,
                    55023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55017,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nameLocation": "431:7:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 55045,
                      "src": "424:14:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 55016,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "424:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55019,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "444:5:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 55045,
                      "src": "440:9:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 55018,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "440:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 55021,
                      "mutability": "mutable",
                      "name": "updatedAt",
                      "nameLocation": "461:9:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 55045,
                      "src": "453:17:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "453:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55023,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nameLocation": "479:15:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 55045,
                      "src": "472:22:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 55022,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "472:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55027,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55024,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55000,
                        "src": "498:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 55025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "508:15:61",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36571,
                      "src": "498:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 55026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "423:102:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 55039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 55035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 55031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 55029,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55019,
                              "src": "543:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 55030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "552:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "543:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 55034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 55032,
                              "name": "updatedAt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55021,
                              "src": "557:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 55033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "569:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "557:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "543:27:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 55038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 55036,
                            "name": "answeredInRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55023,
                            "src": "574:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 55037,
                            "name": "roundID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55017,
                            "src": "593:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "src": "574:26:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "543:57:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636861696e6c696e6b207072696365",
                        "id": 55040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "602:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
                          "typeString": "literal_string \"Invalid chainlink price\""
                        },
                        "value": "Invalid chainlink price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b838eb2b03d57c64344c196649920d623fd5c75f9bcd1c0173705b1e20f4783c",
                          "typeString": "literal_string \"Invalid chainlink price\""
                        }
                      ],
                      "id": 55028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "535:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:93:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55042,
                  "nodeType": "ExpressionStatement",
                  "src": "535:93:61"
                },
                {
                  "expression": {
                    "id": 55043,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55019,
                    "src": "654:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 55015,
                  "id": 55044,
                  "nodeType": "Return",
                  "src": "647:12:61"
                }
              ]
            },
            "documentation": {
              "id": 55011,
              "nodeType": "StructuredDocumentation",
              "src": "313:43:61",
              "text": " Returns the latest price"
            },
            "functionSelector": "8e15f473",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "370:14:61",
            "parameters": {
              "id": 55012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:61"
            },
            "returnParameters": {
              "id": 55015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55046,
                  "src": "408:3:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 55013,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "407:5:61"
            },
            "scope": 55057,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55056,
            "nodeType": "FunctionDefinition",
            "src": "672:95:61",
            "nodes": [],
            "body": {
              "id": 55055,
              "nodeType": "Block",
              "src": "723:44:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55051,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55000,
                        "src": "740:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$36572",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 55052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "750:8:61",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36533,
                      "src": "740:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 55053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:20:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 55050,
                  "id": 55054,
                  "nodeType": "Return",
                  "src": "733:27:61"
                }
              ]
            },
            "functionSelector": "f0141d84",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDecimals",
            "nameLocation": "681:11:61",
            "parameters": {
              "id": 55047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:2:61"
            },
            "returnParameters": {
              "id": 55050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55056,
                  "src": "716:5:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 55048,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:5:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:7:61"
            },
            "scope": 55057,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ChainlinkETHUSDPriceConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55057
        ],
        "name": "ChainlinkETHUSDPriceConsumer",
        "nameLocation": "107:28:61",
        "scope": 55058,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 61
}